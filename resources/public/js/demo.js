if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2411";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__5892__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__5892 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__5892__delegate.call(this, args);
    };
    G__5892.cljs$lang$maxFixedArity = 0;
    G__5892.cljs$lang$applyTo = function(arglist__5893) {
      var args = cljs.core.seq(arglist__5893);
      return G__5892__delegate(args);
    };
    G__5892.cljs$core$IFn$_invoke$arity$variadic = G__5892__delegate;
    return G__5892;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3596__auto__ = ty;
    if (cljs.core.truth_(and__3596__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3596__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4490__auto___5894 = len;
  var i_5895 = 0;
  while (true) {
    if (i_5895 < n__4490__auto___5894) {
      new_arr[i_5895] = arr[i_5895];
      var G__5896 = i_5895 + 1;
      i_5895 = G__5896;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__5897__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__5897 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5897__delegate.call(this, array, i, idxs);
    };
    G__5897.cljs$lang$maxFixedArity = 2;
    G__5897.cljs$lang$applyTo = function(arglist__5898) {
      var array = cljs.core.first(arglist__5898);
      arglist__5898 = cljs.core.next(arglist__5898);
      var i = cljs.core.first(arglist__5898);
      var idxs = cljs.core.rest(arglist__5898);
      return G__5897__delegate(array, i, idxs);
    };
    G__5897.cljs$core$IFn$_invoke$arity$variadic = G__5897__delegate;
    return G__5897;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__5899__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__5899 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5899__delegate.call(this, array, idx, idx2, idxv);
    };
    G__5899.cljs$lang$maxFixedArity = 3;
    G__5899.cljs$lang$applyTo = function(arglist__5900) {
      var array = cljs.core.first(arglist__5900);
      arglist__5900 = cljs.core.next(arglist__5900);
      var idx = cljs.core.first(arglist__5900);
      arglist__5900 = cljs.core.next(arglist__5900);
      var idx2 = cljs.core.first(arglist__5900);
      var idxv = cljs.core.rest(arglist__5900);
      return G__5899__delegate(array, idx, idx2, idxv);
    };
    G__5899.cljs$core$IFn$_invoke$arity$variadic = G__5899__delegate;
    return G__5899;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.call(null, args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__5901) {
    var obj = cljs.core.first(arglist__5901);
    arglist__5901 = cljs.core.next(arglist__5901);
    var s = cljs.core.first(arglist__5901);
    var args = cljs.core.rest(arglist__5901);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj5903 = {};
  return obj5903;
}();
cljs.core.IFn = function() {
  var obj5905 = {};
  return obj5905;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = cljs.core._invoke[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._invoke["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj5907 = {};
  return obj5907;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3596__auto__ = value;
    if (and__3596__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4247__auto__ = value == null ? null : value;
    return function() {
      var or__3608__auto__ = cljs.core._clone[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._clone["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj5909 = {};
  return obj5909;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._count[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._count["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj5911 = {};
  return obj5911;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._empty[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._empty["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj5913 = {};
  return obj5913;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._conj[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._conj["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj5915 = {};
  return obj5915;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3596__auto__ = coll;
      if (and__3596__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4247__auto__ = coll == null ? null : coll;
      return function() {
        var or__3608__auto__ = cljs.core._nth[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._nth["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3596__auto__ = coll;
      if (and__3596__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4247__auto__ = coll == null ? null : coll;
      return function() {
        var or__3608__auto__ = cljs.core._nth[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._nth["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj5917 = {};
  return obj5917;
}();
cljs.core.ISeq = function() {
  var obj5919 = {};
  return obj5919;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._first[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._first["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._rest[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._rest["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj5921 = {};
  return obj5921;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._next[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._next["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj5923 = {};
  return obj5923;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3596__auto__ = o;
      if (and__3596__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4247__auto__ = o == null ? null : o;
      return function() {
        var or__3608__auto__ = cljs.core._lookup[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._lookup["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3596__auto__ = o;
      if (and__3596__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4247__auto__ = o == null ? null : o;
      return function() {
        var or__3608__auto__ = cljs.core._lookup[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._lookup["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj5925 = {};
  return obj5925;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._assoc[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._assoc["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj5927 = {};
  return obj5927;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._dissoc[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._dissoc["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj5929 = {};
  return obj5929;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._key[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._key["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._val[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._val["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj5931 = {};
  return obj5931;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._disjoin[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._disjoin["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj5933 = {};
  return obj5933;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._peek[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._peek["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._pop[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._pop["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj5935 = {};
  return obj5935;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._assoc_n[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj5937 = {};
  return obj5937;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3596__auto__ = o;
    if (and__3596__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4247__auto__ = o == null ? null : o;
    return function() {
      var or__3608__auto__ = cljs.core._deref[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._deref["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj5939 = {};
  return obj5939;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3596__auto__ = o;
    if (and__3596__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4247__auto__ = o == null ? null : o;
    return function() {
      var or__3608__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj5941 = {};
  return obj5941;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3596__auto__ = o;
    if (and__3596__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4247__auto__ = o == null ? null : o;
    return function() {
      var or__3608__auto__ = cljs.core._meta[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._meta["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj5943 = {};
  return obj5943;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3596__auto__ = o;
    if (and__3596__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4247__auto__ = o == null ? null : o;
    return function() {
      var or__3608__auto__ = cljs.core._with_meta[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._with_meta["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj5945 = {};
  return obj5945;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3596__auto__ = coll;
      if (and__3596__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4247__auto__ = coll == null ? null : coll;
      return function() {
        var or__3608__auto__ = cljs.core._reduce[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._reduce["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3596__auto__ = coll;
      if (and__3596__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4247__auto__ = coll == null ? null : coll;
      return function() {
        var or__3608__auto__ = cljs.core._reduce[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._reduce["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj5947 = {};
  return obj5947;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj5949 = {};
  return obj5949;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3596__auto__ = o;
    if (and__3596__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4247__auto__ = o == null ? null : o;
    return function() {
      var or__3608__auto__ = cljs.core._equiv[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._equiv["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj5951 = {};
  return obj5951;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3596__auto__ = o;
    if (and__3596__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4247__auto__ = o == null ? null : o;
    return function() {
      var or__3608__auto__ = cljs.core._hash[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._hash["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj5953 = {};
  return obj5953;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3596__auto__ = o;
    if (and__3596__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4247__auto__ = o == null ? null : o;
    return function() {
      var or__3608__auto__ = cljs.core._seq[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._seq["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj5955 = {};
  return obj5955;
}();
cljs.core.IList = function() {
  var obj5957 = {};
  return obj5957;
}();
cljs.core.IRecord = function() {
  var obj5959 = {};
  return obj5959;
}();
cljs.core.IReversible = function() {
  var obj5961 = {};
  return obj5961;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._rseq[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._rseq["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj5963 = {};
  return obj5963;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._entry_key[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._entry_key["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._comparator[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._comparator["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj5965 = {};
  return obj5965;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3596__auto__ = writer;
    if (and__3596__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4247__auto__ = writer == null ? null : writer;
    return function() {
      var or__3608__auto__ = cljs.core._write[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._write["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3596__auto__ = writer;
    if (and__3596__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4247__auto__ = writer == null ? null : writer;
    return function() {
      var or__3608__auto__ = cljs.core._flush[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._flush["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj5967 = {};
  return obj5967;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3596__auto__ = o;
    if (and__3596__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4247__auto__ = o == null ? null : o;
    return function() {
      var or__3608__auto__ = cljs.core._pr_writer[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj5969 = {};
  return obj5969;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3596__auto__ = d;
    if (and__3596__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4247__auto__ = d == null ? null : d;
    return function() {
      var or__3608__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj5971 = {};
  return obj5971;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs.core._notify_watches[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs.core._add_watch[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._add_watch["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs.core._remove_watch[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj5973 = {};
  return obj5973;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._as_transient[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._as_transient["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj5975 = {};
  return obj5975;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3596__auto__ = tcoll;
    if (and__3596__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4247__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3608__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3596__auto__ = tcoll;
    if (and__3596__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4247__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3608__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj5977 = {};
  return obj5977;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3596__auto__ = tcoll;
    if (and__3596__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4247__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3608__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj5979 = {};
  return obj5979;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3596__auto__ = tcoll;
    if (and__3596__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4247__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3608__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj5981 = {};
  return obj5981;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3596__auto__ = tcoll;
    if (and__3596__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4247__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3608__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3596__auto__ = tcoll;
    if (and__3596__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4247__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3608__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj5983 = {};
  return obj5983;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3596__auto__ = tcoll;
    if (and__3596__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4247__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3608__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj5985 = {};
  return obj5985;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3596__auto__ = x;
    if (and__3596__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4247__auto__ = x == null ? null : x;
    return function() {
      var or__3608__auto__ = cljs.core._compare[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._compare["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj5987 = {};
  return obj5987;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._drop_first[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._drop_first["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj5989 = {};
  return obj5989;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._chunked_first[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj5991 = {};
  return obj5991;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._chunked_next[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj5993 = {};
  return obj5993;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3596__auto__ = x;
    if (and__3596__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4247__auto__ = x == null ? null : x;
    return function() {
      var or__3608__auto__ = cljs.core._name[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._name["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3596__auto__ = x;
    if (and__3596__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4247__auto__ = x == null ? null : x;
    return function() {
      var or__3608__auto__ = cljs.core._namespace[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._namespace["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj5995 = {};
  return obj5995;
}();
cljs.core.IReset = function() {
  var obj5997 = {};
  return obj5997;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3596__auto__ = o;
    if (and__3596__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4247__auto__ = o == null ? null : o;
    return function() {
      var or__3608__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj5999 = {};
  return obj5999;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3596__auto__ = o;
      if (and__3596__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4247__auto__ = o == null ? null : o;
      return function() {
        var or__3608__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3596__auto__ = o;
      if (and__3596__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4247__auto__ = o == null ? null : o;
      return function() {
        var or__3608__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3596__auto__ = o;
      if (and__3596__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4247__auto__ = o == null ? null : o;
      return function() {
        var or__3608__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3596__auto__ = o;
      if (and__3596__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4247__auto__ = o == null ? null : o;
      return function() {
        var or__3608__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IIterable = function() {
  var obj6001 = {};
  return obj6001;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3596__auto__ = coll;
    if (and__3596__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4247__auto__ = coll == null ? null : coll;
    return function() {
      var or__3608__auto__ = cljs.core._iterator[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._iterator["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__6002 = i + 2;
        var G__6003 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__6002;
        h1 = G__6003;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj6005 = {};
  return obj6005;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__6006 = i + 1;
          var G__6007 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__6006;
          hash = G__6007;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj6011 = {};
      return obj6011;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__6013 = o;
    if (G__6013) {
      var bit__4277__auto__ = G__6013.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4277__auto__ || G__6013.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash.call(null, o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3596__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3596__auto__) {
        return b.ns;
      } else {
        return and__3596__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4024__auto__ = self__._hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__6015 = null;
  var G__6015__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__6015__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__6015 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6015__2.call(this, self__, coll);
      case 3:
        return G__6015__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6015.cljs$core$IFn$_invoke$arity$2 = G__6015__2;
  G__6015.cljs$core$IFn$_invoke$arity$3 = G__6015__3;
  return G__6015;
}();
cljs.core.Symbol.prototype.apply = function(self__, args6014) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6014)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__6017 = x;
  if (G__6017) {
    var bit__4284__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3608__auto__ = bit__4284__auto__;
      if (cljs.core.truth_(or__3608__auto__)) {
        return or__3608__auto__;
      } else {
        return G__6017.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__6017.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__6017);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__6017);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__6019 = value;
  if (G__6019) {
    var bit__4284__auto__ = G__6019.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4284__auto__ || G__6019.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__6019.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__6019);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__6019);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6021 = coll;
      if (G__6021) {
        var bit__4277__auto__ = G__6021.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4277__auto__ || G__6021.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6023 = coll;
      if (G__6023) {
        var bit__4277__auto__ = G__6023.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4277__auto__ || G__6023.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__6025 = coll;
      if (G__6025) {
        var bit__4277__auto__ = G__6025.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4277__auto__ || G__6025.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6027 = coll;
      if (G__6027) {
        var bit__4277__auto__ = G__6027.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4277__auto__ || G__6027.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__6028__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__6029 = y;
            var G__6030 = cljs.core.first.call(null, more);
            var G__6031 = cljs.core.next.call(null, more);
            x = G__6029;
            y = G__6030;
            more = G__6031;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6028 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6028__delegate.call(this, x, y, more);
    };
    G__6028.cljs$lang$maxFixedArity = 2;
    G__6028.cljs$lang$applyTo = function(arglist__6032) {
      var x = cljs.core.first(arglist__6032);
      arglist__6032 = cljs.core.next(arglist__6032);
      var y = cljs.core.first(arglist__6032);
      var more = cljs.core.rest(arglist__6032);
      return G__6028__delegate(x, y, more);
    };
    G__6028.cljs$core$IFn$_invoke$arity$variadic = G__6028__delegate;
    return G__6028;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6033 = n + 1;
      var G__6034 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__6035 = cljs.core.next.call(null, coll__$1);
      n = G__6033;
      hash_code = G__6034;
      coll__$1 = G__6035;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6036 = n + 1;
      var G__6037 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__6038 = cljs.core.next.call(null, coll__$1);
      n = G__6036;
      hash_code = G__6037;
      coll__$1 = G__6038;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_.call(null, x)) {
    return x;
  } else {
    return cljs.core.reduced.call(null, x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__6039 = nval;
            var G__6040 = n + 1;
            val = G__6039;
            n = G__6040;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6041 = nval;
          var G__6042 = n + 1;
          val__$1 = G__6041;
          n = G__6042;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6043 = nval;
          var G__6044 = n + 1;
          val__$1 = G__6043;
          n = G__6044;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__6045 = nval;
            var G__6046 = n + 1;
            val = G__6045;
            n = G__6046;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6047 = nval;
          var G__6048 = n + 1;
          val__$1 = G__6047;
          n = G__6048;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6049 = nval;
          var G__6050 = n + 1;
          val__$1 = G__6049;
          n = G__6050;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__6052 = x;
  if (G__6052) {
    var bit__4284__auto__ = G__6052.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4284__auto__ || G__6052.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__6052.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__6052);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__6052);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__6054 = x;
  if (G__6054) {
    var bit__4284__auto__ = G__6054.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4284__auto__ || G__6054.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__6054.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__6054);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__6054);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__6055 = sn;
      s = G__6055;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__6056__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__6057 = conj.call(null, coll, x);
          var G__6058 = cljs.core.first.call(null, xs);
          var G__6059 = cljs.core.next.call(null, xs);
          coll = G__6057;
          x = G__6058;
          xs = G__6059;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__6056 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6056__delegate.call(this, coll, x, xs);
    };
    G__6056.cljs$lang$maxFixedArity = 2;
    G__6056.cljs$lang$applyTo = function(arglist__6060) {
      var coll = cljs.core.first(arglist__6060);
      arglist__6060 = cljs.core.next(arglist__6060);
      var x = cljs.core.first(arglist__6060);
      var xs = cljs.core.rest(arglist__6060);
      return G__6056__delegate(coll, x, xs);
    };
    G__6056.cljs$core$IFn$_invoke$arity$variadic = G__6056__delegate;
    return G__6056;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__6061 = cljs.core.next.call(null, s);
      var G__6062 = acc + 1;
      s = G__6061;
      acc = G__6062;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__6064 = coll;
      if (G__6064) {
        var bit__4277__auto__ = G__6064.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4277__auto__ || G__6064.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__6065 = cljs.core.next.call(null, coll);
              var G__6066 = n - 1;
              coll = G__6065;
              n = G__6066;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__6067 = cljs.core.next.call(null, coll);
              var G__6068 = n - 1;
              var G__6069 = not_found;
              coll = G__6067;
              n = G__6068;
              not_found = G__6069;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__6074 = coll;
          if (G__6074) {
            var bit__4277__auto__ = G__6074.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4277__auto__ || G__6074.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__6075 = coll;
                  if (G__6075) {
                    var bit__4284__auto__ = G__6075.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4284__auto__ || G__6075.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__6075.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6075);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6075);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__6076 = coll;
          if (G__6076) {
            var bit__4277__auto__ = G__6076.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4277__auto__ || G__6076.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__6077 = coll;
                  if (G__6077) {
                    var bit__4284__auto__ = G__6077.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4284__auto__ || G__6077.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__6077.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6077);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6077);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq.call(null, xs)) {
      var G__6078 = n__$1 - 1;
      var G__6079 = cljs.core.rest.call(null, xs);
      n__$1 = G__6078;
      xs = G__6079;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__6082 = o;
        if (G__6082) {
          var bit__4277__auto__ = G__6082.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4277__auto__ || G__6082.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__6083 = o;
        if (G__6083) {
          var bit__4277__auto__ = G__6083.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4277__auto__ || G__6083.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__6084__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__6085 = ret;
          var G__6086 = cljs.core.first.call(null, kvs);
          var G__6087 = cljs.core.second.call(null, kvs);
          var G__6088 = cljs.core.nnext.call(null, kvs);
          coll = G__6085;
          k = G__6086;
          v = G__6087;
          kvs = G__6088;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__6084 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6084__delegate.call(this, coll, k, v, kvs);
    };
    G__6084.cljs$lang$maxFixedArity = 3;
    G__6084.cljs$lang$applyTo = function(arglist__6089) {
      var coll = cljs.core.first(arglist__6089);
      arglist__6089 = cljs.core.next(arglist__6089);
      var k = cljs.core.first(arglist__6089);
      arglist__6089 = cljs.core.next(arglist__6089);
      var v = cljs.core.first(arglist__6089);
      var kvs = cljs.core.rest(arglist__6089);
      return G__6084__delegate(coll, k, v, kvs);
    };
    G__6084.cljs$core$IFn$_invoke$arity$variadic = G__6084__delegate;
    return G__6084;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__6090__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6091 = ret;
            var G__6092 = cljs.core.first.call(null, ks);
            var G__6093 = cljs.core.next.call(null, ks);
            coll = G__6091;
            k = G__6092;
            ks = G__6093;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6090 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6090__delegate.call(this, coll, k, ks);
    };
    G__6090.cljs$lang$maxFixedArity = 2;
    G__6090.cljs$lang$applyTo = function(arglist__6094) {
      var coll = cljs.core.first(arglist__6094);
      arglist__6094 = cljs.core.next(arglist__6094);
      var k = cljs.core.first(arglist__6094);
      var ks = cljs.core.rest(arglist__6094);
      return G__6090__delegate(coll, k, ks);
    };
    G__6090.cljs$core$IFn$_invoke$arity$variadic = G__6090__delegate;
    return G__6090;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3608__auto__ = goog.isFunction(f);
  if (or__3608__auto__) {
    return or__3608__auto__;
  } else {
    var G__6098 = f;
    if (G__6098) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto____$1 = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto____$1)) {
          return or__3608__auto____$1;
        } else {
          return G__6098.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__6098.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__6098);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__6098);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__6100 = null;
  var G__6100__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__6100__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__6100__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__6100__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__6100__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__6100__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__6100__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__6100__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__6100__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__6100__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6100__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6100__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6100__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6100__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6100__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6100__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6100__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6100__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6100__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6100__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6100__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6100__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__6100 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6100__1.call(this, self__);
      case 2:
        return G__6100__2.call(this, self__, a);
      case 3:
        return G__6100__3.call(this, self__, a, b);
      case 4:
        return G__6100__4.call(this, self__, a, b, c);
      case 5:
        return G__6100__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6100__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6100__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6100__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6100__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6100__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6100__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6100__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6100__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6100__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6100__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6100__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6100__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6100__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6100__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6100__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6100__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6100__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6100.cljs$core$IFn$_invoke$arity$1 = G__6100__1;
  G__6100.cljs$core$IFn$_invoke$arity$2 = G__6100__2;
  G__6100.cljs$core$IFn$_invoke$arity$3 = G__6100__3;
  G__6100.cljs$core$IFn$_invoke$arity$4 = G__6100__4;
  G__6100.cljs$core$IFn$_invoke$arity$5 = G__6100__5;
  G__6100.cljs$core$IFn$_invoke$arity$6 = G__6100__6;
  G__6100.cljs$core$IFn$_invoke$arity$7 = G__6100__7;
  G__6100.cljs$core$IFn$_invoke$arity$8 = G__6100__8;
  G__6100.cljs$core$IFn$_invoke$arity$9 = G__6100__9;
  G__6100.cljs$core$IFn$_invoke$arity$10 = G__6100__10;
  G__6100.cljs$core$IFn$_invoke$arity$11 = G__6100__11;
  G__6100.cljs$core$IFn$_invoke$arity$12 = G__6100__12;
  G__6100.cljs$core$IFn$_invoke$arity$13 = G__6100__13;
  G__6100.cljs$core$IFn$_invoke$arity$14 = G__6100__14;
  G__6100.cljs$core$IFn$_invoke$arity$15 = G__6100__15;
  G__6100.cljs$core$IFn$_invoke$arity$16 = G__6100__16;
  G__6100.cljs$core$IFn$_invoke$arity$17 = G__6100__17;
  G__6100.cljs$core$IFn$_invoke$arity$18 = G__6100__18;
  G__6100.cljs$core$IFn$_invoke$arity$19 = G__6100__19;
  G__6100.cljs$core$IFn$_invoke$arity$20 = G__6100__20;
  G__6100.cljs$core$IFn$_invoke$arity$21 = G__6100__21;
  G__6100.cljs$core$IFn$_invoke$arity$22 = G__6100__22;
  return G__6100;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args6099) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6099)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__6104 = o;
    if (G__6104) {
      var bit__4284__auto__ = G__6104.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4284__auto__ || G__6104.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6104.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6104);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6104);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3596__auto__ = !(o == null);
    if (and__3596__auto__) {
      var G__6108 = o;
      if (G__6108) {
        var bit__4284__auto__ = G__6108.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4284__auto__ || G__6108.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__6108.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6108);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6108);
      }
    } else {
      return and__3596__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__6109__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6110 = ret;
            var G__6111 = cljs.core.first.call(null, ks);
            var G__6112 = cljs.core.next.call(null, ks);
            coll = G__6110;
            k = G__6111;
            ks = G__6112;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6109 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6109__delegate.call(this, coll, k, ks);
    };
    G__6109.cljs$lang$maxFixedArity = 2;
    G__6109.cljs$lang$applyTo = function(arglist__6113) {
      var coll = cljs.core.first(arglist__6113);
      arglist__6113 = cljs.core.next(arglist__6113);
      var k = cljs.core.first(arglist__6113);
      var ks = cljs.core.rest(arglist__6113);
      return G__6109__delegate(coll, k, ks);
    };
    G__6109.cljs$core$IFn$_invoke$arity$variadic = G__6109__delegate;
    return G__6109;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6115 = x;
    if (G__6115) {
      var bit__4284__auto__ = G__6115.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4284__auto__ || G__6115.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__6115.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__6115);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__6115);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6117 = x;
    if (G__6117) {
      var bit__4284__auto__ = G__6117.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4284__auto__ || G__6117.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__6117.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__6117);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__6117);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__6119 = x;
  if (G__6119) {
    var bit__4284__auto__ = G__6119.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4284__auto__ || G__6119.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__6119.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__6119);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__6119);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__6121 = x;
  if (G__6121) {
    var bit__4284__auto__ = G__6121.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4284__auto__ || G__6121.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__6121.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__6121);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__6121);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__6123 = x;
  if (G__6123) {
    var bit__4284__auto__ = G__6123.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4284__auto__ || G__6123.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__6123.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__6123);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__6123);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__6125 = x;
  if (G__6125) {
    var bit__4284__auto__ = G__6125.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4284__auto__ || G__6125.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__6125.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__6125);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__6125);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6127 = x;
    if (G__6127) {
      var bit__4284__auto__ = G__6127.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4284__auto__ || G__6127.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__6127.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__6127);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__6127);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__6129 = x;
  if (G__6129) {
    var bit__4284__auto__ = G__6129.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4284__auto__ || G__6129.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__6129.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__6129);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__6129);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__6131 = x;
  if (G__6131) {
    var bit__4277__auto__ = G__6131.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4277__auto__ || G__6131.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj6135 = {};
    return obj6135;
  };
  var js_obj__1 = function() {
    var G__6136__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__6136 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6136__delegate.call(this, keyvals);
    };
    G__6136.cljs$lang$maxFixedArity = 0;
    G__6136.cljs$lang$applyTo = function(arglist__6137) {
      var keyvals = cljs.core.seq(arglist__6137);
      return G__6136__delegate(keyvals);
    };
    G__6136.cljs$core$IFn$_invoke$arity$variadic = G__6136__delegate;
    return G__6136;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6138 = i__$1 + 1;
      var G__6139 = j__$1 + 1;
      var G__6140 = len__$1 - 1;
      i__$1 = G__6138;
      j__$1 = G__6139;
      len__$1 = G__6140;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6141 = i__$1 - 1;
      var G__6142 = j__$1 - 1;
      var G__6143 = len__$1 - 1;
      i__$1 = G__6141;
      j__$1 = G__6142;
      len__$1 = G__6143;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj6145 = {};
  return obj6145;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__6147 = s;
    if (G__6147) {
      var bit__4284__auto__ = G__6147.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4284__auto__ || G__6147.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__6147.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6147);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6147);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__6149 = s;
  if (G__6149) {
    var bit__4284__auto__ = G__6149.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4284__auto__ || G__6149.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__6149.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__6149);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__6149);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3608__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3608__auto__) {
    return or__3608__auto__;
  } else {
    var G__6153 = f;
    if (G__6153) {
      var bit__4284__auto__ = G__6153.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4284__auto__ || G__6153.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__6153.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__6153);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__6153);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__6154__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__6155 = cljs.core.conj.call(null, s, x__$1);
              var G__6156 = etc;
              s = G__6155;
              xs = G__6156;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__6154 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6154__delegate.call(this, x, y, more);
    };
    G__6154.cljs$lang$maxFixedArity = 2;
    G__6154.cljs$lang$applyTo = function(arglist__6157) {
      var x = cljs.core.first(arglist__6157);
      arglist__6157 = cljs.core.next(arglist__6157);
      var y = cljs.core.first(arglist__6157);
      var more = cljs.core.rest(arglist__6157);
      return G__6154__delegate(x, y, more);
    };
    G__6154.cljs$core$IFn$_invoke$arity$variadic = G__6154__delegate;
    return G__6154;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3608__auto__ = cljs.core.seq.call(null, coll);
    if (or__3608__auto__) {
      return or__3608__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__6159 = x;
            if (G__6159) {
              var bit__4277__auto__ = G__6159.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4277__auto__ || G__6159.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__6160 = xs;
        var G__6161 = ys;
        var G__6162 = len;
        var G__6163 = n + 1;
        xs = G__6160;
        ys = G__6161;
        len = G__6162;
        n = G__6163;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6164 = nval;
          var G__6165 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__6164;
          coll__$1 = G__6165;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__6168 = coll;
      if (G__6168) {
        var bit__4277__auto__ = G__6168.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4277__auto__ || G__6168.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__6169 = coll;
      if (G__6169) {
        var bit__4277__auto__ = G__6169.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4277__auto__ || G__6169.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.call(null, f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__6170 = null;
      var G__6170__0 = function() {
        return f.call(null);
      };
      var G__6170__1 = function(x) {
        return cf.call(null, x);
      };
      var G__6170__2 = function(x, y) {
        return f.call(null, x, y);
      };
      G__6170 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__6170__0.call(this);
          case 1:
            return G__6170__1.call(this, x);
          case 2:
            return G__6170__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6170.cljs$core$IFn$_invoke$arity$0 = G__6170__0;
      G__6170.cljs$core$IFn$_invoke$arity$1 = G__6170__1;
      G__6170.cljs$core$IFn$_invoke$arity$2 = G__6170__2;
      return G__6170;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, f);
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    return f__$1.call(null, ret);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__6171__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__6171 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6171__delegate.call(this, x, y, more);
    };
    G__6171.cljs$lang$maxFixedArity = 2;
    G__6171.cljs$lang$applyTo = function(arglist__6172) {
      var x = cljs.core.first(arglist__6172);
      arglist__6172 = cljs.core.next(arglist__6172);
      var y = cljs.core.first(arglist__6172);
      var more = cljs.core.rest(arglist__6172);
      return G__6171__delegate(x, y, more);
    };
    G__6171.cljs$core$IFn$_invoke$arity$variadic = G__6171__delegate;
    return G__6171;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__6173__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__6173 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6173__delegate.call(this, x, y, more);
    };
    G__6173.cljs$lang$maxFixedArity = 2;
    G__6173.cljs$lang$applyTo = function(arglist__6174) {
      var x = cljs.core.first(arglist__6174);
      arglist__6174 = cljs.core.next(arglist__6174);
      var y = cljs.core.first(arglist__6174);
      var more = cljs.core.rest(arglist__6174);
      return G__6173__delegate(x, y, more);
    };
    G__6173.cljs$core$IFn$_invoke$arity$variadic = G__6173__delegate;
    return G__6173;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__6175__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__6175 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6175__delegate.call(this, x, y, more);
    };
    G__6175.cljs$lang$maxFixedArity = 2;
    G__6175.cljs$lang$applyTo = function(arglist__6176) {
      var x = cljs.core.first(arglist__6176);
      arglist__6176 = cljs.core.next(arglist__6176);
      var y = cljs.core.first(arglist__6176);
      var more = cljs.core.rest(arglist__6176);
      return G__6175__delegate(x, y, more);
    };
    G__6175.cljs$core$IFn$_invoke$arity$variadic = G__6175__delegate;
    return G__6175;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__6177__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__6177 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6177__delegate.call(this, x, y, more);
    };
    G__6177.cljs$lang$maxFixedArity = 2;
    G__6177.cljs$lang$applyTo = function(arglist__6178) {
      var x = cljs.core.first(arglist__6178);
      arglist__6178 = cljs.core.next(arglist__6178);
      var y = cljs.core.first(arglist__6178);
      var more = cljs.core.rest(arglist__6178);
      return G__6177__delegate(x, y, more);
    };
    G__6177.cljs$core$IFn$_invoke$arity$variadic = G__6177__delegate;
    return G__6177;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__6179__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__6180 = y;
            var G__6181 = cljs.core.first.call(null, more);
            var G__6182 = cljs.core.next.call(null, more);
            x = G__6180;
            y = G__6181;
            more = G__6182;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6179 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6179__delegate.call(this, x, y, more);
    };
    G__6179.cljs$lang$maxFixedArity = 2;
    G__6179.cljs$lang$applyTo = function(arglist__6183) {
      var x = cljs.core.first(arglist__6183);
      arglist__6183 = cljs.core.next(arglist__6183);
      var y = cljs.core.first(arglist__6183);
      var more = cljs.core.rest(arglist__6183);
      return G__6179__delegate(x, y, more);
    };
    G__6179.cljs$core$IFn$_invoke$arity$variadic = G__6179__delegate;
    return G__6179;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__6184__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__6185 = y;
            var G__6186 = cljs.core.first.call(null, more);
            var G__6187 = cljs.core.next.call(null, more);
            x = G__6185;
            y = G__6186;
            more = G__6187;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6184 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6184__delegate.call(this, x, y, more);
    };
    G__6184.cljs$lang$maxFixedArity = 2;
    G__6184.cljs$lang$applyTo = function(arglist__6188) {
      var x = cljs.core.first(arglist__6188);
      arglist__6188 = cljs.core.next(arglist__6188);
      var y = cljs.core.first(arglist__6188);
      var more = cljs.core.rest(arglist__6188);
      return G__6184__delegate(x, y, more);
    };
    G__6184.cljs$core$IFn$_invoke$arity$variadic = G__6184__delegate;
    return G__6184;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__6189__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__6190 = y;
            var G__6191 = cljs.core.first.call(null, more);
            var G__6192 = cljs.core.next.call(null, more);
            x = G__6190;
            y = G__6191;
            more = G__6192;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6189 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6189__delegate.call(this, x, y, more);
    };
    G__6189.cljs$lang$maxFixedArity = 2;
    G__6189.cljs$lang$applyTo = function(arglist__6193) {
      var x = cljs.core.first(arglist__6193);
      arglist__6193 = cljs.core.next(arglist__6193);
      var y = cljs.core.first(arglist__6193);
      var more = cljs.core.rest(arglist__6193);
      return G__6189__delegate(x, y, more);
    };
    G__6189.cljs$core$IFn$_invoke$arity$variadic = G__6189__delegate;
    return G__6189;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__6194__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__6195 = y;
            var G__6196 = cljs.core.first.call(null, more);
            var G__6197 = cljs.core.next.call(null, more);
            x = G__6195;
            y = G__6196;
            more = G__6197;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6194 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6194__delegate.call(this, x, y, more);
    };
    G__6194.cljs$lang$maxFixedArity = 2;
    G__6194.cljs$lang$applyTo = function(arglist__6198) {
      var x = cljs.core.first(arglist__6198);
      arglist__6198 = cljs.core.next(arglist__6198);
      var y = cljs.core.first(arglist__6198);
      var more = cljs.core.rest(arglist__6198);
      return G__6194__delegate(x, y, more);
    };
    G__6194.cljs$core$IFn$_invoke$arity$variadic = G__6194__delegate;
    return G__6194;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3920__auto__ = x;
    var y__3921__auto__ = y;
    return x__3920__auto__ > y__3921__auto__ ? x__3920__auto__ : y__3921__auto__;
  };
  var max__3 = function() {
    var G__6199__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3920__auto__ = x;
        var y__3921__auto__ = y;
        return x__3920__auto__ > y__3921__auto__ ? x__3920__auto__ : y__3921__auto__;
      }(), more);
    };
    var G__6199 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6199__delegate.call(this, x, y, more);
    };
    G__6199.cljs$lang$maxFixedArity = 2;
    G__6199.cljs$lang$applyTo = function(arglist__6200) {
      var x = cljs.core.first(arglist__6200);
      arglist__6200 = cljs.core.next(arglist__6200);
      var y = cljs.core.first(arglist__6200);
      var more = cljs.core.rest(arglist__6200);
      return G__6199__delegate(x, y, more);
    };
    G__6199.cljs$core$IFn$_invoke$arity$variadic = G__6199__delegate;
    return G__6199;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3927__auto__ = x;
    var y__3928__auto__ = y;
    return x__3927__auto__ < y__3928__auto__ ? x__3927__auto__ : y__3928__auto__;
  };
  var min__3 = function() {
    var G__6201__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3927__auto__ = x;
        var y__3928__auto__ = y;
        return x__3927__auto__ < y__3928__auto__ ? x__3927__auto__ : y__3928__auto__;
      }(), more);
    };
    var G__6201 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6201__delegate.call(this, x, y, more);
    };
    G__6201.cljs$lang$maxFixedArity = 2;
    G__6201.cljs$lang$applyTo = function(arglist__6202) {
      var x = cljs.core.first(arglist__6202);
      arglist__6202 = cljs.core.next(arglist__6202);
      var y = cljs.core.first(arglist__6202);
      var more = cljs.core.rest(arglist__6202);
      return G__6201__delegate(x, y, more);
    };
    G__6201.cljs$core$IFn$_invoke$arity$variadic = G__6201__delegate;
    return G__6201;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__6203__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__6203 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6203__delegate.call(this, x, y, more);
    };
    G__6203.cljs$lang$maxFixedArity = 2;
    G__6203.cljs$lang$applyTo = function(arglist__6204) {
      var x = cljs.core.first(arglist__6204);
      arglist__6204 = cljs.core.next(arglist__6204);
      var y = cljs.core.first(arglist__6204);
      var more = cljs.core.rest(arglist__6204);
      return G__6203__delegate(x, y, more);
    };
    G__6203.cljs$core$IFn$_invoke$arity$variadic = G__6203__delegate;
    return G__6203;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__6205__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__6205 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6205__delegate.call(this, x, y, more);
    };
    G__6205.cljs$lang$maxFixedArity = 2;
    G__6205.cljs$lang$applyTo = function(arglist__6206) {
      var x = cljs.core.first(arglist__6206);
      arglist__6206 = cljs.core.next(arglist__6206);
      var y = cljs.core.first(arglist__6206);
      var more = cljs.core.rest(arglist__6206);
      return G__6205__delegate(x, y, more);
    };
    G__6205.cljs$core$IFn$_invoke$arity$variadic = G__6205__delegate;
    return G__6205;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__6207__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__6207 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6207__delegate.call(this, x, y, more);
    };
    G__6207.cljs$lang$maxFixedArity = 2;
    G__6207.cljs$lang$applyTo = function(arglist__6208) {
      var x = cljs.core.first(arglist__6208);
      arglist__6208 = cljs.core.next(arglist__6208);
      var y = cljs.core.first(arglist__6208);
      var more = cljs.core.rest(arglist__6208);
      return G__6207__delegate(x, y, more);
    };
    G__6207.cljs$core$IFn$_invoke$arity$variadic = G__6207__delegate;
    return G__6207;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__6209__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__6209 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6209__delegate.call(this, x, y, more);
    };
    G__6209.cljs$lang$maxFixedArity = 2;
    G__6209.cljs$lang$applyTo = function(arglist__6210) {
      var x = cljs.core.first(arglist__6210);
      arglist__6210 = cljs.core.next(arglist__6210);
      var y = cljs.core.first(arglist__6210);
      var more = cljs.core.rest(arglist__6210);
      return G__6209__delegate(x, y, more);
    };
    G__6209.cljs$core$IFn$_invoke$arity$variadic = G__6209__delegate;
    return G__6209;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__6211__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__6211 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6211__delegate.call(this, x, y, more);
    };
    G__6211.cljs$lang$maxFixedArity = 2;
    G__6211.cljs$lang$applyTo = function(arglist__6212) {
      var x = cljs.core.first(arglist__6212);
      arglist__6212 = cljs.core.next(arglist__6212);
      var y = cljs.core.first(arglist__6212);
      var more = cljs.core.rest(arglist__6212);
      return G__6211__delegate(x, y, more);
    };
    G__6211.cljs$core$IFn$_invoke$arity$variadic = G__6211__delegate;
    return G__6211;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__6213__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__6213 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6213__delegate.call(this, x, y, more);
    };
    G__6213.cljs$lang$maxFixedArity = 2;
    G__6213.cljs$lang$applyTo = function(arglist__6214) {
      var x = cljs.core.first(arglist__6214);
      arglist__6214 = cljs.core.next(arglist__6214);
      var y = cljs.core.first(arglist__6214);
      var more = cljs.core.rest(arglist__6214);
      return G__6213__delegate(x, y, more);
    };
    G__6213.cljs$core$IFn$_invoke$arity$variadic = G__6213__delegate;
    return G__6213;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__6215__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__6215 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6215__delegate.call(this, x, y, more);
    };
    G__6215.cljs$lang$maxFixedArity = 2;
    G__6215.cljs$lang$applyTo = function(arglist__6216) {
      var x = cljs.core.first(arglist__6216);
      arglist__6216 = cljs.core.next(arglist__6216);
      var y = cljs.core.first(arglist__6216);
      var more = cljs.core.rest(arglist__6216);
      return G__6215__delegate(x, y, more);
    };
    G__6215.cljs$core$IFn$_invoke$arity$variadic = G__6215__delegate;
    return G__6215;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__6217__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__6218 = y;
            var G__6219 = cljs.core.first.call(null, more);
            var G__6220 = cljs.core.next.call(null, more);
            x = G__6218;
            y = G__6219;
            more = G__6220;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6217 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6217__delegate.call(this, x, y, more);
    };
    G__6217.cljs$lang$maxFixedArity = 2;
    G__6217.cljs$lang$applyTo = function(arglist__6221) {
      var x = cljs.core.first(arglist__6221);
      arglist__6221 = cljs.core.next(arglist__6221);
      var y = cljs.core.first(arglist__6221);
      var more = cljs.core.rest(arglist__6221);
      return G__6217__delegate(x, y, more);
    };
    G__6217.cljs$core$IFn$_invoke$arity$variadic = G__6217__delegate;
    return G__6217;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__6222 = n__$1 - 1;
      var G__6223 = cljs.core.next.call(null, xs);
      n__$1 = G__6222;
      xs = G__6223;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return "" + x;
    }
  };
  var str__2 = function() {
    var G__6224__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__6225 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__6226 = cljs.core.next.call(null, more);
          sb = G__6225;
          more = G__6226;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__6224 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6224__delegate.call(this, x, ys);
    };
    G__6224.cljs$lang$maxFixedArity = 1;
    G__6224.cljs$lang$applyTo = function(arglist__6227) {
      var x = cljs.core.first(arglist__6227);
      var ys = cljs.core.rest(arglist__6227);
      return G__6224__delegate(x, ys);
    };
    G__6224.cljs$core$IFn$_invoke$arity$variadic = G__6224__delegate;
    return G__6224;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? cljs.core.counted_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, y) && !(cljs.core.count.call(null, x) === cljs.core.count.call(null, y)) ? false : function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__6228 = cljs.core.next.call(null, xs);
            var G__6229 = cljs.core.next.call(null, ys);
            xs = G__6228;
            ys = G__6229;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__6230 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__6231 = cljs.core.next.call(null, s);
        res = G__6230;
        s = G__6231;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__6232 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__6233 = cljs.core.next.call(null, s);
      h = G__6232;
      s = G__6233;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__6234 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__6235 = cljs.core.next.call(null, s__$1);
      h = G__6234;
      s__$1 = G__6235;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__6242_6248 = cljs.core.seq.call(null, fn_map);
  var chunk__6243_6249 = null;
  var count__6244_6250 = 0;
  var i__6245_6251 = 0;
  while (true) {
    if (i__6245_6251 < count__6244_6250) {
      var vec__6246_6252 = cljs.core._nth.call(null, chunk__6243_6249, i__6245_6251);
      var key_name_6253 = cljs.core.nth.call(null, vec__6246_6252, 0, null);
      var f_6254 = cljs.core.nth.call(null, vec__6246_6252, 1, null);
      var str_name_6255 = cljs.core.name.call(null, key_name_6253);
      obj[str_name_6255] = f_6254;
      var G__6256 = seq__6242_6248;
      var G__6257 = chunk__6243_6249;
      var G__6258 = count__6244_6250;
      var G__6259 = i__6245_6251 + 1;
      seq__6242_6248 = G__6256;
      chunk__6243_6249 = G__6257;
      count__6244_6250 = G__6258;
      i__6245_6251 = G__6259;
      continue;
    } else {
      var temp__4126__auto___6260 = cljs.core.seq.call(null, seq__6242_6248);
      if (temp__4126__auto___6260) {
        var seq__6242_6261__$1 = temp__4126__auto___6260;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6242_6261__$1)) {
          var c__4390__auto___6262 = cljs.core.chunk_first.call(null, seq__6242_6261__$1);
          var G__6263 = cljs.core.chunk_rest.call(null, seq__6242_6261__$1);
          var G__6264 = c__4390__auto___6262;
          var G__6265 = cljs.core.count.call(null, c__4390__auto___6262);
          var G__6266 = 0;
          seq__6242_6248 = G__6263;
          chunk__6243_6249 = G__6264;
          count__6244_6250 = G__6265;
          i__6245_6251 = G__6266;
          continue;
        } else {
          var vec__6247_6267 = cljs.core.first.call(null, seq__6242_6261__$1);
          var key_name_6268 = cljs.core.nth.call(null, vec__6247_6267, 0, null);
          var f_6269 = cljs.core.nth.call(null, vec__6247_6267, 1, null);
          var str_name_6270 = cljs.core.name.call(null, key_name_6268);
          obj[str_name_6270] = f_6269;
          var G__6271 = cljs.core.next.call(null, seq__6242_6261__$1);
          var G__6272 = null;
          var G__6273 = 0;
          var G__6274 = 0;
          seq__6242_6248 = G__6271;
          chunk__6243_6249 = G__6272;
          count__6244_6250 = G__6273;
          i__6245_6251 = G__6274;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__6276 = coll;
  if (G__6276) {
    var bit__4284__auto__ = G__6276.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4284__auto__ || G__6276.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__6276.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__6276);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__6276);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__6277 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__6277;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__6278 = i - 1;
        var G__6279 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__6278;
        r = G__6279;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__6280) {
    var xs = cljs.core.seq(arglist__6280);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3608__auto__ = coll == null;
    if (or__3608__auto__) {
      return or__3608__auto__;
    } else {
      var G__6284 = coll;
      if (G__6284) {
        var bit__4277__auto__ = G__6284.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4277__auto__ || G__6284.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__6286 = x;
  if (G__6286) {
    var bit__4284__auto__ = G__6286.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4284__auto__ || G__6286.cljs$core$IList$) {
      return true;
    } else {
      if (!G__6286.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__6286);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__6286);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4024__auto__ = self__._hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__6288 = null;
  var G__6288__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__6288__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__6288 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6288__2.call(this, self__, coll);
      case 3:
        return G__6288__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6288.cljs$core$IFn$_invoke$arity$2 = G__6288__2;
  G__6288.cljs$core$IFn$_invoke$arity$3 = G__6288__3;
  return G__6288;
}();
cljs.core.Keyword.prototype.apply = function(self__, args6287) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6287)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__6290 = x;
    if (G__6290) {
      var bit__4277__auto__ = G__6290.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4277__auto__ || G__6290.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__6291 = ls.sval();
        ls = G__6291;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__6293 = s;
    if (G__6293) {
      var bit__4277__auto__ = G__6293.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4277__auto__ || G__6293.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__6294 = cljs.core.next.call(null, s__$1);
      s__$1 = G__6294;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_6295 = 0;
  var xs_6296 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_6296) {
      ret[i_6295] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_6296));
      var G__6297 = i_6295 + 1;
      var G__6298 = cljs.core.next.call(null, xs_6296);
      i_6295 = G__6297;
      xs_6296 = G__6298;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6299 = i + 1;
          var G__6300 = cljs.core.next.call(null, s__$1);
          i = G__6299;
          s__$1 = G__6300;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4490__auto___6301 = size;
      var i_6302 = 0;
      while (true) {
        if (i_6302 < n__4490__auto___6301) {
          a[i_6302] = init_val_or_seq;
          var G__6303 = i_6302 + 1;
          i_6302 = G__6303;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6304 = i + 1;
          var G__6305 = cljs.core.next.call(null, s__$1);
          i = G__6304;
          s__$1 = G__6305;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4490__auto___6306 = size;
      var i_6307 = 0;
      while (true) {
        if (i_6307 < n__4490__auto___6306) {
          a[i_6307] = init_val_or_seq;
          var G__6308 = i_6307 + 1;
          i_6307 = G__6308;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6309 = i + 1;
          var G__6310 = cljs.core.next.call(null, s__$1);
          i = G__6309;
          s__$1 = G__6310;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4490__auto___6311 = size;
      var i_6312 = 0;
      while (true) {
        if (i_6312 < n__4490__auto___6311) {
          a[i_6312] = init_val_or_seq;
          var G__6313 = i_6312 + 1;
          i_6312 = G__6313;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6314 = i + 1;
          var G__6315 = cljs.core.next.call(null, s__$1);
          i = G__6314;
          s__$1 = G__6315;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4490__auto___6316 = size;
      var i_6317 = 0;
      while (true) {
        if (i_6317 < n__4490__auto___6316) {
          a[i_6317] = init_val_or_seq;
          var G__6318 = i_6317 + 1;
          i_6317 = G__6318;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__6319 = cljs.core.next.call(null, s__$1);
        var G__6320 = i - 1;
        var G__6321 = sum + 1;
        s__$1 = G__6319;
        i = G__6320;
        sum = G__6321;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__6322__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__6322 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6322__delegate.call(this, x, y, zs);
    };
    G__6322.cljs$lang$maxFixedArity = 2;
    G__6322.cljs$lang$applyTo = function(arglist__6323) {
      var x = cljs.core.first(arglist__6323);
      arglist__6323 = cljs.core.next(arglist__6323);
      var y = cljs.core.first(arglist__6323);
      var zs = cljs.core.rest(arglist__6323);
      return G__6322__delegate(x, y, zs);
    };
    G__6322.cljs$core$IFn$_invoke$arity$variadic = G__6322__delegate;
    return G__6322;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__6324__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__6324 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6324__delegate.call(this, a, b, c, d, more);
    };
    G__6324.cljs$lang$maxFixedArity = 4;
    G__6324.cljs$lang$applyTo = function(arglist__6325) {
      var a = cljs.core.first(arglist__6325);
      arglist__6325 = cljs.core.next(arglist__6325);
      var b = cljs.core.first(arglist__6325);
      arglist__6325 = cljs.core.next(arglist__6325);
      var c = cljs.core.first(arglist__6325);
      arglist__6325 = cljs.core.next(arglist__6325);
      var d = cljs.core.first(arglist__6325);
      var more = cljs.core.rest(arglist__6325);
      return G__6324__delegate(a, b, c, d, more);
    };
    G__6324.cljs$core$IFn$_invoke$arity$variadic = G__6324__delegate;
    return G__6324;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__6326__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6327 = ntcoll;
          var G__6328 = cljs.core.first.call(null, vals);
          var G__6329 = cljs.core.next.call(null, vals);
          tcoll = G__6327;
          val = G__6328;
          vals = G__6329;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6326 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6326__delegate.call(this, tcoll, val, vals);
    };
    G__6326.cljs$lang$maxFixedArity = 2;
    G__6326.cljs$lang$applyTo = function(arglist__6330) {
      var tcoll = cljs.core.first(arglist__6330);
      arglist__6330 = cljs.core.next(arglist__6330);
      var val = cljs.core.first(arglist__6330);
      var vals = cljs.core.rest(arglist__6330);
      return G__6326__delegate(tcoll, val, vals);
    };
    G__6326.cljs$core$IFn$_invoke$arity$variadic = G__6326__delegate;
    return G__6326;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__6331__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__6332 = ntcoll;
          var G__6333 = cljs.core.first.call(null, kvs);
          var G__6334 = cljs.core.second.call(null, kvs);
          var G__6335 = cljs.core.nnext.call(null, kvs);
          tcoll = G__6332;
          key = G__6333;
          val = G__6334;
          kvs = G__6335;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6331 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6331__delegate.call(this, tcoll, key, val, kvs);
    };
    G__6331.cljs$lang$maxFixedArity = 3;
    G__6331.cljs$lang$applyTo = function(arglist__6336) {
      var tcoll = cljs.core.first(arglist__6336);
      arglist__6336 = cljs.core.next(arglist__6336);
      var key = cljs.core.first(arglist__6336);
      arglist__6336 = cljs.core.next(arglist__6336);
      var val = cljs.core.first(arglist__6336);
      var kvs = cljs.core.rest(arglist__6336);
      return G__6331__delegate(tcoll, key, val, kvs);
    };
    G__6331.cljs$core$IFn$_invoke$arity$variadic = G__6331__delegate;
    return G__6331;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__6337__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__6338 = ntcoll;
          var G__6339 = cljs.core.first.call(null, ks);
          var G__6340 = cljs.core.next.call(null, ks);
          tcoll = G__6338;
          key = G__6339;
          ks = G__6340;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6337 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6337__delegate.call(this, tcoll, key, ks);
    };
    G__6337.cljs$lang$maxFixedArity = 2;
    G__6337.cljs$lang$applyTo = function(arglist__6341) {
      var tcoll = cljs.core.first(arglist__6341);
      arglist__6341 = cljs.core.next(arglist__6341);
      var key = cljs.core.first(arglist__6341);
      var ks = cljs.core.rest(arglist__6341);
      return G__6337__delegate(tcoll, key, ks);
    };
    G__6337.cljs$core$IFn$_invoke$arity$variadic = G__6337__delegate;
    return G__6337;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__6342__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6343 = ntcoll;
          var G__6344 = cljs.core.first.call(null, vals);
          var G__6345 = cljs.core.next.call(null, vals);
          tcoll = G__6343;
          val = G__6344;
          vals = G__6345;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6342 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6342__delegate.call(this, tcoll, val, vals);
    };
    G__6342.cljs$lang$maxFixedArity = 2;
    G__6342.cljs$lang$applyTo = function(arglist__6346) {
      var tcoll = cljs.core.first(arglist__6346);
      arglist__6346 = cljs.core.next(arglist__6346);
      var val = cljs.core.first(arglist__6346);
      var vals = cljs.core.rest(arglist__6346);
      return G__6342__delegate(tcoll, val, vals);
    };
    G__6342.cljs$core$IFn$_invoke$arity$variadic = G__6342__delegate;
    return G__6342;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4534 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4534);
      } else {
        return f.call(null, a4534);
      }
    } else {
      var b4535 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4534, b4535);
        } else {
          return f.call(null, a4534, b4535);
        }
      } else {
        var c4536 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4534, b4535, c4536);
          } else {
            return f.call(null, a4534, b4535, c4536);
          }
        } else {
          var d4537 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4534, b4535, c4536, d4537);
            } else {
              return f.call(null, a4534, b4535, c4536, d4537);
            }
          } else {
            var e4538 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4534, b4535, c4536, d4537, e4538);
              } else {
                return f.call(null, a4534, b4535, c4536, d4537, e4538);
              }
            } else {
              var f4539 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4534, b4535, c4536, d4537, e4538, f4539);
                } else {
                  return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539);
                }
              } else {
                var g4540 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4534, b4535, c4536, d4537, e4538, f4539, g4540);
                  } else {
                    return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540);
                  }
                } else {
                  var h4541 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541);
                    } else {
                      return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541);
                    }
                  } else {
                    var i4542 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542);
                      } else {
                        return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542);
                      }
                    } else {
                      var j4543 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543);
                        } else {
                          return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543);
                        }
                      } else {
                        var k4544 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544);
                          } else {
                            return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544);
                          }
                        } else {
                          var l4545 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545);
                            } else {
                              return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545);
                            }
                          } else {
                            var m4546 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546);
                              } else {
                                return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546);
                              }
                            } else {
                              var n4547 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547);
                                } else {
                                  return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547);
                                }
                              } else {
                                var o4548 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548);
                                  } else {
                                    return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548);
                                  }
                                } else {
                                  var p4549 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548, p4549);
                                    } else {
                                      return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548, p4549);
                                    }
                                  } else {
                                    var q4550 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548, p4549, q4550);
                                      } else {
                                        return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548, p4549, q4550);
                                      }
                                    } else {
                                      var r4551 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548, p4549, q4550, r4551);
                                        } else {
                                          return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548, p4549, q4550, r4551);
                                        }
                                      } else {
                                        var s4552 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548, p4549, q4550, r4551, s4552);
                                          } else {
                                            return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548, p4549, q4550, r4551, s4552);
                                          }
                                        } else {
                                          var t4553 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548, p4549, q4550, r4551, s4552, t4553);
                                            } else {
                                              return f.call(null, a4534, b4535, c4536, d4537, e4538, f4539, g4540, h4541, i4542, j4543, k4544, l4545, m4546, n4547, o4548, p4549, q4550, r4551, s4552, t4553);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__6347__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__6347 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__6347__delegate.call(this, f, a, b, c, d, args);
    };
    G__6347.cljs$lang$maxFixedArity = 5;
    G__6347.cljs$lang$applyTo = function(arglist__6348) {
      var f = cljs.core.first(arglist__6348);
      arglist__6348 = cljs.core.next(arglist__6348);
      var a = cljs.core.first(arglist__6348);
      arglist__6348 = cljs.core.next(arglist__6348);
      var b = cljs.core.first(arglist__6348);
      arglist__6348 = cljs.core.next(arglist__6348);
      var c = cljs.core.first(arglist__6348);
      arglist__6348 = cljs.core.next(arglist__6348);
      var d = cljs.core.first(arglist__6348);
      var args = cljs.core.rest(arglist__6348);
      return G__6347__delegate(f, a, b, c, d, args);
    };
    G__6347.cljs$core$IFn$_invoke$arity$variadic = G__6347__delegate;
    return G__6347;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__6349__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__6349 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__6349__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__6349.cljs$lang$maxFixedArity = 6;
    G__6349.cljs$lang$applyTo = function(arglist__6350) {
      var obj = cljs.core.first(arglist__6350);
      arglist__6350 = cljs.core.next(arglist__6350);
      var f = cljs.core.first(arglist__6350);
      arglist__6350 = cljs.core.next(arglist__6350);
      var a = cljs.core.first(arglist__6350);
      arglist__6350 = cljs.core.next(arglist__6350);
      var b = cljs.core.first(arglist__6350);
      arglist__6350 = cljs.core.next(arglist__6350);
      var c = cljs.core.first(arglist__6350);
      arglist__6350 = cljs.core.next(arglist__6350);
      var d = cljs.core.first(arglist__6350);
      var args = cljs.core.rest(arglist__6350);
      return G__6349__delegate(obj, f, a, b, c, d, args);
    };
    G__6349.cljs$core$IFn$_invoke$arity$variadic = G__6349__delegate;
    return G__6349;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__6351__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__6351 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6351__delegate.call(this, x, y, more);
    };
    G__6351.cljs$lang$maxFixedArity = 2;
    G__6351.cljs$lang$applyTo = function(arglist__6352) {
      var x = cljs.core.first(arglist__6352);
      arglist__6352 = cljs.core.next(arglist__6352);
      var y = cljs.core.first(arglist__6352);
      var more = cljs.core.rest(arglist__6352);
      return G__6351__delegate(x, y, more);
    };
    G__6351.cljs$core$IFn$_invoke$arity$variadic = G__6351__delegate;
    return G__6351;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t6356 !== "undefined") {
  } else {
    cljs.core.t6356 = function(nil_iter, meta6357) {
      this.nil_iter = nil_iter;
      this.meta6357 = meta6357;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t6356.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t6356.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t6356.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t6356.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6358) {
      var self__ = this;
      var _6358__$1 = this;
      return self__.meta6357;
    };
    cljs.core.t6356.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6358, meta6357__$1) {
      var self__ = this;
      var _6358__$1 = this;
      return new cljs.core.t6356(self__.nil_iter, meta6357__$1);
    };
    cljs.core.t6356.cljs$lang$type = true;
    cljs.core.t6356.cljs$lang$ctorStr = "cljs.core/t6356";
    cljs.core.t6356.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
      return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/t6356");
    };
    cljs.core.__GT_t6356 = function __GT_t6356(nil_iter__$1, meta6357) {
      return new cljs.core.t6356(nil_iter__$1, meta6357);
    };
  }
  return new cljs.core.t6356(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 2986, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 2982, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/saiberz/projects/wsclj/target/cljsbuild-compiler-0/cljs/core.cljs"], null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        if (cljs.core.iterable_QMARK_.call(null, coll)) {
          return cljs.core._iterator.call(null, coll);
        } else {
          if (cljs.core.seqable_QMARK_.call(null, coll)) {
            return cljs.core.seq_iter.call(null, coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3596__auto__ = !(lt.stepper == null);
      if (and__3596__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3596__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__6359 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__6359;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4490__auto___6360 = self__.iters.length;
  var i_6361 = 0;
  while (true) {
    if (i_6361 < n__4490__auto___6360) {
      self__.nexts[i_6361] = self__.iters[i_6361].next();
      var G__6362 = i_6361 + 1;
      i_6361 = G__6362;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3596__auto__ = !(lt.stepper == null);
      if (and__3596__auto__) {
        return this$.hasNext();
      } else {
        return and__3596__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform.call(null, stepfn), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__6363_6367 = cljs.core.seq.call(null, colls);
  var chunk__6364_6368 = null;
  var count__6365_6369 = 0;
  var i__6366_6370 = 0;
  while (true) {
    if (i__6366_6370 < count__6365_6369) {
      var coll_6371 = cljs.core._nth.call(null, chunk__6364_6368, i__6366_6370);
      iters.push(cljs.core.iter.call(null, coll_6371));
      var G__6372 = seq__6363_6367;
      var G__6373 = chunk__6364_6368;
      var G__6374 = count__6365_6369;
      var G__6375 = i__6366_6370 + 1;
      seq__6363_6367 = G__6372;
      chunk__6364_6368 = G__6373;
      count__6365_6369 = G__6374;
      i__6366_6370 = G__6375;
      continue;
    } else {
      var temp__4126__auto___6376 = cljs.core.seq.call(null, seq__6363_6367);
      if (temp__4126__auto___6376) {
        var seq__6363_6377__$1 = temp__4126__auto___6376;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6363_6377__$1)) {
          var c__4390__auto___6378 = cljs.core.chunk_first.call(null, seq__6363_6377__$1);
          var G__6379 = cljs.core.chunk_rest.call(null, seq__6363_6377__$1);
          var G__6380 = c__4390__auto___6378;
          var G__6381 = cljs.core.count.call(null, c__4390__auto___6378);
          var G__6382 = 0;
          seq__6363_6367 = G__6379;
          chunk__6364_6368 = G__6380;
          count__6365_6369 = G__6381;
          i__6366_6370 = G__6382;
          continue;
        } else {
          var coll_6383 = cljs.core.first.call(null, seq__6363_6377__$1);
          iters.push(cljs.core.iter.call(null, coll_6383));
          var G__6384 = cljs.core.next.call(null, seq__6363_6377__$1);
          var G__6385 = null;
          var G__6386 = 0;
          var G__6387 = 0;
          seq__6363_6367 = G__6384;
          chunk__6364_6368 = G__6385;
          count__6365_6369 = G__6386;
          i__6366_6370 = G__6387;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3608__auto__ = cljs.core.seq.call(null, coll);
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__6388__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__6388 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6388__delegate.call(this, xform, coll, colls);
    };
    G__6388.cljs$lang$maxFixedArity = 2;
    G__6388.cljs$lang$applyTo = function(arglist__6389) {
      var xform = cljs.core.first(arglist__6389);
      arglist__6389 = cljs.core.next(arglist__6389);
      var coll = cljs.core.first(arglist__6389);
      var colls = cljs.core.rest(arglist__6389);
      return G__6388__delegate(xform, coll, colls);
    };
    G__6388.cljs$core$IFn$_invoke$arity$variadic = G__6388__delegate;
    return G__6388;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__6390 = pred;
        var G__6391 = cljs.core.next.call(null, coll);
        pred = G__6390;
        coll = G__6391;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3608__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3608__auto__)) {
        return or__3608__auto__;
      } else {
        var G__6392 = pred;
        var G__6393 = cljs.core.next.call(null, coll);
        pred = G__6392;
        coll = G__6393;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__6394 = null;
    var G__6394__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__6394__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__6394__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__6394__3 = function() {
      var G__6395__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__6395 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__6395__delegate.call(this, x, y, zs);
      };
      G__6395.cljs$lang$maxFixedArity = 2;
      G__6395.cljs$lang$applyTo = function(arglist__6396) {
        var x = cljs.core.first(arglist__6396);
        arglist__6396 = cljs.core.next(arglist__6396);
        var y = cljs.core.first(arglist__6396);
        var zs = cljs.core.rest(arglist__6396);
        return G__6395__delegate(x, y, zs);
      };
      G__6395.cljs$core$IFn$_invoke$arity$variadic = G__6395__delegate;
      return G__6395;
    }();
    G__6394 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__6394__0.call(this);
        case 1:
          return G__6394__1.call(this, x);
        case 2:
          return G__6394__2.call(this, x, y);
        default:
          return G__6394__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__6394.cljs$lang$maxFixedArity = 2;
    G__6394.cljs$lang$applyTo = G__6394__3.cljs$lang$applyTo;
    G__6394.cljs$core$IFn$_invoke$arity$0 = G__6394__0;
    G__6394.cljs$core$IFn$_invoke$arity$1 = G__6394__1;
    G__6394.cljs$core$IFn$_invoke$arity$2 = G__6394__2;
    G__6394.cljs$core$IFn$_invoke$arity$variadic = G__6394__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__6394;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__6397__delegate = function(args) {
      return x;
    };
    var G__6397 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6397__delegate.call(this, args);
    };
    G__6397.cljs$lang$maxFixedArity = 0;
    G__6397.cljs$lang$applyTo = function(arglist__6398) {
      var args = cljs.core.seq(arglist__6398);
      return G__6397__delegate(args);
    };
    G__6397.cljs$core$IFn$_invoke$arity$variadic = G__6397__delegate;
    return G__6397;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__6399 = null;
      var G__6399__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__6399__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__6399__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__6399__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__6399__4 = function() {
        var G__6400__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__6400 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6400__delegate.call(this, x, y, z, args);
        };
        G__6400.cljs$lang$maxFixedArity = 3;
        G__6400.cljs$lang$applyTo = function(arglist__6401) {
          var x = cljs.core.first(arglist__6401);
          arglist__6401 = cljs.core.next(arglist__6401);
          var y = cljs.core.first(arglist__6401);
          arglist__6401 = cljs.core.next(arglist__6401);
          var z = cljs.core.first(arglist__6401);
          var args = cljs.core.rest(arglist__6401);
          return G__6400__delegate(x, y, z, args);
        };
        G__6400.cljs$core$IFn$_invoke$arity$variadic = G__6400__delegate;
        return G__6400;
      }();
      G__6399 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6399__0.call(this);
          case 1:
            return G__6399__1.call(this, x);
          case 2:
            return G__6399__2.call(this, x, y);
          case 3:
            return G__6399__3.call(this, x, y, z);
          default:
            return G__6399__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6399.cljs$lang$maxFixedArity = 3;
      G__6399.cljs$lang$applyTo = G__6399__4.cljs$lang$applyTo;
      G__6399.cljs$core$IFn$_invoke$arity$0 = G__6399__0;
      G__6399.cljs$core$IFn$_invoke$arity$1 = G__6399__1;
      G__6399.cljs$core$IFn$_invoke$arity$2 = G__6399__2;
      G__6399.cljs$core$IFn$_invoke$arity$3 = G__6399__3;
      G__6399.cljs$core$IFn$_invoke$arity$variadic = G__6399__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6399;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__6402 = null;
      var G__6402__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__6402__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__6402__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__6402__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__6402__4 = function() {
        var G__6403__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__6403 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6403__delegate.call(this, x, y, z, args);
        };
        G__6403.cljs$lang$maxFixedArity = 3;
        G__6403.cljs$lang$applyTo = function(arglist__6404) {
          var x = cljs.core.first(arglist__6404);
          arglist__6404 = cljs.core.next(arglist__6404);
          var y = cljs.core.first(arglist__6404);
          arglist__6404 = cljs.core.next(arglist__6404);
          var z = cljs.core.first(arglist__6404);
          var args = cljs.core.rest(arglist__6404);
          return G__6403__delegate(x, y, z, args);
        };
        G__6403.cljs$core$IFn$_invoke$arity$variadic = G__6403__delegate;
        return G__6403;
      }();
      G__6402 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6402__0.call(this);
          case 1:
            return G__6402__1.call(this, x);
          case 2:
            return G__6402__2.call(this, x, y);
          case 3:
            return G__6402__3.call(this, x, y, z);
          default:
            return G__6402__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6402.cljs$lang$maxFixedArity = 3;
      G__6402.cljs$lang$applyTo = G__6402__4.cljs$lang$applyTo;
      G__6402.cljs$core$IFn$_invoke$arity$0 = G__6402__0;
      G__6402.cljs$core$IFn$_invoke$arity$1 = G__6402__1;
      G__6402.cljs$core$IFn$_invoke$arity$2 = G__6402__2;
      G__6402.cljs$core$IFn$_invoke$arity$3 = G__6402__3;
      G__6402.cljs$core$IFn$_invoke$arity$variadic = G__6402__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6402;
    }();
  };
  var comp__4 = function() {
    var G__6405__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__6406__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__6407 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__6408 = cljs.core.next.call(null, fs__$2);
                ret = G__6407;
                fs__$2 = G__6408;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__6406 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__6406__delegate.call(this, args);
          };
          G__6406.cljs$lang$maxFixedArity = 0;
          G__6406.cljs$lang$applyTo = function(arglist__6409) {
            var args = cljs.core.seq(arglist__6409);
            return G__6406__delegate(args);
          };
          G__6406.cljs$core$IFn$_invoke$arity$variadic = G__6406__delegate;
          return G__6406;
        }();
      }(fs__$1);
    };
    var G__6405 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6405__delegate.call(this, f1, f2, f3, fs);
    };
    G__6405.cljs$lang$maxFixedArity = 3;
    G__6405.cljs$lang$applyTo = function(arglist__6410) {
      var f1 = cljs.core.first(arglist__6410);
      arglist__6410 = cljs.core.next(arglist__6410);
      var f2 = cljs.core.first(arglist__6410);
      arglist__6410 = cljs.core.next(arglist__6410);
      var f3 = cljs.core.first(arglist__6410);
      var fs = cljs.core.rest(arglist__6410);
      return G__6405__delegate(f1, f2, f3, fs);
    };
    G__6405.cljs$core$IFn$_invoke$arity$variadic = G__6405__delegate;
    return G__6405;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__6411__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__6411 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6411__delegate.call(this, args);
      };
      G__6411.cljs$lang$maxFixedArity = 0;
      G__6411.cljs$lang$applyTo = function(arglist__6412) {
        var args = cljs.core.seq(arglist__6412);
        return G__6411__delegate(args);
      };
      G__6411.cljs$core$IFn$_invoke$arity$variadic = G__6411__delegate;
      return G__6411;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__6413__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__6413 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6413__delegate.call(this, args);
      };
      G__6413.cljs$lang$maxFixedArity = 0;
      G__6413.cljs$lang$applyTo = function(arglist__6414) {
        var args = cljs.core.seq(arglist__6414);
        return G__6413__delegate(args);
      };
      G__6413.cljs$core$IFn$_invoke$arity$variadic = G__6413__delegate;
      return G__6413;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__6415__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__6415 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6415__delegate.call(this, args);
      };
      G__6415.cljs$lang$maxFixedArity = 0;
      G__6415.cljs$lang$applyTo = function(arglist__6416) {
        var args = cljs.core.seq(arglist__6416);
        return G__6415__delegate(args);
      };
      G__6415.cljs$core$IFn$_invoke$arity$variadic = G__6415__delegate;
      return G__6415;
    }();
  };
  var partial__5 = function() {
    var G__6417__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__6418__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__6418 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__6418__delegate.call(this, args);
        };
        G__6418.cljs$lang$maxFixedArity = 0;
        G__6418.cljs$lang$applyTo = function(arglist__6419) {
          var args = cljs.core.seq(arglist__6419);
          return G__6418__delegate(args);
        };
        G__6418.cljs$core$IFn$_invoke$arity$variadic = G__6418__delegate;
        return G__6418;
      }();
    };
    var G__6417 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6417__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__6417.cljs$lang$maxFixedArity = 4;
    G__6417.cljs$lang$applyTo = function(arglist__6420) {
      var f = cljs.core.first(arglist__6420);
      arglist__6420 = cljs.core.next(arglist__6420);
      var arg1 = cljs.core.first(arglist__6420);
      arglist__6420 = cljs.core.next(arglist__6420);
      var arg2 = cljs.core.first(arglist__6420);
      arglist__6420 = cljs.core.next(arglist__6420);
      var arg3 = cljs.core.first(arglist__6420);
      var more = cljs.core.rest(arglist__6420);
      return G__6417__delegate(f, arg1, arg2, arg3, more);
    };
    G__6417.cljs$core$IFn$_invoke$arity$variadic = G__6417__delegate;
    return G__6417;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__6421 = null;
      var G__6421__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__6421__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__6421__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__6421__4 = function() {
        var G__6422__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__6422 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6422__delegate.call(this, a, b, c, ds);
        };
        G__6422.cljs$lang$maxFixedArity = 3;
        G__6422.cljs$lang$applyTo = function(arglist__6423) {
          var a = cljs.core.first(arglist__6423);
          arglist__6423 = cljs.core.next(arglist__6423);
          var b = cljs.core.first(arglist__6423);
          arglist__6423 = cljs.core.next(arglist__6423);
          var c = cljs.core.first(arglist__6423);
          var ds = cljs.core.rest(arglist__6423);
          return G__6422__delegate(a, b, c, ds);
        };
        G__6422.cljs$core$IFn$_invoke$arity$variadic = G__6422__delegate;
        return G__6422;
      }();
      G__6421 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__6421__1.call(this, a);
          case 2:
            return G__6421__2.call(this, a, b);
          case 3:
            return G__6421__3.call(this, a, b, c);
          default:
            return G__6421__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6421.cljs$lang$maxFixedArity = 3;
      G__6421.cljs$lang$applyTo = G__6421__4.cljs$lang$applyTo;
      G__6421.cljs$core$IFn$_invoke$arity$1 = G__6421__1;
      G__6421.cljs$core$IFn$_invoke$arity$2 = G__6421__2;
      G__6421.cljs$core$IFn$_invoke$arity$3 = G__6421__3;
      G__6421.cljs$core$IFn$_invoke$arity$variadic = G__6421__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6421;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__6424 = null;
      var G__6424__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__6424__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__6424__4 = function() {
        var G__6425__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__6425 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6425__delegate.call(this, a, b, c, ds);
        };
        G__6425.cljs$lang$maxFixedArity = 3;
        G__6425.cljs$lang$applyTo = function(arglist__6426) {
          var a = cljs.core.first(arglist__6426);
          arglist__6426 = cljs.core.next(arglist__6426);
          var b = cljs.core.first(arglist__6426);
          arglist__6426 = cljs.core.next(arglist__6426);
          var c = cljs.core.first(arglist__6426);
          var ds = cljs.core.rest(arglist__6426);
          return G__6425__delegate(a, b, c, ds);
        };
        G__6425.cljs$core$IFn$_invoke$arity$variadic = G__6425__delegate;
        return G__6425;
      }();
      G__6424 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__6424__2.call(this, a, b);
          case 3:
            return G__6424__3.call(this, a, b, c);
          default:
            return G__6424__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6424.cljs$lang$maxFixedArity = 3;
      G__6424.cljs$lang$applyTo = G__6424__4.cljs$lang$applyTo;
      G__6424.cljs$core$IFn$_invoke$arity$2 = G__6424__2;
      G__6424.cljs$core$IFn$_invoke$arity$3 = G__6424__3;
      G__6424.cljs$core$IFn$_invoke$arity$variadic = G__6424__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6424;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__6427 = null;
      var G__6427__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__6427__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__6427__4 = function() {
        var G__6428__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__6428 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6428__delegate.call(this, a, b, c, ds);
        };
        G__6428.cljs$lang$maxFixedArity = 3;
        G__6428.cljs$lang$applyTo = function(arglist__6429) {
          var a = cljs.core.first(arglist__6429);
          arglist__6429 = cljs.core.next(arglist__6429);
          var b = cljs.core.first(arglist__6429);
          arglist__6429 = cljs.core.next(arglist__6429);
          var c = cljs.core.first(arglist__6429);
          var ds = cljs.core.rest(arglist__6429);
          return G__6428__delegate(a, b, c, ds);
        };
        G__6428.cljs$core$IFn$_invoke$arity$variadic = G__6428__delegate;
        return G__6428;
      }();
      G__6427 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__6427__2.call(this, a, b);
          case 3:
            return G__6427__3.call(this, a, b, c);
          default:
            return G__6427__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6427.cljs$lang$maxFixedArity = 3;
      G__6427.cljs$lang$applyTo = G__6427__4.cljs$lang$applyTo;
      G__6427.cljs$core$IFn$_invoke$arity$2 = G__6427__2;
      G__6427.cljs$core$IFn$_invoke$arity$3 = G__6427__3;
      G__6427.cljs$core$IFn$_invoke$arity$variadic = G__6427__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6427;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4490__auto___6430 = size;
          var i_6431 = 0;
          while (true) {
            if (i_6431 < n__4490__auto___6430) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_6431, cljs.core._nth.call(null, c, i_6431)));
              var G__6432 = i_6431 + 1;
              i_6431 = G__6432;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__6433 = null;
        var G__6433__0 = function() {
          return rf.call(null);
        };
        var G__6433__1 = function(result) {
          return rf.call(null, result);
        };
        var G__6433__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return rf.call(null, result, v);
          }
        };
        G__6433 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__6433__0.call(this);
            case 1:
              return G__6433__1.call(this, result);
            case 2:
              return G__6433__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__6433.cljs$core$IFn$_invoke$arity$0 = G__6433__0;
        G__6433.cljs$core$IFn$_invoke$arity$1 = G__6433__1;
        G__6433.cljs$core$IFn$_invoke$arity$2 = G__6433__2;
        return G__6433;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4490__auto___6434 = size;
          var i_6435 = 0;
          while (true) {
            if (i_6435 < n__4490__auto___6434) {
              var x_6436 = f.call(null, cljs.core._nth.call(null, c, i_6435));
              if (x_6436 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_6436);
              }
              var G__6437 = i_6435 + 1;
              i_6435 = G__6437;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__6438 = cljs.core.seq.call(null, self__.watches);
  var chunk__6439 = null;
  var count__6440 = 0;
  var i__6441 = 0;
  while (true) {
    if (i__6441 < count__6440) {
      var vec__6442 = cljs.core._nth.call(null, chunk__6439, i__6441);
      var key = cljs.core.nth.call(null, vec__6442, 0, null);
      var f = cljs.core.nth.call(null, vec__6442, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__6444 = seq__6438;
      var G__6445 = chunk__6439;
      var G__6446 = count__6440;
      var G__6447 = i__6441 + 1;
      seq__6438 = G__6444;
      chunk__6439 = G__6445;
      count__6440 = G__6446;
      i__6441 = G__6447;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6438);
      if (temp__4126__auto__) {
        var seq__6438__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6438__$1)) {
          var c__4390__auto__ = cljs.core.chunk_first.call(null, seq__6438__$1);
          var G__6448 = cljs.core.chunk_rest.call(null, seq__6438__$1);
          var G__6449 = c__4390__auto__;
          var G__6450 = cljs.core.count.call(null, c__4390__auto__);
          var G__6451 = 0;
          seq__6438 = G__6448;
          chunk__6439 = G__6449;
          count__6440 = G__6450;
          i__6441 = G__6451;
          continue;
        } else {
          var vec__6443 = cljs.core.first.call(null, seq__6438__$1);
          var key = cljs.core.nth.call(null, vec__6443, 0, null);
          var f = cljs.core.nth.call(null, vec__6443, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__6452 = cljs.core.next.call(null, seq__6438__$1);
          var G__6453 = null;
          var G__6454 = 0;
          var G__6455 = 0;
          seq__6438 = G__6452;
          chunk__6439 = G__6453;
          count__6440 = G__6454;
          i__6441 = G__6455;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__6459__delegate = function(x, p__6456) {
      var map__6458 = p__6456;
      var map__6458__$1 = cljs.core.seq_QMARK_.call(null, map__6458) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6458) : map__6458;
      var validator = cljs.core.get.call(null, map__6458__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__6458__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__6459 = function(x, var_args) {
      var p__6456 = null;
      if (arguments.length > 1) {
        p__6456 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6459__delegate.call(this, x, p__6456);
    };
    G__6459.cljs$lang$maxFixedArity = 1;
    G__6459.cljs$lang$applyTo = function(arglist__6460) {
      var x = cljs.core.first(arglist__6460);
      var p__6456 = cljs.core.rest(arglist__6460);
      return G__6459__delegate(x, p__6456);
    };
    G__6459.cljs$core$IFn$_invoke$arity$variadic = G__6459__delegate;
    return G__6459;
  }();
  atom = function(x, var_args) {
    var p__6456 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__6461__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__6461 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6461__delegate.call(this, a, f, x, y, more);
    };
    G__6461.cljs$lang$maxFixedArity = 4;
    G__6461.cljs$lang$applyTo = function(arglist__6462) {
      var a = cljs.core.first(arglist__6462);
      arglist__6462 = cljs.core.next(arglist__6462);
      var f = cljs.core.first(arglist__6462);
      arglist__6462 = cljs.core.next(arglist__6462);
      var x = cljs.core.first(arglist__6462);
      arglist__6462 = cljs.core.next(arglist__6462);
      var y = cljs.core.first(arglist__6462);
      var more = cljs.core.rest(arglist__6462);
      return G__6461__delegate(a, f, x, y, more);
    };
    G__6461.cljs$core$IFn$_invoke$arity$variadic = G__6461__delegate;
    return G__6461;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__6463 = null;
          var G__6463__0 = function() {
            return rf.call(null);
          };
          var G__6463__1 = function(result) {
            return rf.call(null, result);
          };
          var G__6463__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return rf.call(null, result, v);
            }
          };
          G__6463 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6463__0.call(this);
              case 1:
                return G__6463__1.call(this, result);
              case 2:
                return G__6463__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6463.cljs$core$IFn$_invoke$arity$0 = G__6463__0;
          G__6463.cljs$core$IFn$_invoke$arity$1 = G__6463__1;
          G__6463.cljs$core$IFn$_invoke$arity$2 = G__6463__2;
          return G__6463;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4490__auto___6464 = size;
            var i_6465 = 0;
            while (true) {
              if (i_6465 < n__4490__auto___6464) {
                var x_6466 = f.call(null, idx + i_6465, cljs.core._nth.call(null, c, i_6465));
                if (x_6466 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_6466);
                }
                var G__6467 = i_6465 + 1;
                i_6465 = G__6467;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3596__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3596__auto__)) {
            return p.call(null, y);
          } else {
            return and__3596__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3596__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3596__auto__)) {
            var and__3596__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3596__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3596__auto____$1;
            }
          } else {
            return and__3596__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__6474__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__6474 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6474__delegate.call(this, x, y, z, args);
        };
        G__6474.cljs$lang$maxFixedArity = 3;
        G__6474.cljs$lang$applyTo = function(arglist__6475) {
          var x = cljs.core.first(arglist__6475);
          arglist__6475 = cljs.core.next(arglist__6475);
          var y = cljs.core.first(arglist__6475);
          arglist__6475 = cljs.core.next(arglist__6475);
          var z = cljs.core.first(arglist__6475);
          var args = cljs.core.rest(arglist__6475);
          return G__6474__delegate(x, y, z, args);
        };
        G__6474.cljs$core$IFn$_invoke$arity$variadic = G__6474__delegate;
        return G__6474;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3596__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3596__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3596__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3596__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3596__auto__)) {
            var and__3596__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3596__auto____$1)) {
              var and__3596__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3596__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3596__auto____$2;
              }
            } else {
              return and__3596__auto____$1;
            }
          } else {
            return and__3596__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3596__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3596__auto__)) {
            var and__3596__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3596__auto____$1)) {
              var and__3596__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3596__auto____$2)) {
                var and__3596__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3596__auto____$3)) {
                  var and__3596__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3596__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3596__auto____$4;
                  }
                } else {
                  return and__3596__auto____$3;
                }
              } else {
                return and__3596__auto____$2;
              }
            } else {
              return and__3596__auto____$1;
            }
          } else {
            return and__3596__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__6476__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__6468_SHARP_) {
            var and__3596__auto__ = p1.call(null, p1__6468_SHARP_);
            if (cljs.core.truth_(and__3596__auto__)) {
              return p2.call(null, p1__6468_SHARP_);
            } else {
              return and__3596__auto__;
            }
          }, args));
        };
        var G__6476 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6476__delegate.call(this, x, y, z, args);
        };
        G__6476.cljs$lang$maxFixedArity = 3;
        G__6476.cljs$lang$applyTo = function(arglist__6477) {
          var x = cljs.core.first(arglist__6477);
          arglist__6477 = cljs.core.next(arglist__6477);
          var y = cljs.core.first(arglist__6477);
          arglist__6477 = cljs.core.next(arglist__6477);
          var z = cljs.core.first(arglist__6477);
          var args = cljs.core.rest(arglist__6477);
          return G__6476__delegate(x, y, z, args);
        };
        G__6476.cljs$core$IFn$_invoke$arity$variadic = G__6476__delegate;
        return G__6476;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3596__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3596__auto__)) {
            var and__3596__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3596__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3596__auto____$1;
            }
          } else {
            return and__3596__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3596__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3596__auto__)) {
            var and__3596__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3596__auto____$1)) {
              var and__3596__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3596__auto____$2)) {
                var and__3596__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3596__auto____$3)) {
                  var and__3596__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3596__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3596__auto____$4;
                  }
                } else {
                  return and__3596__auto____$3;
                }
              } else {
                return and__3596__auto____$2;
              }
            } else {
              return and__3596__auto____$1;
            }
          } else {
            return and__3596__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3596__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3596__auto__)) {
            var and__3596__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3596__auto____$1)) {
              var and__3596__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3596__auto____$2)) {
                var and__3596__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3596__auto____$3)) {
                  var and__3596__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3596__auto____$4)) {
                    var and__3596__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3596__auto____$5)) {
                      var and__3596__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3596__auto____$6)) {
                        var and__3596__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3596__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3596__auto____$7;
                        }
                      } else {
                        return and__3596__auto____$6;
                      }
                    } else {
                      return and__3596__auto____$5;
                    }
                  } else {
                    return and__3596__auto____$4;
                  }
                } else {
                  return and__3596__auto____$3;
                }
              } else {
                return and__3596__auto____$2;
              }
            } else {
              return and__3596__auto____$1;
            }
          } else {
            return and__3596__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__6478__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__6469_SHARP_) {
            var and__3596__auto__ = p1.call(null, p1__6469_SHARP_);
            if (cljs.core.truth_(and__3596__auto__)) {
              var and__3596__auto____$1 = p2.call(null, p1__6469_SHARP_);
              if (cljs.core.truth_(and__3596__auto____$1)) {
                return p3.call(null, p1__6469_SHARP_);
              } else {
                return and__3596__auto____$1;
              }
            } else {
              return and__3596__auto__;
            }
          }, args));
        };
        var G__6478 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6478__delegate.call(this, x, y, z, args);
        };
        G__6478.cljs$lang$maxFixedArity = 3;
        G__6478.cljs$lang$applyTo = function(arglist__6479) {
          var x = cljs.core.first(arglist__6479);
          arglist__6479 = cljs.core.next(arglist__6479);
          var y = cljs.core.first(arglist__6479);
          arglist__6479 = cljs.core.next(arglist__6479);
          var z = cljs.core.first(arglist__6479);
          var args = cljs.core.rest(arglist__6479);
          return G__6478__delegate(x, y, z, args);
        };
        G__6478.cljs$core$IFn$_invoke$arity$variadic = G__6478__delegate;
        return G__6478;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__6480__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6470_SHARP_) {
                return p1__6470_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6471_SHARP_) {
                var and__3596__auto__ = p1__6471_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3596__auto__)) {
                  return p1__6471_SHARP_.call(null, y);
                } else {
                  return and__3596__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6472_SHARP_) {
                var and__3596__auto__ = p1__6472_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3596__auto__)) {
                  var and__3596__auto____$1 = p1__6472_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3596__auto____$1)) {
                    return p1__6472_SHARP_.call(null, z);
                  } else {
                    return and__3596__auto____$1;
                  }
                } else {
                  return and__3596__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__6481__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__6473_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__6473_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__6481 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6481__delegate.call(this, x, y, z, args);
            };
            G__6481.cljs$lang$maxFixedArity = 3;
            G__6481.cljs$lang$applyTo = function(arglist__6482) {
              var x = cljs.core.first(arglist__6482);
              arglist__6482 = cljs.core.next(arglist__6482);
              var y = cljs.core.first(arglist__6482);
              arglist__6482 = cljs.core.next(arglist__6482);
              var z = cljs.core.first(arglist__6482);
              var args = cljs.core.rest(arglist__6482);
              return G__6481__delegate(x, y, z, args);
            };
            G__6481.cljs$core$IFn$_invoke$arity$variadic = G__6481__delegate;
            return G__6481;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__6480 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6480__delegate.call(this, p1, p2, p3, ps);
    };
    G__6480.cljs$lang$maxFixedArity = 3;
    G__6480.cljs$lang$applyTo = function(arglist__6483) {
      var p1 = cljs.core.first(arglist__6483);
      arglist__6483 = cljs.core.next(arglist__6483);
      var p2 = cljs.core.first(arglist__6483);
      arglist__6483 = cljs.core.next(arglist__6483);
      var p3 = cljs.core.first(arglist__6483);
      var ps = cljs.core.rest(arglist__6483);
      return G__6480__delegate(p1, p2, p3, ps);
    };
    G__6480.cljs$core$IFn$_invoke$arity$variadic = G__6480__delegate;
    return G__6480;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3608__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3608__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3608__auto____$1)) {
            return or__3608__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__6490__delegate = function(x, y, z, args) {
          var or__3608__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3608__auto__)) {
            return or__3608__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__6490 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6490__delegate.call(this, x, y, z, args);
        };
        G__6490.cljs$lang$maxFixedArity = 3;
        G__6490.cljs$lang$applyTo = function(arglist__6491) {
          var x = cljs.core.first(arglist__6491);
          arglist__6491 = cljs.core.next(arglist__6491);
          var y = cljs.core.first(arglist__6491);
          arglist__6491 = cljs.core.next(arglist__6491);
          var z = cljs.core.first(arglist__6491);
          var args = cljs.core.rest(arglist__6491);
          return G__6490__delegate(x, y, z, args);
        };
        G__6490.cljs$core$IFn$_invoke$arity$variadic = G__6490__delegate;
        return G__6490;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3608__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3608__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3608__auto____$1)) {
            return or__3608__auto____$1;
          } else {
            var or__3608__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3608__auto____$2)) {
              return or__3608__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3608__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3608__auto____$1)) {
            return or__3608__auto____$1;
          } else {
            var or__3608__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3608__auto____$2)) {
              return or__3608__auto____$2;
            } else {
              var or__3608__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3608__auto____$3)) {
                return or__3608__auto____$3;
              } else {
                var or__3608__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3608__auto____$4)) {
                  return or__3608__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__6492__delegate = function(x, y, z, args) {
          var or__3608__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3608__auto__)) {
            return or__3608__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3608__auto__) {
              return function(p1__6484_SHARP_) {
                var or__3608__auto____$1 = p1.call(null, p1__6484_SHARP_);
                if (cljs.core.truth_(or__3608__auto____$1)) {
                  return or__3608__auto____$1;
                } else {
                  return p2.call(null, p1__6484_SHARP_);
                }
              };
            }(or__3608__auto__), args);
          }
        };
        var G__6492 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6492__delegate.call(this, x, y, z, args);
        };
        G__6492.cljs$lang$maxFixedArity = 3;
        G__6492.cljs$lang$applyTo = function(arglist__6493) {
          var x = cljs.core.first(arglist__6493);
          arglist__6493 = cljs.core.next(arglist__6493);
          var y = cljs.core.first(arglist__6493);
          arglist__6493 = cljs.core.next(arglist__6493);
          var z = cljs.core.first(arglist__6493);
          var args = cljs.core.rest(arglist__6493);
          return G__6492__delegate(x, y, z, args);
        };
        G__6492.cljs$core$IFn$_invoke$arity$variadic = G__6492__delegate;
        return G__6492;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3608__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3608__auto____$1)) {
            return or__3608__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3608__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3608__auto____$1)) {
            return or__3608__auto____$1;
          } else {
            var or__3608__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3608__auto____$2)) {
              return or__3608__auto____$2;
            } else {
              var or__3608__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3608__auto____$3)) {
                return or__3608__auto____$3;
              } else {
                var or__3608__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3608__auto____$4)) {
                  return or__3608__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3608__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3608__auto____$1)) {
            return or__3608__auto____$1;
          } else {
            var or__3608__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3608__auto____$2)) {
              return or__3608__auto____$2;
            } else {
              var or__3608__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3608__auto____$3)) {
                return or__3608__auto____$3;
              } else {
                var or__3608__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3608__auto____$4)) {
                  return or__3608__auto____$4;
                } else {
                  var or__3608__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3608__auto____$5)) {
                    return or__3608__auto____$5;
                  } else {
                    var or__3608__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3608__auto____$6)) {
                      return or__3608__auto____$6;
                    } else {
                      var or__3608__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3608__auto____$7)) {
                        return or__3608__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__6494__delegate = function(x, y, z, args) {
          var or__3608__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3608__auto__)) {
            return or__3608__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3608__auto__) {
              return function(p1__6485_SHARP_) {
                var or__3608__auto____$1 = p1.call(null, p1__6485_SHARP_);
                if (cljs.core.truth_(or__3608__auto____$1)) {
                  return or__3608__auto____$1;
                } else {
                  var or__3608__auto____$2 = p2.call(null, p1__6485_SHARP_);
                  if (cljs.core.truth_(or__3608__auto____$2)) {
                    return or__3608__auto____$2;
                  } else {
                    return p3.call(null, p1__6485_SHARP_);
                  }
                }
              };
            }(or__3608__auto__), args);
          }
        };
        var G__6494 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6494__delegate.call(this, x, y, z, args);
        };
        G__6494.cljs$lang$maxFixedArity = 3;
        G__6494.cljs$lang$applyTo = function(arglist__6495) {
          var x = cljs.core.first(arglist__6495);
          arglist__6495 = cljs.core.next(arglist__6495);
          var y = cljs.core.first(arglist__6495);
          arglist__6495 = cljs.core.next(arglist__6495);
          var z = cljs.core.first(arglist__6495);
          var args = cljs.core.rest(arglist__6495);
          return G__6494__delegate(x, y, z, args);
        };
        G__6494.cljs$core$IFn$_invoke$arity$variadic = G__6494__delegate;
        return G__6494;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__6496__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6486_SHARP_) {
                return p1__6486_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6487_SHARP_) {
                var or__3608__auto__ = p1__6487_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3608__auto__)) {
                  return or__3608__auto__;
                } else {
                  return p1__6487_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6488_SHARP_) {
                var or__3608__auto__ = p1__6488_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3608__auto__)) {
                  return or__3608__auto__;
                } else {
                  var or__3608__auto____$1 = p1__6488_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3608__auto____$1)) {
                    return or__3608__auto____$1;
                  } else {
                    return p1__6488_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__6497__delegate = function(x, y, z, args) {
              var or__3608__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3608__auto__)) {
                return or__3608__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3608__auto__, ps__$1) {
                  return function(p1__6489_SHARP_) {
                    return cljs.core.some.call(null, p1__6489_SHARP_, args);
                  };
                }(or__3608__auto__, ps__$1), ps__$1);
              }
            };
            var G__6497 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6497__delegate.call(this, x, y, z, args);
            };
            G__6497.cljs$lang$maxFixedArity = 3;
            G__6497.cljs$lang$applyTo = function(arglist__6498) {
              var x = cljs.core.first(arglist__6498);
              arglist__6498 = cljs.core.next(arglist__6498);
              var y = cljs.core.first(arglist__6498);
              arglist__6498 = cljs.core.next(arglist__6498);
              var z = cljs.core.first(arglist__6498);
              var args = cljs.core.rest(arglist__6498);
              return G__6497__delegate(x, y, z, args);
            };
            G__6497.cljs$core$IFn$_invoke$arity$variadic = G__6497__delegate;
            return G__6497;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__6496 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6496__delegate.call(this, p1, p2, p3, ps);
    };
    G__6496.cljs$lang$maxFixedArity = 3;
    G__6496.cljs$lang$applyTo = function(arglist__6499) {
      var p1 = cljs.core.first(arglist__6499);
      arglist__6499 = cljs.core.next(arglist__6499);
      var p2 = cljs.core.first(arglist__6499);
      arglist__6499 = cljs.core.next(arglist__6499);
      var p3 = cljs.core.first(arglist__6499);
      var ps = cljs.core.rest(arglist__6499);
      return G__6496__delegate(p1, p2, p3, ps);
    };
    G__6496.cljs$core$IFn$_invoke$arity$variadic = G__6496__delegate;
    return G__6496;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__6501 = null;
        var G__6501__0 = function() {
          return rf.call(null);
        };
        var G__6501__1 = function(result) {
          return rf.call(null, result);
        };
        var G__6501__2 = function(result, input) {
          return rf.call(null, result, f.call(null, input));
        };
        var G__6501__3 = function() {
          var G__6502__delegate = function(result, input, inputs) {
            return rf.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__6502 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__6502__delegate.call(this, result, input, inputs);
          };
          G__6502.cljs$lang$maxFixedArity = 2;
          G__6502.cljs$lang$applyTo = function(arglist__6503) {
            var result = cljs.core.first(arglist__6503);
            arglist__6503 = cljs.core.next(arglist__6503);
            var input = cljs.core.first(arglist__6503);
            var inputs = cljs.core.rest(arglist__6503);
            return G__6502__delegate(result, input, inputs);
          };
          G__6502.cljs$core$IFn$_invoke$arity$variadic = G__6502__delegate;
          return G__6502;
        }();
        G__6501 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__6501__0.call(this);
            case 1:
              return G__6501__1.call(this, result);
            case 2:
              return G__6501__2.call(this, result, input);
            default:
              return G__6501__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__6501.cljs$lang$maxFixedArity = 2;
        G__6501.cljs$lang$applyTo = G__6501__3.cljs$lang$applyTo;
        G__6501.cljs$core$IFn$_invoke$arity$0 = G__6501__0;
        G__6501.cljs$core$IFn$_invoke$arity$1 = G__6501__1;
        G__6501.cljs$core$IFn$_invoke$arity$2 = G__6501__2;
        G__6501.cljs$core$IFn$_invoke$arity$variadic = G__6501__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__6501;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4490__auto___6504 = size;
          var i_6505 = 0;
          while (true) {
            if (i_6505 < n__4490__auto___6504) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_6505)));
              var G__6506 = i_6505 + 1;
              i_6505 = G__6506;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__6507__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__6500_SHARP_) {
          return cljs.core.apply.call(null, f, p1__6500_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__6507 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6507__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__6507.cljs$lang$maxFixedArity = 4;
    G__6507.cljs$lang$applyTo = function(arglist__6508) {
      var f = cljs.core.first(arglist__6508);
      arglist__6508 = cljs.core.next(arglist__6508);
      var c1 = cljs.core.first(arglist__6508);
      arglist__6508 = cljs.core.next(arglist__6508);
      var c2 = cljs.core.first(arglist__6508);
      arglist__6508 = cljs.core.next(arglist__6508);
      var c3 = cljs.core.first(arglist__6508);
      var colls = cljs.core.rest(arglist__6508);
      return G__6507__delegate(f, c1, c2, c3, colls);
    };
    G__6507.cljs$core$IFn$_invoke$arity$variadic = G__6507__delegate;
    return G__6507;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__6509 = null;
          var G__6509__0 = function() {
            return rf.call(null);
          };
          var G__6509__1 = function(result) {
            return rf.call(null, result);
          };
          var G__6509__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? rf.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__6509 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6509__0.call(this);
              case 1:
                return G__6509__1.call(this, result);
              case 2:
                return G__6509__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6509.cljs$core$IFn$_invoke$arity$0 = G__6509__0;
          G__6509.cljs$core$IFn$_invoke$arity$1 = G__6509__1;
          G__6509.cljs$core$IFn$_invoke$arity$2 = G__6509__2;
          return G__6509;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__6510 = null;
          var G__6510__0 = function() {
            return rf.call(null);
          };
          var G__6510__1 = function(result) {
            return rf.call(null, result);
          };
          var G__6510__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__6510 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6510__0.call(this);
              case 1:
                return G__6510__1.call(this, result);
              case 2:
                return G__6510__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6510.cljs$core$IFn$_invoke$arity$0 = G__6510__0;
          G__6510.cljs$core$IFn$_invoke$arity$1 = G__6510__1;
          G__6510.cljs$core$IFn$_invoke$arity$2 = G__6510__2;
          return G__6510;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__6511 = n__$1 - 1;
          var G__6512 = cljs.core.rest.call(null, s);
          n__$1 = G__6511;
          coll__$1 = G__6512;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__6513 = cljs.core.next.call(null, s);
      var G__6514 = cljs.core.next.call(null, lead);
      s = G__6513;
      lead = G__6514;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__6515 = null;
          var G__6515__0 = function() {
            return rf.call(null);
          };
          var G__6515__1 = function(result) {
            return rf.call(null, result);
          };
          var G__6515__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3596__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3596__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3596__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return rf.call(null, result, input);
            }
          };
          G__6515 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6515__0.call(this);
              case 1:
                return G__6515__1.call(this, result);
              case 2:
                return G__6515__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6515.cljs$core$IFn$_invoke$arity$0 = G__6515__0;
          G__6515.cljs$core$IFn$_invoke$arity$1 = G__6515__1;
          G__6515.cljs$core$IFn$_invoke$arity$2 = G__6515__2;
          return G__6515;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3596__auto__ = s;
          if (and__3596__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3596__auto__;
          }
        }())) {
          var G__6516 = pred__$1;
          var G__6517 = cljs.core.rest.call(null, s);
          pred__$1 = G__6516;
          coll__$1 = G__6517;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__6518__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__6518 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6518__delegate.call(this, c1, c2, colls);
    };
    G__6518.cljs$lang$maxFixedArity = 2;
    G__6518.cljs$lang$applyTo = function(arglist__6519) {
      var c1 = cljs.core.first(arglist__6519);
      arglist__6519 = cljs.core.next(arglist__6519);
      var c2 = cljs.core.first(arglist__6519);
      var colls = cljs.core.rest(arglist__6519);
      return G__6518__delegate(c1, c2, colls);
    };
    G__6518.cljs$core$IFn$_invoke$arity$variadic = G__6518__delegate;
    return G__6518;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.call(null, cljs.core.map.call(null, f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__6520__delegate = function(f, colls) {
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.apply.call(null, cljs.core.map, f, colls));
    };
    var G__6520 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6520__delegate.call(this, f, colls);
    };
    G__6520.cljs$lang$maxFixedArity = 1;
    G__6520.cljs$lang$applyTo = function(arglist__6521) {
      var f = cljs.core.first(arglist__6521);
      var colls = cljs.core.rest(arglist__6521);
      return G__6520__delegate(f, colls);
    };
    G__6520.cljs$core$IFn$_invoke$arity$variadic = G__6520__delegate;
    return G__6520;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__6522 = null;
        var G__6522__0 = function() {
          return rf.call(null);
        };
        var G__6522__1 = function(result) {
          return rf.call(null, result);
        };
        var G__6522__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__6522 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__6522__0.call(this);
            case 1:
              return G__6522__1.call(this, result);
            case 2:
              return G__6522__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__6522.cljs$core$IFn$_invoke$arity$0 = G__6522__0;
        G__6522.cljs$core$IFn$_invoke$arity$1 = G__6522__1;
        G__6522.cljs$core$IFn$_invoke$arity$2 = G__6522__2;
        return G__6522;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4490__auto___6523 = size;
          var i_6524 = 0;
          while (true) {
            if (i_6524 < n__4490__auto___6523) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_6524)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_6524));
              } else {
              }
              var G__6525 = i_6524 + 1;
              i_6524 = G__6525;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__6526_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__6526_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__6529 = to;
        if (G__6529) {
          var bit__4277__auto__ = G__6529.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4277__auto__ || G__6529.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__6530 = to;
      if (G__6530) {
        var bit__4277__auto__ = G__6530.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4277__auto__ || G__6530.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core.conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__6531__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__6531 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6531__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__6531.cljs$lang$maxFixedArity = 4;
    G__6531.cljs$lang$applyTo = function(arglist__6532) {
      var f = cljs.core.first(arglist__6532);
      arglist__6532 = cljs.core.next(arglist__6532);
      var c1 = cljs.core.first(arglist__6532);
      arglist__6532 = cljs.core.next(arglist__6532);
      var c2 = cljs.core.first(arglist__6532);
      arglist__6532 = cljs.core.next(arglist__6532);
      var c3 = cljs.core.first(arglist__6532);
      var colls = cljs.core.rest(arglist__6532);
      return G__6531__delegate(f, c1, c2, c3, colls);
    };
    G__6531.cljs$core$IFn$_invoke$arity$variadic = G__6531__delegate;
    return G__6531;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__6534 = m__$1;
          if (G__6534) {
            var bit__4284__auto__ = G__6534.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4284__auto__ || G__6534.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__6534.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__6534);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__6534);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__6535 = sentinel;
            var G__6536 = m__$2;
            var G__6537 = cljs.core.next.call(null, ks__$1);
            sentinel = G__6535;
            m__$1 = G__6536;
            ks__$1 = G__6537;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__6538, v) {
  var vec__6540 = p__6538;
  var k = cljs.core.nth.call(null, vec__6540, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__6540, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__6541, f) {
    var vec__6551 = p__6541;
    var k = cljs.core.nth.call(null, vec__6551, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6551, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__6542, f, a) {
    var vec__6552 = p__6542;
    var k = cljs.core.nth.call(null, vec__6552, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6552, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__6543, f, a, b) {
    var vec__6553 = p__6543;
    var k = cljs.core.nth.call(null, vec__6553, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6553, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__6544, f, a, b, c) {
    var vec__6554 = p__6544;
    var k = cljs.core.nth.call(null, vec__6554, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6554, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__6556__delegate = function(m, p__6545, f, a, b, c, args) {
      var vec__6555 = p__6545;
      var k = cljs.core.nth.call(null, vec__6555, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__6555, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__6556 = function(m, p__6545, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__6556__delegate.call(this, m, p__6545, f, a, b, c, args);
    };
    G__6556.cljs$lang$maxFixedArity = 6;
    G__6556.cljs$lang$applyTo = function(arglist__6557) {
      var m = cljs.core.first(arglist__6557);
      arglist__6557 = cljs.core.next(arglist__6557);
      var p__6545 = cljs.core.first(arglist__6557);
      arglist__6557 = cljs.core.next(arglist__6557);
      var f = cljs.core.first(arglist__6557);
      arglist__6557 = cljs.core.next(arglist__6557);
      var a = cljs.core.first(arglist__6557);
      arglist__6557 = cljs.core.next(arglist__6557);
      var b = cljs.core.first(arglist__6557);
      arglist__6557 = cljs.core.next(arglist__6557);
      var c = cljs.core.first(arglist__6557);
      var args = cljs.core.rest(arglist__6557);
      return G__6556__delegate(m, p__6545, f, a, b, c, args);
    };
    G__6556.cljs$core$IFn$_invoke$arity$variadic = G__6556__delegate;
    return G__6556;
  }();
  update_in = function(m, p__6545, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__6545, f);
      case 4:
        return update_in__4.call(this, m, p__6545, f, a);
      case 5:
        return update_in__5.call(this, m, p__6545, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__6545, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__6545, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x));
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x, y));
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x, y, z));
  };
  var update__7 = function() {
    var G__6558__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x, y, z, more));
    };
    var G__6558 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__6558__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__6558.cljs$lang$maxFixedArity = 6;
    G__6558.cljs$lang$applyTo = function(arglist__6559) {
      var m = cljs.core.first(arglist__6559);
      arglist__6559 = cljs.core.next(arglist__6559);
      var k = cljs.core.first(arglist__6559);
      arglist__6559 = cljs.core.next(arglist__6559);
      var f = cljs.core.first(arglist__6559);
      arglist__6559 = cljs.core.next(arglist__6559);
      var x = cljs.core.first(arglist__6559);
      arglist__6559 = cljs.core.next(arglist__6559);
      var y = cljs.core.first(arglist__6559);
      arglist__6559 = cljs.core.next(arglist__6559);
      var z = cljs.core.first(arglist__6559);
      var more = cljs.core.rest(arglist__6559);
      return G__6558__delegate(m, k, f, x, y, z, more);
    };
    G__6558.cljs$core$IFn$_invoke$arity$variadic = G__6558__delegate;
    return G__6558;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__6560 = ll - 5;
      var G__6561 = r;
      ll = G__6560;
      ret = G__6561;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__6562 = cljs.core.pv_aget.call(null, node, 0);
      var G__6563 = level - 5;
      node = G__6562;
      level = G__6563;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__6564 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__6565 = level - 5;
        node = G__6564;
        level = G__6565;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for.call(null, self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count.call(null, v) ? cljs.core.unchecked_array_for.call(null, v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__6567 = j + 1;
              var G__6568 = init__$3;
              j = G__6567;
              init__$2 = G__6568;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6569 = i + len;
        var G__6570 = init__$2;
        i = G__6569;
        init__$1 = G__6570;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator.call(null, this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count.call(null, other)) {
      var me_iter = cljs.core._iterator.call(null, coll__$1);
      var you_iter = cljs.core._iterator.call(null, other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.call(null, x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential.call(null, coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__6571 = j + 1;
              var G__6572 = init__$3;
              j = G__6571;
              init__$2 = G__6572;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6573 = i + len;
        var G__6574 = init__$2;
        i = G__6573;
        init__$1 = G__6574;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4490__auto___6575 = len;
    var i_6576 = 0;
    while (true) {
      if (i_6576 < n__4490__auto___6575) {
        new_tail[i_6576] = self__.tail[i_6576];
        var G__6577 = i_6576 + 1;
        i_6576 = G__6577;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__6578 = null;
  var G__6578__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k);
  };
  var G__6578__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k, not_found);
  };
  G__6578 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6578__2.call(this, self__, k);
      case 3:
        return G__6578__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6578.cljs$core$IFn$_invoke$arity$2 = G__6578__2;
  G__6578.cljs$core$IFn$_invoke$arity$3 = G__6578__3;
  return G__6578;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args6566) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6566)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__6579 = i + 1;
        var G__6580 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__6579;
        out = G__6580;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__6581) {
    var args = cljs.core.seq(arglist__6581);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3920__auto__ = self__.end;
    var y__3921__auto__ = v_pos + 1;
    return x__3920__auto__ > y__3921__auto__ ? x__3920__auto__ : y__3921__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__6583 = null;
  var G__6583__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k);
  };
  var G__6583__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k, not_found);
  };
  G__6583 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6583__2.call(this, self__, k);
      case 3:
        return G__6583__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6583.cljs$core$IFn$_invoke$arity$2 = G__6583__2;
  G__6583.cljs$core$IFn$_invoke$arity$3 = G__6583__3;
  return G__6583;
}();
cljs.core.Subvec.prototype.apply = function(self__, args6582) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6582)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__6584 = meta;
      var G__6585 = v.v;
      var G__6586 = v.start + start;
      var G__6587 = v.start + end;
      var G__6588 = __hash;
      meta = G__6584;
      v = G__6585;
      start = G__6586;
      end = G__6587;
      __hash = G__6588;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj6592 = {};
    return obj6592;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__6593 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__6594 = level - 5;
        node = G__6593;
        level = G__6594;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__6596 = null;
  var G__6596__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__6596__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__6596 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6596__2.call(this, self__, k);
      case 3:
        return G__6596__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6596.cljs$core$IFn$_invoke$arity$2 = G__6596__2;
  G__6596.cljs$core$IFn$_invoke$arity$3 = G__6596__3;
  return G__6596;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args6595) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6595)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3608__auto__ = self__.front;
    if (cljs.core.truth_(or__3608__auto__)) {
      return or__3608__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3608__auto__ = self__.rear;
      if (cljs.core.truth_(or__3608__auto__)) {
        return or__3608__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__6597 = i + incr;
        i = G__6597;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__6598 = i + 1;
      var G__6599 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__6598;
      out = G__6599;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj6603 = {};
    return obj6603;
  }();
  var l = ks.length;
  var i_6604 = 0;
  while (true) {
    if (i_6604 < l) {
      var k_6605 = ks[i_6604];
      new_obj[k_6605] = obj[k_6605];
      var G__6606 = i_6604 + 1;
      i_6604 = G__6606;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6609 = cljs.core.rest.call(null, keys__$1);
        var G__6610 = init__$2;
        keys__$1 = G__6609;
        init__$1 = G__6610;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__6607_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__6607_SHARP_, self__.strobj[p1__6607_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__6611 = null;
  var G__6611__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__6611__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__6611 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6611__2.call(this, self__, k);
      case 3:
        return G__6611__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6611.cljs$core$IFn$_invoke$arity$2 = G__6611__2;
  G__6611.cljs$core$IFn$_invoke$arity$3 = G__6611__3;
  return G__6611;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args6608) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6608)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj6613 = {};
  return obj6613;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__6614 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__6614, 0, null);
    var v = cljs.core.nth.call(null, vec__6614, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__6615 = i + 2;
        i = G__6615;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__6616 = i + 2;
        i = G__6616;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__6617 = i + 2;
        i = G__6617;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__6618 = i + 2;
        i = G__6618;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__6619 = i + 2;
        i = G__6619;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_6620 = 0;
  while (true) {
    if (i_6620 < l) {
      narr[i_6620] = arr[i_6620];
      var G__6621 = i_6620 + 1;
      i_6620 = G__6621;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6623 = cljs.core.seq.call(null, coll);
  var chunk__6624 = null;
  var count__6625 = 0;
  var i__6626 = 0;
  while (true) {
    if (i__6626 < count__6625) {
      var vec__6627 = cljs.core._nth.call(null, chunk__6624, i__6626);
      var k = cljs.core.nth.call(null, vec__6627, 0, null);
      var v = cljs.core.nth.call(null, vec__6627, 1, null);
      f.call(null, v, k);
      var G__6633 = seq__6623;
      var G__6634 = chunk__6624;
      var G__6635 = count__6625;
      var G__6636 = i__6626 + 1;
      seq__6623 = G__6633;
      chunk__6624 = G__6634;
      count__6625 = G__6635;
      i__6626 = G__6636;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6623);
      if (temp__4126__auto__) {
        var seq__6623__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6623__$1)) {
          var c__4390__auto__ = cljs.core.chunk_first.call(null, seq__6623__$1);
          var G__6637 = cljs.core.chunk_rest.call(null, seq__6623__$1);
          var G__6638 = c__4390__auto__;
          var G__6639 = cljs.core.count.call(null, c__4390__auto__);
          var G__6640 = 0;
          seq__6623 = G__6637;
          chunk__6624 = G__6638;
          count__6625 = G__6639;
          i__6626 = G__6640;
          continue;
        } else {
          var vec__6628 = cljs.core.first.call(null, seq__6623__$1);
          var k = cljs.core.nth.call(null, vec__6628, 0, null);
          var v = cljs.core.nth.call(null, vec__6628, 1, null);
          f.call(null, v, k);
          var G__6641 = cljs.core.next.call(null, seq__6623__$1);
          var G__6642 = null;
          var G__6643 = 0;
          var G__6644 = 0;
          seq__6623 = G__6641;
          chunk__6624 = G__6642;
          count__6625 = G__6643;
          i__6626 = G__6644;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6645 = i + 2;
        var G__6646 = init__$2;
        i = G__6645;
        init__$1 = G__6646;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__6629 = other;
    if (G__6629) {
      var bit__4277__auto__ = G__6629.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4277__auto__ || G__6629.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === cljs.core._count.call(null, other__$1)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = cljs.core._lookup.call(null, other__$1, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.call(null, self__.arr[i + 1], v)) {
              var G__6647 = i + 2;
              i = G__6647;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map.call(null, coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj6631 = {};
    return obj6631;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__6648 = s + 2;
            var G__6649 = d;
            s = G__6648;
            d = G__6649;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__6650 = s + 2;
            var G__6651 = d + 2;
            s = G__6650;
            d = G__6651;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__6632 = cljs.core.aclone.call(null, self__.arr);
        G__6632[idx + 1] = v;
        return G__6632;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__6652 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__6653 = cljs.core.next.call(null, es);
          ret = G__6652;
          es = G__6653;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__6654 = null;
  var G__6654__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__6654__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__6654 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6654__2.call(this, self__, k);
      case 3:
        return G__6654__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6654.cljs$core$IFn$_invoke$arity$2 = G__6654__2;
  G__6654.cljs$core$IFn$_invoke$arity$3 = G__6654__3;
  return G__6654;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args6622) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6622)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__6655 = i + 2;
        var G__6656 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__6655;
        ret = G__6656;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__6657_6659 = self__.arr;
      G__6657_6659.pop();
      G__6657_6659.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__6658 = o;
      if (G__6658) {
        var bit__4284__auto__ = G__6658.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4284__auto__ || G__6658.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__6658.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6658);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6658);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__6660 = cljs.core.next.call(null, es);
          var G__6661 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__6660;
          tcoll__$2 = G__6661;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__6662 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__6663 = i + 2;
      out = G__6662;
      i = G__6663;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__6666 = cljs.core.aclone.call(null, arr);
    G__6666[i] = a;
    return G__6666;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__6667 = cljs.core.aclone.call(null, arr);
    G__6667[i] = a;
    G__6667[j] = b;
    return G__6667;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6668 = i + 2;
        var G__6669 = init__$2;
        i = G__6668;
        init__$1 = G__6669;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_6670 = 0;
        var j_6671 = 0;
        while (true) {
          if (i_6670 < 32) {
            if ((self__.bitmap >>> i_6670 & 1) === 0) {
              var G__6672 = i_6670 + 1;
              var G__6673 = j_6671;
              i_6670 = G__6672;
              j_6671 = G__6673;
              continue;
            } else {
              nodes[i_6670] = !(self__.arr[j_6671] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_6671]), self__.arr[j_6671], self__.arr[j_6671 + 1], added_leaf_QMARK_) : self__.arr[j_6671 + 1];
              var G__6674 = i_6670 + 1;
              var G__6675 = j_6671 + 2;
              i_6670 = G__6674;
              j_6671 = G__6675;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_6676 = 0;
      var j_6677 = 0;
      while (true) {
        if (i_6676 < 32) {
          if ((self__.bitmap >>> i_6676 & 1) === 0) {
            var G__6678 = i_6676 + 1;
            var G__6679 = j_6677;
            i_6676 = G__6678;
            j_6677 = G__6679;
            continue;
          } else {
            nodes[i_6676] = !(self__.arr[j_6677] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_6677]), self__.arr[j_6677], self__.arr[j_6677 + 1], added_leaf_QMARK_) : self__.arr[j_6677 + 1];
            var G__6680 = i_6676 + 1;
            var G__6681 = j_6677 + 2;
            i_6676 = G__6680;
            j_6677 = G__6681;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__6682 = i + 1;
        var G__6683 = j + 2;
        var G__6684 = bitmap | 1 << i;
        i = G__6682;
        j = G__6683;
        bitmap = G__6684;
        continue;
      } else {
        var G__6685 = i + 1;
        var G__6686 = j;
        var G__6687 = bitmap;
        i = G__6685;
        j = G__6686;
        bitmap = G__6687;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__6688 = i + 1;
          var G__6689 = init__$2;
          i = G__6688;
          init__$1 = G__6689;
          continue;
        }
      } else {
        var G__6690 = i + 1;
        var G__6691 = init__$1;
        i = G__6690;
        init__$1 = G__6691;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__6692 = i + 2;
        i = G__6692;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__6693 = j + 2;
                j = G__6693;
                continue;
              }
            } else {
              var G__6694 = j + 2;
              j = G__6694;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__6695 = j + 1;
              j = G__6695;
              continue;
            }
          } else {
            var G__6696 = j + 1;
            j = G__6696;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6698 = cljs.core.seq.call(null, coll);
  var chunk__6699 = null;
  var count__6700 = 0;
  var i__6701 = 0;
  while (true) {
    if (i__6701 < count__6700) {
      var vec__6702 = cljs.core._nth.call(null, chunk__6699, i__6701);
      var k = cljs.core.nth.call(null, vec__6702, 0, null);
      var v = cljs.core.nth.call(null, vec__6702, 1, null);
      f.call(null, v, k);
      var G__6706 = seq__6698;
      var G__6707 = chunk__6699;
      var G__6708 = count__6700;
      var G__6709 = i__6701 + 1;
      seq__6698 = G__6706;
      chunk__6699 = G__6707;
      count__6700 = G__6708;
      i__6701 = G__6709;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6698);
      if (temp__4126__auto__) {
        var seq__6698__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6698__$1)) {
          var c__4390__auto__ = cljs.core.chunk_first.call(null, seq__6698__$1);
          var G__6710 = cljs.core.chunk_rest.call(null, seq__6698__$1);
          var G__6711 = c__4390__auto__;
          var G__6712 = cljs.core.count.call(null, c__4390__auto__);
          var G__6713 = 0;
          seq__6698 = G__6710;
          chunk__6699 = G__6711;
          count__6700 = G__6712;
          i__6701 = G__6713;
          continue;
        } else {
          var vec__6703 = cljs.core.first.call(null, seq__6698__$1);
          var k = cljs.core.nth.call(null, vec__6703, 0, null);
          var v = cljs.core.nth.call(null, vec__6703, 1, null);
          f.call(null, v, k);
          var G__6714 = cljs.core.next.call(null, seq__6698__$1);
          var G__6715 = null;
          var G__6716 = 0;
          var G__6717 = 0;
          seq__6698 = G__6714;
          chunk__6699 = G__6715;
          count__6700 = G__6716;
          i__6701 = G__6717;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj6705 = {};
    return obj6705;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__6718 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__6719 = cljs.core.next.call(null, es);
          ret = G__6718;
          es = G__6719;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__6720 = null;
  var G__6720__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__6720__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__6720 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6720__2.call(this, self__, k);
      case 3:
        return G__6720__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6720.cljs$core$IFn$_invoke$arity$2 = G__6720__2;
  G__6720.cljs$core$IFn$_invoke$arity$3 = G__6720__3;
  return G__6720;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args6697) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6697)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__6721 = i + 1;
      var G__6722 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__6721;
      out = G__6722;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__6723 = o;
      if (G__6723) {
        var bit__4284__auto__ = G__6723.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4284__auto__ || G__6723.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__6723.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6723);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6723);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__6724 = cljs.core.next.call(null, es);
          var G__6725 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__6724;
          tcoll__$1 = G__6725;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__6726 = ascending_QMARK_ ? t.left : t.right;
      var G__6727 = cljs.core.conj.call(null, stack__$1, t);
      t = G__6726;
      stack__$1 = G__6727;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__6729 = null;
  var G__6729__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k);
  };
  var G__6729__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k, not_found);
  };
  G__6729 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6729__2.call(this, self__, k);
      case 3:
        return G__6729__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6729.cljs$core$IFn$_invoke$arity$2 = G__6729__2;
  G__6729.cljs$core$IFn$_invoke$arity$3 = G__6729__3;
  return G__6729;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args6728) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6728)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__6731 = null;
  var G__6731__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k);
  };
  var G__6731__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k, not_found);
  };
  G__6731 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6731__2.call(this, self__, k);
      case 3:
        return G__6731__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6731.cljs$core$IFn$_invoke$arity$2 = G__6731__2;
  G__6731.cljs$core$IFn$_invoke$arity$3 = G__6731__3;
  return G__6731;
}();
cljs.core.RedNode.prototype.apply = function(self__, args6730) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6730)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6733 = cljs.core.seq.call(null, coll);
  var chunk__6734 = null;
  var count__6735 = 0;
  var i__6736 = 0;
  while (true) {
    if (i__6736 < count__6735) {
      var vec__6737 = cljs.core._nth.call(null, chunk__6734, i__6736);
      var k = cljs.core.nth.call(null, vec__6737, 0, null);
      var v = cljs.core.nth.call(null, vec__6737, 1, null);
      f.call(null, v, k);
      var G__6739 = seq__6733;
      var G__6740 = chunk__6734;
      var G__6741 = count__6735;
      var G__6742 = i__6736 + 1;
      seq__6733 = G__6739;
      chunk__6734 = G__6740;
      count__6735 = G__6741;
      i__6736 = G__6742;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6733);
      if (temp__4126__auto__) {
        var seq__6733__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6733__$1)) {
          var c__4390__auto__ = cljs.core.chunk_first.call(null, seq__6733__$1);
          var G__6743 = cljs.core.chunk_rest.call(null, seq__6733__$1);
          var G__6744 = c__4390__auto__;
          var G__6745 = cljs.core.count.call(null, c__4390__auto__);
          var G__6746 = 0;
          seq__6733 = G__6743;
          chunk__6734 = G__6744;
          count__6735 = G__6745;
          i__6736 = G__6746;
          continue;
        } else {
          var vec__6738 = cljs.core.first.call(null, seq__6733__$1);
          var k = cljs.core.nth.call(null, vec__6738, 0, null);
          var v = cljs.core.nth.call(null, vec__6738, 1, null);
          f.call(null, v, k);
          var G__6747 = cljs.core.next.call(null, seq__6733__$1);
          var G__6748 = null;
          var G__6749 = 0;
          var G__6750 = 0;
          seq__6733 = G__6747;
          chunk__6734 = G__6748;
          count__6735 = G__6749;
          i__6736 = G__6750;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__6751 = t.left;
          t = G__6751;
          continue;
        } else {
          var G__6752 = t.right;
          t = G__6752;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__6753 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__6754 = cljs.core.next.call(null, es);
          ret = G__6753;
          es = G__6754;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__6755 = null;
  var G__6755__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__6755__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__6755 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6755__2.call(this, self__, k);
      case 3:
        return G__6755__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6755.cljs$core$IFn$_invoke$arity$2 = G__6755__2;
  G__6755.cljs$core$IFn$_invoke$arity$3 = G__6755__3;
  return G__6755;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args6732) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6732)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__6756 = cljs.core.conj.call(null, stack, t);
              var G__6757 = t.left;
              stack = G__6756;
              t = G__6757;
              continue;
            } else {
              var G__6758 = stack;
              var G__6759 = t.right;
              stack = G__6758;
              t = G__6759;
              continue;
            }
          } else {
            if (c > 0) {
              var G__6760 = cljs.core.conj.call(null, stack, t);
              var G__6761 = t.right;
              stack = G__6760;
              t = G__6761;
              continue;
            } else {
              var G__6762 = stack;
              var G__6763 = t.left;
              stack = G__6762;
              t = G__6763;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__6764 = cljs.core.nnext.call(null, in$);
        var G__6765 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6764;
        out = G__6765;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__6766) {
    var keyvals = cljs.core.seq(arglist__6766);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.call(null, cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__6767) {
    var keyvals = cljs.core.seq(arglist__6767);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj6771 = {};
      return obj6771;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__6772 = cljs.core.nnext.call(null, kvs);
        kvs = G__6772;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__6773) {
    var keyvals = cljs.core.seq(arglist__6773);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__6774 = cljs.core.nnext.call(null, in$);
        var G__6775 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6774;
        out = G__6775;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__6776) {
    var keyvals = cljs.core.seq(arglist__6776);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__6777 = cljs.core.nnext.call(null, in$);
        var G__6778 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6777;
        out = G__6778;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__6779) {
    var comparator = cljs.core.first(arglist__6779);
    var keyvals = cljs.core.rest(arglist__6779);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6780 = self__.mseq;
    if (G__6780) {
      var bit__4284__auto__ = G__6780.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4284__auto__ || G__6780.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6780.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6780);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6780);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6781 = self__.mseq;
    if (G__6781) {
      var bit__4284__auto__ = G__6781.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4284__auto__ || G__6781.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6781.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6781);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6781);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6782 = self__.mseq;
    if (G__6782) {
      var bit__4284__auto__ = G__6782.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4284__auto__ || G__6782.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6782.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6782);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6782);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6783 = self__.mseq;
    if (G__6783) {
      var bit__4284__auto__ = G__6783.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4284__auto__ || G__6783.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6783.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6783);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6783);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__6784_SHARP_, p2__6785_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3608__auto__ = p1__6784_SHARP_;
          if (cljs.core.truth_(or__3608__auto__)) {
            return or__3608__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__6785_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__6786) {
    var maps = cljs.core.seq(arglist__6786);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3608__auto__ = m1;
            if (cljs.core.truth_(or__3608__auto__)) {
              return or__3608__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__6787) {
    var f = cljs.core.first(arglist__6787);
    var maps = cljs.core.rest(arglist__6787);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__6788 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__6789 = cljs.core.next.call(null, keys);
      ret = G__6788;
      keys = G__6789;
      continue;
    } else {
      return cljs.core.with_meta.call(null, ret, cljs.core.meta.call(null, map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6792 = cljs.core.seq.call(null, coll);
  var chunk__6793 = null;
  var count__6794 = 0;
  var i__6795 = 0;
  while (true) {
    if (i__6795 < count__6794) {
      var vec__6796 = cljs.core._nth.call(null, chunk__6793, i__6795);
      var k = cljs.core.nth.call(null, vec__6796, 0, null);
      var v = cljs.core.nth.call(null, vec__6796, 1, null);
      f.call(null, v, k);
      var G__6798 = seq__6792;
      var G__6799 = chunk__6793;
      var G__6800 = count__6794;
      var G__6801 = i__6795 + 1;
      seq__6792 = G__6798;
      chunk__6793 = G__6799;
      count__6794 = G__6800;
      i__6795 = G__6801;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6792);
      if (temp__4126__auto__) {
        var seq__6792__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6792__$1)) {
          var c__4390__auto__ = cljs.core.chunk_first.call(null, seq__6792__$1);
          var G__6802 = cljs.core.chunk_rest.call(null, seq__6792__$1);
          var G__6803 = c__4390__auto__;
          var G__6804 = cljs.core.count.call(null, c__4390__auto__);
          var G__6805 = 0;
          seq__6792 = G__6802;
          chunk__6793 = G__6803;
          count__6794 = G__6804;
          i__6795 = G__6805;
          continue;
        } else {
          var vec__6797 = cljs.core.first.call(null, seq__6792__$1);
          var k = cljs.core.nth.call(null, vec__6797, 0, null);
          var v = cljs.core.nth.call(null, vec__6797, 1, null);
          f.call(null, v, k);
          var G__6806 = cljs.core.next.call(null, seq__6792__$1);
          var G__6807 = null;
          var G__6808 = 0;
          var G__6809 = 0;
          seq__6792 = G__6806;
          chunk__6793 = G__6807;
          count__6794 = G__6808;
          i__6795 = G__6809;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__6790_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__6790_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__6810 = null;
  var G__6810__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__6810__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__6810 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6810__2.call(this, self__, k);
      case 3:
        return G__6810__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6810.cljs$core$IFn$_invoke$arity$2 = G__6810__2;
  G__6810.cljs$core$IFn$_invoke$arity$3 = G__6810__3;
  return G__6810;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args6791) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6791)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__6811 = i + 1;
        var G__6812 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__6811;
        out = G__6812;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__6813 = i + 1;
        var G__6814 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__6813;
        out = G__6814;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__6816 = null;
  var G__6816__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__6816__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__6816 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6816__2.call(this, self__, k);
      case 3:
        return G__6816__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6816.cljs$core$IFn$_invoke$arity$2 = G__6816__2;
  G__6816.cljs$core$IFn$_invoke$arity$3 = G__6816__3;
  return G__6816;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args6815) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6815)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6819 = cljs.core.seq.call(null, coll);
  var chunk__6820 = null;
  var count__6821 = 0;
  var i__6822 = 0;
  while (true) {
    if (i__6822 < count__6821) {
      var vec__6823 = cljs.core._nth.call(null, chunk__6820, i__6822);
      var k = cljs.core.nth.call(null, vec__6823, 0, null);
      var v = cljs.core.nth.call(null, vec__6823, 1, null);
      f.call(null, v, k);
      var G__6825 = seq__6819;
      var G__6826 = chunk__6820;
      var G__6827 = count__6821;
      var G__6828 = i__6822 + 1;
      seq__6819 = G__6825;
      chunk__6820 = G__6826;
      count__6821 = G__6827;
      i__6822 = G__6828;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6819);
      if (temp__4126__auto__) {
        var seq__6819__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6819__$1)) {
          var c__4390__auto__ = cljs.core.chunk_first.call(null, seq__6819__$1);
          var G__6829 = cljs.core.chunk_rest.call(null, seq__6819__$1);
          var G__6830 = c__4390__auto__;
          var G__6831 = cljs.core.count.call(null, c__4390__auto__);
          var G__6832 = 0;
          seq__6819 = G__6829;
          chunk__6820 = G__6830;
          count__6821 = G__6831;
          i__6822 = G__6832;
          continue;
        } else {
          var vec__6824 = cljs.core.first.call(null, seq__6819__$1);
          var k = cljs.core.nth.call(null, vec__6824, 0, null);
          var v = cljs.core.nth.call(null, vec__6824, 1, null);
          f.call(null, v, k);
          var G__6833 = cljs.core.next.call(null, seq__6819__$1);
          var G__6834 = null;
          var G__6835 = 0;
          var G__6836 = 0;
          seq__6819 = G__6833;
          chunk__6820 = G__6834;
          count__6821 = G__6835;
          i__6822 = G__6836;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__6817_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__6817_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__6837 = null;
  var G__6837__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__6837__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__6837 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6837__2.call(this, self__, k);
      case 3:
        return G__6837__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6837.cljs$core$IFn$_invoke$arity$2 = G__6837__2;
  G__6837.cljs$core$IFn$_invoke$arity$3 = G__6837__3;
  return G__6837;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args6818) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6818)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4484__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4484__auto__.length) {
        var G__6838 = i + 1;
        var G__6839 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__6838;
        res = G__6839;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__6840 = cljs.core._next.call(null, in$__$1);
          var G__6841 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__6840;
          out = G__6841;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__6842__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__6842 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6842__delegate.call(this, keys);
    };
    G__6842.cljs$lang$maxFixedArity = 0;
    G__6842.cljs$lang$applyTo = function(arglist__6843) {
      var keys = cljs.core.seq(arglist__6843);
      return G__6842__delegate(keys);
    };
    G__6842.cljs$core$IFn$_invoke$arity$variadic = G__6842__delegate;
    return G__6842;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__6844) {
    var keys = cljs.core.seq(arglist__6844);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__6845) {
    var comparator = cljs.core.first(arglist__6845);
    var keys = cljs.core.rest(arglist__6845);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__6846_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__6846_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__6846_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__6847_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__6847_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__6847_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__6854, seen__$1) {
        while (true) {
          var vec__6855 = p__6854;
          var f = cljs.core.nth.call(null, vec__6855, 0, null);
          var xs__$1 = vec__6855;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__6856 = cljs.core.rest.call(null, s);
              var G__6857 = seen__$1;
              p__6854 = G__6856;
              seen__$1 = G__6857;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__6858 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__6859 = cljs.core.next.call(null, s__$1);
      ret = G__6858;
      s__$1 = G__6859;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__6861 = x;
    if (G__6861) {
      var bit__4277__auto__ = G__6861.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4277__auto__ || G__6861.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__6862 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__6863 = cljs.core.next.call(null, ks);
      var G__6864 = cljs.core.next.call(null, vs);
      map = G__6862;
      ks = G__6863;
      vs = G__6864;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__6867__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6865_SHARP_, p2__6866_SHARP_) {
        return max_key.call(null, k, p1__6865_SHARP_, p2__6866_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__6867 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6867__delegate.call(this, k, x, y, more);
    };
    G__6867.cljs$lang$maxFixedArity = 3;
    G__6867.cljs$lang$applyTo = function(arglist__6868) {
      var k = cljs.core.first(arglist__6868);
      arglist__6868 = cljs.core.next(arglist__6868);
      var x = cljs.core.first(arglist__6868);
      arglist__6868 = cljs.core.next(arglist__6868);
      var y = cljs.core.first(arglist__6868);
      var more = cljs.core.rest(arglist__6868);
      return G__6867__delegate(k, x, y, more);
    };
    G__6867.cljs$core$IFn$_invoke$arity$variadic = G__6867__delegate;
    return G__6867;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__6871__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6869_SHARP_, p2__6870_SHARP_) {
        return min_key.call(null, k, p1__6869_SHARP_, p2__6870_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__6871 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6871__delegate.call(this, k, x, y, more);
    };
    G__6871.cljs$lang$maxFixedArity = 3;
    G__6871.cljs$lang$applyTo = function(arglist__6872) {
      var k = cljs.core.first(arglist__6872);
      arglist__6872 = cljs.core.next(arglist__6872);
      var x = cljs.core.first(arglist__6872);
      arglist__6872 = cljs.core.next(arglist__6872);
      var y = cljs.core.first(arglist__6872);
      var more = cljs.core.rest(arglist__6872);
      return G__6871__delegate(k, x, y, more);
    };
    G__6871.cljs$core$IFn$_invoke$arity$variadic = G__6871__delegate;
    return G__6871;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__6873 = null;
          var G__6873__0 = function() {
            return rf.call(null);
          };
          var G__6873__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return cljs.core.unreduced.call(null, rf.call(null, result, v));
            }();
            return rf.call(null, result__$1);
          };
          var G__6873__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return rf.call(null, result, v);
            } else {
              return result;
            }
          };
          G__6873 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6873__0.call(this);
              case 1:
                return G__6873__1.call(this, result);
              case 2:
                return G__6873__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6873.cljs$core$IFn$_invoke$arity$0 = G__6873__0;
          G__6873.cljs$core$IFn$_invoke$arity$1 = G__6873__1;
          G__6873.cljs$core$IFn$_invoke$arity$2 = G__6873__2;
          return G__6873;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__6874 = null;
        var G__6874__0 = function() {
          return rf.call(null);
        };
        var G__6874__1 = function(result) {
          return rf.call(null, result);
        };
        var G__6874__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__6874 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__6874__0.call(this);
            case 1:
              return G__6874__1.call(this, result);
            case 2:
              return G__6874__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__6874.cljs$core$IFn$_invoke$arity$0 = G__6874__0;
        G__6874.cljs$core$IFn$_invoke$arity$1 = G__6874__1;
        G__6874.cljs$core$IFn$_invoke$arity$2 = G__6874__2;
        return G__6874;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__6877 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__6877, 0, null);
        var s = vec__6877;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__6878 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__6878, 0, null);
      var s = vec__6878;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__6881 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__6881, 0, null);
        var s = vec__6881;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__6882 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__6882, 0, null);
      var s = vec__6882;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
        return cljs.core.deref.call(null, ret__$1);
      } else {
        var G__6883 = i + self__.step;
        var G__6884 = ret__$1;
        i = G__6883;
        ret = G__6884;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__6885 = null;
          var G__6885__0 = function() {
            return rf.call(null);
          };
          var G__6885__1 = function(result) {
            return rf.call(null, result);
          };
          var G__6885__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return rf.call(null, result, input);
            } else {
              return result;
            }
          };
          G__6885 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6885__0.call(this);
              case 1:
                return G__6885__1.call(this, result);
              case 2:
                return G__6885__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6885.cljs$core$IFn$_invoke$arity$0 = G__6885__0;
          G__6885.cljs$core$IFn$_invoke$arity$1 = G__6885__1;
          G__6885.cljs$core$IFn$_invoke$arity$2 = G__6885__2;
          return G__6885;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__6887 = null;
          var G__6887__0 = function() {
            return rf.call(null);
          };
          var G__6887__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return cljs.core.unreduced.call(null, rf.call(null, result, v));
            }();
            return rf.call(null, result__$1);
          };
          var G__6887__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              var ret = rf.call(null, result, v);
              if (cljs.core.reduced_QMARK_.call(null, ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__6887 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6887__0.call(this);
              case 1:
                return G__6887__1.call(this, result);
              case 2:
                return G__6887__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6887.cljs$core$IFn$_invoke$arity$0 = G__6887__0;
          G__6887.cljs$core$IFn$_invoke$arity$1 = G__6887__1;
          G__6887.cljs$core$IFn$_invoke$arity$2 = G__6887__2;
          return G__6887;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__6886_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__6886_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__6898 = null;
      var G__6898__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__6898__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__6898__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__6898__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__6898__4 = function() {
        var G__6899__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__6899 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6899__delegate.call(this, x, y, z, args);
        };
        G__6899.cljs$lang$maxFixedArity = 3;
        G__6899.cljs$lang$applyTo = function(arglist__6900) {
          var x = cljs.core.first(arglist__6900);
          arglist__6900 = cljs.core.next(arglist__6900);
          var y = cljs.core.first(arglist__6900);
          arglist__6900 = cljs.core.next(arglist__6900);
          var z = cljs.core.first(arglist__6900);
          var args = cljs.core.rest(arglist__6900);
          return G__6899__delegate(x, y, z, args);
        };
        G__6899.cljs$core$IFn$_invoke$arity$variadic = G__6899__delegate;
        return G__6899;
      }();
      G__6898 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6898__0.call(this);
          case 1:
            return G__6898__1.call(this, x);
          case 2:
            return G__6898__2.call(this, x, y);
          case 3:
            return G__6898__3.call(this, x, y, z);
          default:
            return G__6898__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6898.cljs$lang$maxFixedArity = 3;
      G__6898.cljs$lang$applyTo = G__6898__4.cljs$lang$applyTo;
      G__6898.cljs$core$IFn$_invoke$arity$0 = G__6898__0;
      G__6898.cljs$core$IFn$_invoke$arity$1 = G__6898__1;
      G__6898.cljs$core$IFn$_invoke$arity$2 = G__6898__2;
      G__6898.cljs$core$IFn$_invoke$arity$3 = G__6898__3;
      G__6898.cljs$core$IFn$_invoke$arity$variadic = G__6898__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6898;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__6901 = null;
      var G__6901__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__6901__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__6901__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__6901__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__6901__4 = function() {
        var G__6902__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__6902 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6902__delegate.call(this, x, y, z, args);
        };
        G__6902.cljs$lang$maxFixedArity = 3;
        G__6902.cljs$lang$applyTo = function(arglist__6903) {
          var x = cljs.core.first(arglist__6903);
          arglist__6903 = cljs.core.next(arglist__6903);
          var y = cljs.core.first(arglist__6903);
          arglist__6903 = cljs.core.next(arglist__6903);
          var z = cljs.core.first(arglist__6903);
          var args = cljs.core.rest(arglist__6903);
          return G__6902__delegate(x, y, z, args);
        };
        G__6902.cljs$core$IFn$_invoke$arity$variadic = G__6902__delegate;
        return G__6902;
      }();
      G__6901 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6901__0.call(this);
          case 1:
            return G__6901__1.call(this, x);
          case 2:
            return G__6901__2.call(this, x, y);
          case 3:
            return G__6901__3.call(this, x, y, z);
          default:
            return G__6901__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6901.cljs$lang$maxFixedArity = 3;
      G__6901.cljs$lang$applyTo = G__6901__4.cljs$lang$applyTo;
      G__6901.cljs$core$IFn$_invoke$arity$0 = G__6901__0;
      G__6901.cljs$core$IFn$_invoke$arity$1 = G__6901__1;
      G__6901.cljs$core$IFn$_invoke$arity$2 = G__6901__2;
      G__6901.cljs$core$IFn$_invoke$arity$3 = G__6901__3;
      G__6901.cljs$core$IFn$_invoke$arity$variadic = G__6901__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6901;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__6904 = null;
      var G__6904__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__6904__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__6904__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__6904__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__6904__4 = function() {
        var G__6905__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__6905 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6905__delegate.call(this, x, y, z, args);
        };
        G__6905.cljs$lang$maxFixedArity = 3;
        G__6905.cljs$lang$applyTo = function(arglist__6906) {
          var x = cljs.core.first(arglist__6906);
          arglist__6906 = cljs.core.next(arglist__6906);
          var y = cljs.core.first(arglist__6906);
          arglist__6906 = cljs.core.next(arglist__6906);
          var z = cljs.core.first(arglist__6906);
          var args = cljs.core.rest(arglist__6906);
          return G__6905__delegate(x, y, z, args);
        };
        G__6905.cljs$core$IFn$_invoke$arity$variadic = G__6905__delegate;
        return G__6905;
      }();
      G__6904 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6904__0.call(this);
          case 1:
            return G__6904__1.call(this, x);
          case 2:
            return G__6904__2.call(this, x, y);
          case 3:
            return G__6904__3.call(this, x, y, z);
          default:
            return G__6904__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6904.cljs$lang$maxFixedArity = 3;
      G__6904.cljs$lang$applyTo = G__6904__4.cljs$lang$applyTo;
      G__6904.cljs$core$IFn$_invoke$arity$0 = G__6904__0;
      G__6904.cljs$core$IFn$_invoke$arity$1 = G__6904__1;
      G__6904.cljs$core$IFn$_invoke$arity$2 = G__6904__2;
      G__6904.cljs$core$IFn$_invoke$arity$3 = G__6904__3;
      G__6904.cljs$core$IFn$_invoke$arity$variadic = G__6904__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6904;
    }();
  };
  var juxt__4 = function() {
    var G__6907__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__6908 = null;
          var G__6908__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6888_SHARP_, p2__6889_SHARP_) {
                return cljs.core.conj.call(null, p1__6888_SHARP_, p2__6889_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6908__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6890_SHARP_, p2__6891_SHARP_) {
                return cljs.core.conj.call(null, p1__6890_SHARP_, p2__6891_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6908__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6892_SHARP_, p2__6893_SHARP_) {
                return cljs.core.conj.call(null, p1__6892_SHARP_, p2__6893_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6908__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6894_SHARP_, p2__6895_SHARP_) {
                return cljs.core.conj.call(null, p1__6894_SHARP_, p2__6895_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6908__4 = function() {
            var G__6909__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__6896_SHARP_, p2__6897_SHARP_) {
                  return cljs.core.conj.call(null, p1__6896_SHARP_, cljs.core.apply.call(null, p2__6897_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__6909 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6909__delegate.call(this, x, y, z, args);
            };
            G__6909.cljs$lang$maxFixedArity = 3;
            G__6909.cljs$lang$applyTo = function(arglist__6910) {
              var x = cljs.core.first(arglist__6910);
              arglist__6910 = cljs.core.next(arglist__6910);
              var y = cljs.core.first(arglist__6910);
              arglist__6910 = cljs.core.next(arglist__6910);
              var z = cljs.core.first(arglist__6910);
              var args = cljs.core.rest(arglist__6910);
              return G__6909__delegate(x, y, z, args);
            };
            G__6909.cljs$core$IFn$_invoke$arity$variadic = G__6909__delegate;
            return G__6909;
          }();
          G__6908 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__6908__0.call(this);
              case 1:
                return G__6908__1.call(this, x);
              case 2:
                return G__6908__2.call(this, x, y);
              case 3:
                return G__6908__3.call(this, x, y, z);
              default:
                return G__6908__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6908.cljs$lang$maxFixedArity = 3;
          G__6908.cljs$lang$applyTo = G__6908__4.cljs$lang$applyTo;
          G__6908.cljs$core$IFn$_invoke$arity$0 = G__6908__0;
          G__6908.cljs$core$IFn$_invoke$arity$1 = G__6908__1;
          G__6908.cljs$core$IFn$_invoke$arity$2 = G__6908__2;
          G__6908.cljs$core$IFn$_invoke$arity$3 = G__6908__3;
          G__6908.cljs$core$IFn$_invoke$arity$variadic = G__6908__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__6908;
        }();
      }(fs__$1);
    };
    var G__6907 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6907__delegate.call(this, f, g, h, fs);
    };
    G__6907.cljs$lang$maxFixedArity = 3;
    G__6907.cljs$lang$applyTo = function(arglist__6911) {
      var f = cljs.core.first(arglist__6911);
      arglist__6911 = cljs.core.next(arglist__6911);
      var g = cljs.core.first(arglist__6911);
      arglist__6911 = cljs.core.next(arglist__6911);
      var h = cljs.core.first(arglist__6911);
      var fs = cljs.core.rest(arglist__6911);
      return G__6907__delegate(f, g, h, fs);
    };
    G__6907.cljs$core$IFn$_invoke$arity$variadic = G__6907__delegate;
    return G__6907;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__6912 = cljs.core.next.call(null, coll);
        coll = G__6912;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__6913 = n - 1;
        var G__6914 = cljs.core.next.call(null, coll);
        n = G__6913;
        coll = G__6914;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__6916 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.call(null, vec__6916, 0, null);
    var flags = cljs.core.nth.call(null, vec__6916, 1, null);
    var pattern = cljs.core.nth.call(null, vec__6916, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_6918 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_6919__$1 = cljs.core.next.call(null, coll);
      var n_6920 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_6919__$1 && (n_6920 == null || !(n_6920 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_6919__$1), writer, opts);
          var G__6921 = cljs.core.next.call(null, coll_6919__$1);
          var G__6922 = n_6920 - 1;
          coll_6919__$1 = G__6921;
          n_6920 = G__6922;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_6919__$1) && n_6920 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_6918;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__6927 = cljs.core.seq.call(null, ss);
    var chunk__6928 = null;
    var count__6929 = 0;
    var i__6930 = 0;
    while (true) {
      if (i__6930 < count__6929) {
        var s = cljs.core._nth.call(null, chunk__6928, i__6930);
        cljs.core._write.call(null, writer, s);
        var G__6931 = seq__6927;
        var G__6932 = chunk__6928;
        var G__6933 = count__6929;
        var G__6934 = i__6930 + 1;
        seq__6927 = G__6931;
        chunk__6928 = G__6932;
        count__6929 = G__6933;
        i__6930 = G__6934;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__6927);
        if (temp__4126__auto__) {
          var seq__6927__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6927__$1)) {
            var c__4390__auto__ = cljs.core.chunk_first.call(null, seq__6927__$1);
            var G__6935 = cljs.core.chunk_rest.call(null, seq__6927__$1);
            var G__6936 = c__4390__auto__;
            var G__6937 = cljs.core.count.call(null, c__4390__auto__);
            var G__6938 = 0;
            seq__6927 = G__6935;
            chunk__6928 = G__6936;
            count__6929 = G__6937;
            i__6930 = G__6938;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__6927__$1);
            cljs.core._write.call(null, writer, s);
            var G__6939 = cljs.core.next.call(null, seq__6927__$1);
            var G__6940 = null;
            var G__6941 = 0;
            var G__6942 = 0;
            seq__6927 = G__6939;
            chunk__6928 = G__6940;
            count__6929 = G__6941;
            i__6930 = G__6942;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__6943) {
    var writer = cljs.core.first(arglist__6943);
    var ss = cljs.core.rest(arglist__6943);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj6945 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj6945;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3596__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3596__auto__)) {
          var and__3596__auto____$1 = function() {
            var G__6951 = obj;
            if (G__6951) {
              var bit__4284__auto__ = G__6951.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4284__auto__ || G__6951.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__6951.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6951);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6951);
            }
          }();
          if (and__3596__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3596__auto____$1;
          }
        } else {
          return and__3596__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__6952 = obj;
            if (G__6952) {
              var bit__4277__auto__ = G__6952.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4277__auto__ || G__6952.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__6954 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__6954;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__6953 = obj;
                            if (G__6953) {
                              var bit__4284__auto__ = G__6953.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4284__auto__ || G__6953.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__6953.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__6953);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__6953);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__6959 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__6960 = null;
  var count__6961 = 0;
  var i__6962 = 0;
  while (true) {
    if (i__6962 < count__6961) {
      var obj = cljs.core._nth.call(null, chunk__6960, i__6962);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__6963 = seq__6959;
      var G__6964 = chunk__6960;
      var G__6965 = count__6961;
      var G__6966 = i__6962 + 1;
      seq__6959 = G__6963;
      chunk__6960 = G__6964;
      count__6961 = G__6965;
      i__6962 = G__6966;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6959);
      if (temp__4126__auto__) {
        var seq__6959__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6959__$1)) {
          var c__4390__auto__ = cljs.core.chunk_first.call(null, seq__6959__$1);
          var G__6967 = cljs.core.chunk_rest.call(null, seq__6959__$1);
          var G__6968 = c__4390__auto__;
          var G__6969 = cljs.core.count.call(null, c__4390__auto__);
          var G__6970 = 0;
          seq__6959 = G__6967;
          chunk__6960 = G__6968;
          count__6961 = G__6969;
          i__6962 = G__6970;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__6959__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__6971 = cljs.core.next.call(null, seq__6959__$1);
          var G__6972 = null;
          var G__6973 = 0;
          var G__6974 = 0;
          seq__6959 = G__6971;
          chunk__6960 = G__6972;
          count__6961 = G__6973;
          i__6962 = G__6974;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__6975) {
    var objs = cljs.core.seq(arglist__6975);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__6976) {
    var objs = cljs.core.seq(arglist__6976);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__6977) {
    var objs = cljs.core.seq(arglist__6977);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__6978) {
    var objs = cljs.core.seq(arglist__6978);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__6979) {
    var objs = cljs.core.seq(arglist__6979);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__6980) {
    var objs = cljs.core.seq(arglist__6980);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__6981) {
    var objs = cljs.core.seq(arglist__6981);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__6982) {
    var objs = cljs.core.seq(arglist__6982);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__6983) {
    var iref = cljs.core.first(arglist__6983);
    arglist__6983 = cljs.core.next(arglist__6983);
    var f = cljs.core.first(arglist__6983);
    var args = cljs.core.rest(arglist__6983);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__6984_SHARP_, p2__6985_SHARP_) {
    var ret = rf.call(null, p1__6984_SHARP_, p2__6985_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced.call(null, rf);
  return function(rf1) {
    return function() {
      var G__6986 = null;
      var G__6986__0 = function() {
        return rf.call(null);
      };
      var G__6986__1 = function(result) {
        return rf.call(null, result);
      };
      var G__6986__2 = function(result, input) {
        return cljs.core.reduce.call(null, rf1, result, input);
      };
      G__6986 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__6986__0.call(this);
          case 1:
            return G__6986__1.call(this, result);
          case 2:
            return G__6986__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6986.cljs$core$IFn$_invoke$arity$0 = G__6986__0;
      G__6986.cljs$core$IFn$_invoke$arity$1 = G__6986__1;
      G__6986.cljs$core$IFn$_invoke$arity$2 = G__6986__2;
      return G__6986;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__6987 = null;
          var G__6987__0 = function() {
            return rf.call(null);
          };
          var G__6987__1 = function(result) {
            return rf.call(null, result);
          };
          var G__6987__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__6987 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6987__0.call(this);
              case 1:
                return G__6987__1.call(this, result);
              case 2:
                return G__6987__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6987.cljs$core$IFn$_invoke$arity$0 = G__6987__0;
          G__6987.cljs$core$IFn$_invoke$arity$1 = G__6987__1;
          G__6987.cljs$core$IFn$_invoke$arity$2 = G__6987__2;
          return G__6987;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4581__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4581__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__6989_SHARP_, p2__6988_SHARP_) {
    return proc.call(null, p2__6988_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj6991 = {};
  return obj6991;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3596__auto__ = x;
    if (and__3596__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4247__auto__ = x == null ? null : x;
    return function() {
      var or__3608__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3596__auto__ = x;
    if (and__3596__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4247__auto__ = x == null ? null : x;
    return function() {
      var or__3608__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__6993 = k;
    if (G__6993) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto__ = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return G__6993.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__6993.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6993);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6993);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__7007 = x;
      if (G__7007) {
        var bit__4284__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3608__auto__ = bit__4284__auto__;
          if (cljs.core.truth_(or__3608__auto__)) {
            return or__3608__auto__;
          } else {
            return G__7007.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__7007.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__7007);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__7007);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj7009 = {};
              return obj7009;
            }();
            var seq__7010_7020 = cljs.core.seq.call(null, x);
            var chunk__7011_7021 = null;
            var count__7012_7022 = 0;
            var i__7013_7023 = 0;
            while (true) {
              if (i__7013_7023 < count__7012_7022) {
                var vec__7014_7024 = cljs.core._nth.call(null, chunk__7011_7021, i__7013_7023);
                var k_7025 = cljs.core.nth.call(null, vec__7014_7024, 0, null);
                var v_7026 = cljs.core.nth.call(null, vec__7014_7024, 1, null);
                m[cljs.core.key__GT_js.call(null, k_7025)] = clj__GT_js.call(null, v_7026);
                var G__7027 = seq__7010_7020;
                var G__7028 = chunk__7011_7021;
                var G__7029 = count__7012_7022;
                var G__7030 = i__7013_7023 + 1;
                seq__7010_7020 = G__7027;
                chunk__7011_7021 = G__7028;
                count__7012_7022 = G__7029;
                i__7013_7023 = G__7030;
                continue;
              } else {
                var temp__4126__auto___7031 = cljs.core.seq.call(null, seq__7010_7020);
                if (temp__4126__auto___7031) {
                  var seq__7010_7032__$1 = temp__4126__auto___7031;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__7010_7032__$1)) {
                    var c__4390__auto___7033 = cljs.core.chunk_first.call(null, seq__7010_7032__$1);
                    var G__7034 = cljs.core.chunk_rest.call(null, seq__7010_7032__$1);
                    var G__7035 = c__4390__auto___7033;
                    var G__7036 = cljs.core.count.call(null, c__4390__auto___7033);
                    var G__7037 = 0;
                    seq__7010_7020 = G__7034;
                    chunk__7011_7021 = G__7035;
                    count__7012_7022 = G__7036;
                    i__7013_7023 = G__7037;
                    continue;
                  } else {
                    var vec__7015_7038 = cljs.core.first.call(null, seq__7010_7032__$1);
                    var k_7039 = cljs.core.nth.call(null, vec__7015_7038, 0, null);
                    var v_7040 = cljs.core.nth.call(null, vec__7015_7038, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_7039)] = clj__GT_js.call(null, v_7040);
                    var G__7041 = cljs.core.next.call(null, seq__7010_7032__$1);
                    var G__7042 = null;
                    var G__7043 = 0;
                    var G__7044 = 0;
                    seq__7010_7020 = G__7041;
                    chunk__7011_7021 = G__7042;
                    count__7012_7022 = G__7043;
                    i__7013_7023 = G__7044;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__7016_7045 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__7017_7046 = null;
              var count__7018_7047 = 0;
              var i__7019_7048 = 0;
              while (true) {
                if (i__7019_7048 < count__7018_7047) {
                  var x_7049__$1 = cljs.core._nth.call(null, chunk__7017_7046, i__7019_7048);
                  arr.push(x_7049__$1);
                  var G__7050 = seq__7016_7045;
                  var G__7051 = chunk__7017_7046;
                  var G__7052 = count__7018_7047;
                  var G__7053 = i__7019_7048 + 1;
                  seq__7016_7045 = G__7050;
                  chunk__7017_7046 = G__7051;
                  count__7018_7047 = G__7052;
                  i__7019_7048 = G__7053;
                  continue;
                } else {
                  var temp__4126__auto___7054 = cljs.core.seq.call(null, seq__7016_7045);
                  if (temp__4126__auto___7054) {
                    var seq__7016_7055__$1 = temp__4126__auto___7054;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__7016_7055__$1)) {
                      var c__4390__auto___7056 = cljs.core.chunk_first.call(null, seq__7016_7055__$1);
                      var G__7057 = cljs.core.chunk_rest.call(null, seq__7016_7055__$1);
                      var G__7058 = c__4390__auto___7056;
                      var G__7059 = cljs.core.count.call(null, c__4390__auto___7056);
                      var G__7060 = 0;
                      seq__7016_7045 = G__7057;
                      chunk__7017_7046 = G__7058;
                      count__7018_7047 = G__7059;
                      i__7019_7048 = G__7060;
                      continue;
                    } else {
                      var x_7061__$1 = cljs.core.first.call(null, seq__7016_7055__$1);
                      arr.push(x_7061__$1);
                      var G__7062 = cljs.core.next.call(null, seq__7016_7055__$1);
                      var G__7063 = null;
                      var G__7064 = 0;
                      var G__7065 = 0;
                      seq__7016_7045 = G__7062;
                      chunk__7017_7046 = G__7063;
                      count__7018_7047 = G__7064;
                      i__7019_7048 = G__7065;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj7067 = {};
  return obj7067;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3596__auto__ = x;
    if (and__3596__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4247__auto__ = x == null ? null : x;
    return function() {
      var or__3608__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__7090__delegate = function(x, opts) {
      var map__7079 = opts;
      var map__7079__$1 = cljs.core.seq_QMARK_.call(null, map__7079) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7079) : map__7079;
      var keywordize_keys = cljs.core.get.call(null, map__7079__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__7079, map__7079__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__7085 = x__$1;
            if (G__7085) {
              var bit__4284__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3608__auto__ = bit__4284__auto__;
                if (cljs.core.truth_(or__3608__auto__)) {
                  return or__3608__auto__;
                } else {
                  return G__7085.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__7085.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__7085);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__7085);
            }
          }()) {
            return cljs.core._js__GT_clj.call(null, x__$1, cljs.core.apply.call(null, cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_.call(null, x__$1)) {
              return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (cljs.core.type.call(null, x__$1) === Object) {
                    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4359__auto__ = function(map__7079, map__7079__$1, keywordize_keys, keyfn) {
                        return function iter__7086(s__7087) {
                          return new cljs.core.LazySeq(null, function(map__7079, map__7079__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__7087__$1 = s__7087;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq.call(null, s__7087__$1);
                                if (temp__4126__auto__) {
                                  var s__7087__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__7087__$2)) {
                                    var c__4357__auto__ = cljs.core.chunk_first.call(null, s__7087__$2);
                                    var size__4358__auto__ = cljs.core.count.call(null, c__4357__auto__);
                                    var b__7089 = cljs.core.chunk_buffer.call(null, size__4358__auto__);
                                    if (function() {
                                      var i__7088 = 0;
                                      while (true) {
                                        if (i__7088 < size__4358__auto__) {
                                          var k = cljs.core._nth.call(null, c__4357__auto__, i__7088);
                                          cljs.core.chunk_append.call(null, b__7089, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                          var G__7091 = i__7088 + 1;
                                          i__7088 = G__7091;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7089), iter__7086.call(null, cljs.core.chunk_rest.call(null, s__7087__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7089), null);
                                    }
                                  } else {
                                    var k = cljs.core.first.call(null, s__7087__$2);
                                    return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__7086.call(null, cljs.core.rest.call(null, s__7087__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__7079, map__7079__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__7079, map__7079__$1, keywordize_keys, keyfn);
                      return iter__4359__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__7079, map__7079__$1, keywordize_keys, keyfn);
      return f.call(null, x);
    };
    var G__7090 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__7090__delegate.call(this, x, opts);
    };
    G__7090.cljs$lang$maxFixedArity = 1;
    G__7090.cljs$lang$applyTo = function(arglist__7092) {
      var x = cljs.core.first(arglist__7092);
      var opts = cljs.core.rest(arglist__7092);
      return G__7090__delegate(x, opts);
    };
    G__7090.cljs$core$IFn$_invoke$arity$variadic = G__7090__delegate;
    return G__7090;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__7093__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__7093 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__7093__delegate.call(this, args);
      };
      G__7093.cljs$lang$maxFixedArity = 0;
      G__7093.cljs$lang$applyTo = function(arglist__7094) {
        var args = cljs.core.seq(arglist__7094);
        return G__7093__delegate(args);
      };
      G__7093.cljs$core$IFn$_invoke$arity$variadic = G__7093__delegate;
      return G__7093;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__7095 = ret;
        f = G__7095;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__7096__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__7096 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__7096__delegate.call(this, f, args);
    };
    G__7096.cljs$lang$maxFixedArity = 1;
    G__7096.cljs$lang$applyTo = function(arglist__7097) {
      var f = cljs.core.first(arglist__7097);
      var args = cljs.core.rest(arglist__7097);
      return G__7096__delegate(f, args);
    };
    G__7096.cljs$core$IFn$_invoke$arity$variadic = G__7096__delegate;
    return G__7096;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__7098) {
    var f = cljs.core.first(arglist__7098);
    var args = cljs.core.rest(arglist__7098);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3608__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3608__auto__) {
      return or__3608__auto__;
    } else {
      var or__3608__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3608__auto____$1) {
        return or__3608__auto____$1;
      } else {
        var and__3596__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3596__auto__) {
          var and__3596__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3596__auto____$1) {
            var and__3596__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3596__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__7099 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__7100 = i + 1;
                  ret = G__7099;
                  i = G__7100;
                  continue;
                }
                break;
              }
            } else {
              return and__3596__auto____$2;
            }
          } else {
            return and__3596__auto____$1;
          }
        } else {
          return and__3596__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3608__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3608__auto__)) {
      return or__3608__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__7101_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__7101_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__7101_SHARP_), cljs.core.second.call(null, p1__7101_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__7102_SHARP_, p2__7103_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__7102_SHARP_, p2__7103_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3608__auto__ = cljs.core.truth_(function() {
    var and__3596__auto__ = xprefs;
    if (cljs.core.truth_(and__3596__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3596__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3608__auto__)) {
    return or__3608__auto__;
  } else {
    var or__3608__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__7104 = cljs.core.rest.call(null, ps);
          ps = G__7104;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3608__auto____$1)) {
      return or__3608__auto____$1;
    } else {
      var or__3608__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__7105 = cljs.core.rest.call(null, ps);
            ps = G__7105;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3608__auto____$2)) {
        return or__3608__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3608__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3608__auto__)) {
    return or__3608__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__7108) {
    var vec__7109 = p__7108;
    var k = cljs.core.nth.call(null, vec__7109, 0, null);
    var _ = cljs.core.nth.call(null, vec__7109, 1, null);
    var e = vec__7109;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3608__auto__ = be == null;
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj7111 = {};
  return obj7111;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3596__auto__ = mf;
    if (and__3596__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4247__auto__ = mf == null ? null : mf;
    return function() {
      var or__3608__auto__ = cljs.core._reset[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._reset["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3596__auto__ = mf;
    if (and__3596__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4247__auto__ = mf == null ? null : mf;
    return function() {
      var or__3608__auto__ = cljs.core._add_method[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._add_method["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3596__auto__ = mf;
    if (and__3596__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4247__auto__ = mf == null ? null : mf;
    return function() {
      var or__3608__auto__ = cljs.core._remove_method[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._remove_method["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3596__auto__ = mf;
    if (and__3596__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4247__auto__ = mf == null ? null : mf;
    return function() {
      var or__3608__auto__ = cljs.core._prefer_method[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3596__auto__ = mf;
    if (and__3596__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4247__auto__ = mf == null ? null : mf;
    return function() {
      var or__3608__auto__ = cljs.core._get_method[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._get_method["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3596__auto__ = mf;
    if (and__3596__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4247__auto__ = mf == null ? null : mf;
    return function() {
      var or__3608__auto__ = cljs.core._methods[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._methods["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3596__auto__ = mf;
    if (and__3596__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4247__auto__ = mf == null ? null : mf;
    return function() {
      var or__3608__auto__ = cljs.core._prefers[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core._prefers["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name.call(null, self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace.call(null, self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__7113 = null;
  var G__7113__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null);
  };
  var G__7113__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__7113__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__7113__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__7113__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__7113__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__7113__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__7113__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__7113__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__7113__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__7113__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__7113__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__7113__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__7113__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__7113__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__7113__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__7113__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__7113__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__7113__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__7113__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__7113__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__7113__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__7113 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__7113__1.call(this, self__);
      case 2:
        return G__7113__2.call(this, self__, a);
      case 3:
        return G__7113__3.call(this, self__, a, b);
      case 4:
        return G__7113__4.call(this, self__, a, b, c);
      case 5:
        return G__7113__5.call(this, self__, a, b, c, d);
      case 6:
        return G__7113__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__7113__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__7113__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__7113__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__7113__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__7113__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__7113__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__7113__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__7113__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__7113__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__7113__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__7113__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__7113__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__7113__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__7113__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__7113__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__7113__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7113.cljs$core$IFn$_invoke$arity$1 = G__7113__1;
  G__7113.cljs$core$IFn$_invoke$arity$2 = G__7113__2;
  G__7113.cljs$core$IFn$_invoke$arity$3 = G__7113__3;
  G__7113.cljs$core$IFn$_invoke$arity$4 = G__7113__4;
  G__7113.cljs$core$IFn$_invoke$arity$5 = G__7113__5;
  G__7113.cljs$core$IFn$_invoke$arity$6 = G__7113__6;
  G__7113.cljs$core$IFn$_invoke$arity$7 = G__7113__7;
  G__7113.cljs$core$IFn$_invoke$arity$8 = G__7113__8;
  G__7113.cljs$core$IFn$_invoke$arity$9 = G__7113__9;
  G__7113.cljs$core$IFn$_invoke$arity$10 = G__7113__10;
  G__7113.cljs$core$IFn$_invoke$arity$11 = G__7113__11;
  G__7113.cljs$core$IFn$_invoke$arity$12 = G__7113__12;
  G__7113.cljs$core$IFn$_invoke$arity$13 = G__7113__13;
  G__7113.cljs$core$IFn$_invoke$arity$14 = G__7113__14;
  G__7113.cljs$core$IFn$_invoke$arity$15 = G__7113__15;
  G__7113.cljs$core$IFn$_invoke$arity$16 = G__7113__16;
  G__7113.cljs$core$IFn$_invoke$arity$17 = G__7113__17;
  G__7113.cljs$core$IFn$_invoke$arity$18 = G__7113__18;
  G__7113.cljs$core$IFn$_invoke$arity$19 = G__7113__19;
  G__7113.cljs$core$IFn$_invoke$arity$20 = G__7113__20;
  G__7113.cljs$core$IFn$_invoke$arity$21 = G__7113__21;
  G__7113.cljs$core$IFn$_invoke$arity$22 = G__7113__22;
  return G__7113;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args7112) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args7112)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var a = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__7114) {
    var opts__5210__auto__ = cljs.core.first(arglist__7114);
    var children__5211__auto__ = cljs.core.rest(arglist__7114);
    return a__delegate(opts__5210__auto__, children__5211__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var abbr = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__7115) {
    var opts__5210__auto__ = cljs.core.first(arglist__7115);
    var children__5211__auto__ = cljs.core.rest(arglist__7115);
    return abbr__delegate(opts__5210__auto__, children__5211__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var address = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__7116) {
    var opts__5210__auto__ = cljs.core.first(arglist__7116);
    var children__5211__auto__ = cljs.core.rest(arglist__7116);
    return address__delegate(opts__5210__auto__, children__5211__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var area = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__7117) {
    var opts__5210__auto__ = cljs.core.first(arglist__7117);
    var children__5211__auto__ = cljs.core.rest(arglist__7117);
    return area__delegate(opts__5210__auto__, children__5211__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var article = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__7118) {
    var opts__5210__auto__ = cljs.core.first(arglist__7118);
    var children__5211__auto__ = cljs.core.rest(arglist__7118);
    return article__delegate(opts__5210__auto__, children__5211__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var aside = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__7119) {
    var opts__5210__auto__ = cljs.core.first(arglist__7119);
    var children__5211__auto__ = cljs.core.rest(arglist__7119);
    return aside__delegate(opts__5210__auto__, children__5211__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var audio = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__7120) {
    var opts__5210__auto__ = cljs.core.first(arglist__7120);
    var children__5211__auto__ = cljs.core.rest(arglist__7120);
    return audio__delegate(opts__5210__auto__, children__5211__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var b = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__7121) {
    var opts__5210__auto__ = cljs.core.first(arglist__7121);
    var children__5211__auto__ = cljs.core.rest(arglist__7121);
    return b__delegate(opts__5210__auto__, children__5211__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var base = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__7122) {
    var opts__5210__auto__ = cljs.core.first(arglist__7122);
    var children__5211__auto__ = cljs.core.rest(arglist__7122);
    return base__delegate(opts__5210__auto__, children__5211__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var bdi = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__7123) {
    var opts__5210__auto__ = cljs.core.first(arglist__7123);
    var children__5211__auto__ = cljs.core.rest(arglist__7123);
    return bdi__delegate(opts__5210__auto__, children__5211__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var bdo = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__7124) {
    var opts__5210__auto__ = cljs.core.first(arglist__7124);
    var children__5211__auto__ = cljs.core.rest(arglist__7124);
    return bdo__delegate(opts__5210__auto__, children__5211__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var big = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__7125) {
    var opts__5210__auto__ = cljs.core.first(arglist__7125);
    var children__5211__auto__ = cljs.core.rest(arglist__7125);
    return big__delegate(opts__5210__auto__, children__5211__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var blockquote = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__7126) {
    var opts__5210__auto__ = cljs.core.first(arglist__7126);
    var children__5211__auto__ = cljs.core.rest(arglist__7126);
    return blockquote__delegate(opts__5210__auto__, children__5211__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var body = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__7127) {
    var opts__5210__auto__ = cljs.core.first(arglist__7127);
    var children__5211__auto__ = cljs.core.rest(arglist__7127);
    return body__delegate(opts__5210__auto__, children__5211__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var br = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__7128) {
    var opts__5210__auto__ = cljs.core.first(arglist__7128);
    var children__5211__auto__ = cljs.core.rest(arglist__7128);
    return br__delegate(opts__5210__auto__, children__5211__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var button = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__7129) {
    var opts__5210__auto__ = cljs.core.first(arglist__7129);
    var children__5211__auto__ = cljs.core.rest(arglist__7129);
    return button__delegate(opts__5210__auto__, children__5211__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var canvas = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__7130) {
    var opts__5210__auto__ = cljs.core.first(arglist__7130);
    var children__5211__auto__ = cljs.core.rest(arglist__7130);
    return canvas__delegate(opts__5210__auto__, children__5211__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var caption = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__7131) {
    var opts__5210__auto__ = cljs.core.first(arglist__7131);
    var children__5211__auto__ = cljs.core.rest(arglist__7131);
    return caption__delegate(opts__5210__auto__, children__5211__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var cite = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__7132) {
    var opts__5210__auto__ = cljs.core.first(arglist__7132);
    var children__5211__auto__ = cljs.core.rest(arglist__7132);
    return cite__delegate(opts__5210__auto__, children__5211__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var code = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__7133) {
    var opts__5210__auto__ = cljs.core.first(arglist__7133);
    var children__5211__auto__ = cljs.core.rest(arglist__7133);
    return code__delegate(opts__5210__auto__, children__5211__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var col = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__7134) {
    var opts__5210__auto__ = cljs.core.first(arglist__7134);
    var children__5211__auto__ = cljs.core.rest(arglist__7134);
    return col__delegate(opts__5210__auto__, children__5211__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var colgroup = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__7135) {
    var opts__5210__auto__ = cljs.core.first(arglist__7135);
    var children__5211__auto__ = cljs.core.rest(arglist__7135);
    return colgroup__delegate(opts__5210__auto__, children__5211__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var data = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__7136) {
    var opts__5210__auto__ = cljs.core.first(arglist__7136);
    var children__5211__auto__ = cljs.core.rest(arglist__7136);
    return data__delegate(opts__5210__auto__, children__5211__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var datalist = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__7137) {
    var opts__5210__auto__ = cljs.core.first(arglist__7137);
    var children__5211__auto__ = cljs.core.rest(arglist__7137);
    return datalist__delegate(opts__5210__auto__, children__5211__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var dd = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__7138) {
    var opts__5210__auto__ = cljs.core.first(arglist__7138);
    var children__5211__auto__ = cljs.core.rest(arglist__7138);
    return dd__delegate(opts__5210__auto__, children__5211__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var del = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__7139) {
    var opts__5210__auto__ = cljs.core.first(arglist__7139);
    var children__5211__auto__ = cljs.core.rest(arglist__7139);
    return del__delegate(opts__5210__auto__, children__5211__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var dfn = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__7140) {
    var opts__5210__auto__ = cljs.core.first(arglist__7140);
    var children__5211__auto__ = cljs.core.rest(arglist__7140);
    return dfn__delegate(opts__5210__auto__, children__5211__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var div = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__7141) {
    var opts__5210__auto__ = cljs.core.first(arglist__7141);
    var children__5211__auto__ = cljs.core.rest(arglist__7141);
    return div__delegate(opts__5210__auto__, children__5211__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var dl = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__7142) {
    var opts__5210__auto__ = cljs.core.first(arglist__7142);
    var children__5211__auto__ = cljs.core.rest(arglist__7142);
    return dl__delegate(opts__5210__auto__, children__5211__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var dt = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__7143) {
    var opts__5210__auto__ = cljs.core.first(arglist__7143);
    var children__5211__auto__ = cljs.core.rest(arglist__7143);
    return dt__delegate(opts__5210__auto__, children__5211__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var em = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__7144) {
    var opts__5210__auto__ = cljs.core.first(arglist__7144);
    var children__5211__auto__ = cljs.core.rest(arglist__7144);
    return em__delegate(opts__5210__auto__, children__5211__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var embed = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__7145) {
    var opts__5210__auto__ = cljs.core.first(arglist__7145);
    var children__5211__auto__ = cljs.core.rest(arglist__7145);
    return embed__delegate(opts__5210__auto__, children__5211__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var fieldset = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__7146) {
    var opts__5210__auto__ = cljs.core.first(arglist__7146);
    var children__5211__auto__ = cljs.core.rest(arglist__7146);
    return fieldset__delegate(opts__5210__auto__, children__5211__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var figcaption = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__7147) {
    var opts__5210__auto__ = cljs.core.first(arglist__7147);
    var children__5211__auto__ = cljs.core.rest(arglist__7147);
    return figcaption__delegate(opts__5210__auto__, children__5211__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var figure = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__7148) {
    var opts__5210__auto__ = cljs.core.first(arglist__7148);
    var children__5211__auto__ = cljs.core.rest(arglist__7148);
    return figure__delegate(opts__5210__auto__, children__5211__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var footer = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__7149) {
    var opts__5210__auto__ = cljs.core.first(arglist__7149);
    var children__5211__auto__ = cljs.core.rest(arglist__7149);
    return footer__delegate(opts__5210__auto__, children__5211__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var form = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__7150) {
    var opts__5210__auto__ = cljs.core.first(arglist__7150);
    var children__5211__auto__ = cljs.core.rest(arglist__7150);
    return form__delegate(opts__5210__auto__, children__5211__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var h1 = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__7151) {
    var opts__5210__auto__ = cljs.core.first(arglist__7151);
    var children__5211__auto__ = cljs.core.rest(arglist__7151);
    return h1__delegate(opts__5210__auto__, children__5211__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var h2 = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__7152) {
    var opts__5210__auto__ = cljs.core.first(arglist__7152);
    var children__5211__auto__ = cljs.core.rest(arglist__7152);
    return h2__delegate(opts__5210__auto__, children__5211__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var h3 = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__7153) {
    var opts__5210__auto__ = cljs.core.first(arglist__7153);
    var children__5211__auto__ = cljs.core.rest(arglist__7153);
    return h3__delegate(opts__5210__auto__, children__5211__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var h4 = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__7154) {
    var opts__5210__auto__ = cljs.core.first(arglist__7154);
    var children__5211__auto__ = cljs.core.rest(arglist__7154);
    return h4__delegate(opts__5210__auto__, children__5211__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var h5 = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__7155) {
    var opts__5210__auto__ = cljs.core.first(arglist__7155);
    var children__5211__auto__ = cljs.core.rest(arglist__7155);
    return h5__delegate(opts__5210__auto__, children__5211__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var h6 = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__7156) {
    var opts__5210__auto__ = cljs.core.first(arglist__7156);
    var children__5211__auto__ = cljs.core.rest(arglist__7156);
    return h6__delegate(opts__5210__auto__, children__5211__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var head = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__7157) {
    var opts__5210__auto__ = cljs.core.first(arglist__7157);
    var children__5211__auto__ = cljs.core.rest(arglist__7157);
    return head__delegate(opts__5210__auto__, children__5211__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var header = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__7158) {
    var opts__5210__auto__ = cljs.core.first(arglist__7158);
    var children__5211__auto__ = cljs.core.rest(arglist__7158);
    return header__delegate(opts__5210__auto__, children__5211__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var hr = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__7159) {
    var opts__5210__auto__ = cljs.core.first(arglist__7159);
    var children__5211__auto__ = cljs.core.rest(arglist__7159);
    return hr__delegate(opts__5210__auto__, children__5211__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var html = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__7160) {
    var opts__5210__auto__ = cljs.core.first(arglist__7160);
    var children__5211__auto__ = cljs.core.rest(arglist__7160);
    return html__delegate(opts__5210__auto__, children__5211__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var i = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__7161) {
    var opts__5210__auto__ = cljs.core.first(arglist__7161);
    var children__5211__auto__ = cljs.core.rest(arglist__7161);
    return i__delegate(opts__5210__auto__, children__5211__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var iframe = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__7162) {
    var opts__5210__auto__ = cljs.core.first(arglist__7162);
    var children__5211__auto__ = cljs.core.rest(arglist__7162);
    return iframe__delegate(opts__5210__auto__, children__5211__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var img = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__7163) {
    var opts__5210__auto__ = cljs.core.first(arglist__7163);
    var children__5211__auto__ = cljs.core.rest(arglist__7163);
    return img__delegate(opts__5210__auto__, children__5211__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var ins = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__7164) {
    var opts__5210__auto__ = cljs.core.first(arglist__7164);
    var children__5211__auto__ = cljs.core.rest(arglist__7164);
    return ins__delegate(opts__5210__auto__, children__5211__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var kbd = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__7165) {
    var opts__5210__auto__ = cljs.core.first(arglist__7165);
    var children__5211__auto__ = cljs.core.rest(arglist__7165);
    return kbd__delegate(opts__5210__auto__, children__5211__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var keygen = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__7166) {
    var opts__5210__auto__ = cljs.core.first(arglist__7166);
    var children__5211__auto__ = cljs.core.rest(arglist__7166);
    return keygen__delegate(opts__5210__auto__, children__5211__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var label = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__7167) {
    var opts__5210__auto__ = cljs.core.first(arglist__7167);
    var children__5211__auto__ = cljs.core.rest(arglist__7167);
    return label__delegate(opts__5210__auto__, children__5211__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var legend = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__7168) {
    var opts__5210__auto__ = cljs.core.first(arglist__7168);
    var children__5211__auto__ = cljs.core.rest(arglist__7168);
    return legend__delegate(opts__5210__auto__, children__5211__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var li = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__7169) {
    var opts__5210__auto__ = cljs.core.first(arglist__7169);
    var children__5211__auto__ = cljs.core.rest(arglist__7169);
    return li__delegate(opts__5210__auto__, children__5211__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var link = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__7170) {
    var opts__5210__auto__ = cljs.core.first(arglist__7170);
    var children__5211__auto__ = cljs.core.rest(arglist__7170);
    return link__delegate(opts__5210__auto__, children__5211__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var main = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__7171) {
    var opts__5210__auto__ = cljs.core.first(arglist__7171);
    var children__5211__auto__ = cljs.core.rest(arglist__7171);
    return main__delegate(opts__5210__auto__, children__5211__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var map = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__7172) {
    var opts__5210__auto__ = cljs.core.first(arglist__7172);
    var children__5211__auto__ = cljs.core.rest(arglist__7172);
    return map__delegate(opts__5210__auto__, children__5211__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var mark = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__7173) {
    var opts__5210__auto__ = cljs.core.first(arglist__7173);
    var children__5211__auto__ = cljs.core.rest(arglist__7173);
    return mark__delegate(opts__5210__auto__, children__5211__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var menu = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__7174) {
    var opts__5210__auto__ = cljs.core.first(arglist__7174);
    var children__5211__auto__ = cljs.core.rest(arglist__7174);
    return menu__delegate(opts__5210__auto__, children__5211__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var menuitem = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__7175) {
    var opts__5210__auto__ = cljs.core.first(arglist__7175);
    var children__5211__auto__ = cljs.core.rest(arglist__7175);
    return menuitem__delegate(opts__5210__auto__, children__5211__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var meta = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__7176) {
    var opts__5210__auto__ = cljs.core.first(arglist__7176);
    var children__5211__auto__ = cljs.core.rest(arglist__7176);
    return meta__delegate(opts__5210__auto__, children__5211__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var meter = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__7177) {
    var opts__5210__auto__ = cljs.core.first(arglist__7177);
    var children__5211__auto__ = cljs.core.rest(arglist__7177);
    return meter__delegate(opts__5210__auto__, children__5211__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var nav = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__7178) {
    var opts__5210__auto__ = cljs.core.first(arglist__7178);
    var children__5211__auto__ = cljs.core.rest(arglist__7178);
    return nav__delegate(opts__5210__auto__, children__5211__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var noscript = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__7179) {
    var opts__5210__auto__ = cljs.core.first(arglist__7179);
    var children__5211__auto__ = cljs.core.rest(arglist__7179);
    return noscript__delegate(opts__5210__auto__, children__5211__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var object = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__7180) {
    var opts__5210__auto__ = cljs.core.first(arglist__7180);
    var children__5211__auto__ = cljs.core.rest(arglist__7180);
    return object__delegate(opts__5210__auto__, children__5211__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var ol = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__7181) {
    var opts__5210__auto__ = cljs.core.first(arglist__7181);
    var children__5211__auto__ = cljs.core.rest(arglist__7181);
    return ol__delegate(opts__5210__auto__, children__5211__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var optgroup = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__7182) {
    var opts__5210__auto__ = cljs.core.first(arglist__7182);
    var children__5211__auto__ = cljs.core.rest(arglist__7182);
    return optgroup__delegate(opts__5210__auto__, children__5211__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var output = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__7183) {
    var opts__5210__auto__ = cljs.core.first(arglist__7183);
    var children__5211__auto__ = cljs.core.rest(arglist__7183);
    return output__delegate(opts__5210__auto__, children__5211__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var p = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__7184) {
    var opts__5210__auto__ = cljs.core.first(arglist__7184);
    var children__5211__auto__ = cljs.core.rest(arglist__7184);
    return p__delegate(opts__5210__auto__, children__5211__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var param = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__7185) {
    var opts__5210__auto__ = cljs.core.first(arglist__7185);
    var children__5211__auto__ = cljs.core.rest(arglist__7185);
    return param__delegate(opts__5210__auto__, children__5211__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var pre = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__7186) {
    var opts__5210__auto__ = cljs.core.first(arglist__7186);
    var children__5211__auto__ = cljs.core.rest(arglist__7186);
    return pre__delegate(opts__5210__auto__, children__5211__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var progress = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__7187) {
    var opts__5210__auto__ = cljs.core.first(arglist__7187);
    var children__5211__auto__ = cljs.core.rest(arglist__7187);
    return progress__delegate(opts__5210__auto__, children__5211__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var q = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__7188) {
    var opts__5210__auto__ = cljs.core.first(arglist__7188);
    var children__5211__auto__ = cljs.core.rest(arglist__7188);
    return q__delegate(opts__5210__auto__, children__5211__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var rp = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__7189) {
    var opts__5210__auto__ = cljs.core.first(arglist__7189);
    var children__5211__auto__ = cljs.core.rest(arglist__7189);
    return rp__delegate(opts__5210__auto__, children__5211__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var rt = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__7190) {
    var opts__5210__auto__ = cljs.core.first(arglist__7190);
    var children__5211__auto__ = cljs.core.rest(arglist__7190);
    return rt__delegate(opts__5210__auto__, children__5211__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var ruby = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__7191) {
    var opts__5210__auto__ = cljs.core.first(arglist__7191);
    var children__5211__auto__ = cljs.core.rest(arglist__7191);
    return ruby__delegate(opts__5210__auto__, children__5211__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var s = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__7192) {
    var opts__5210__auto__ = cljs.core.first(arglist__7192);
    var children__5211__auto__ = cljs.core.rest(arglist__7192);
    return s__delegate(opts__5210__auto__, children__5211__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var samp = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__7193) {
    var opts__5210__auto__ = cljs.core.first(arglist__7193);
    var children__5211__auto__ = cljs.core.rest(arglist__7193);
    return samp__delegate(opts__5210__auto__, children__5211__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var script = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__7194) {
    var opts__5210__auto__ = cljs.core.first(arglist__7194);
    var children__5211__auto__ = cljs.core.rest(arglist__7194);
    return script__delegate(opts__5210__auto__, children__5211__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var section = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__7195) {
    var opts__5210__auto__ = cljs.core.first(arglist__7195);
    var children__5211__auto__ = cljs.core.rest(arglist__7195);
    return section__delegate(opts__5210__auto__, children__5211__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var select = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__7196) {
    var opts__5210__auto__ = cljs.core.first(arglist__7196);
    var children__5211__auto__ = cljs.core.rest(arglist__7196);
    return select__delegate(opts__5210__auto__, children__5211__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var small = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__7197) {
    var opts__5210__auto__ = cljs.core.first(arglist__7197);
    var children__5211__auto__ = cljs.core.rest(arglist__7197);
    return small__delegate(opts__5210__auto__, children__5211__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var source = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__7198) {
    var opts__5210__auto__ = cljs.core.first(arglist__7198);
    var children__5211__auto__ = cljs.core.rest(arglist__7198);
    return source__delegate(opts__5210__auto__, children__5211__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var span = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__7199) {
    var opts__5210__auto__ = cljs.core.first(arglist__7199);
    var children__5211__auto__ = cljs.core.rest(arglist__7199);
    return span__delegate(opts__5210__auto__, children__5211__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var strong = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__7200) {
    var opts__5210__auto__ = cljs.core.first(arglist__7200);
    var children__5211__auto__ = cljs.core.rest(arglist__7200);
    return strong__delegate(opts__5210__auto__, children__5211__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var style = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__7201) {
    var opts__5210__auto__ = cljs.core.first(arglist__7201);
    var children__5211__auto__ = cljs.core.rest(arglist__7201);
    return style__delegate(opts__5210__auto__, children__5211__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var sub = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__7202) {
    var opts__5210__auto__ = cljs.core.first(arglist__7202);
    var children__5211__auto__ = cljs.core.rest(arglist__7202);
    return sub__delegate(opts__5210__auto__, children__5211__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var summary = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__7203) {
    var opts__5210__auto__ = cljs.core.first(arglist__7203);
    var children__5211__auto__ = cljs.core.rest(arglist__7203);
    return summary__delegate(opts__5210__auto__, children__5211__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var sup = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__7204) {
    var opts__5210__auto__ = cljs.core.first(arglist__7204);
    var children__5211__auto__ = cljs.core.rest(arglist__7204);
    return sup__delegate(opts__5210__auto__, children__5211__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var table = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__7205) {
    var opts__5210__auto__ = cljs.core.first(arglist__7205);
    var children__5211__auto__ = cljs.core.rest(arglist__7205);
    return table__delegate(opts__5210__auto__, children__5211__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var tbody = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__7206) {
    var opts__5210__auto__ = cljs.core.first(arglist__7206);
    var children__5211__auto__ = cljs.core.rest(arglist__7206);
    return tbody__delegate(opts__5210__auto__, children__5211__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var td = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__7207) {
    var opts__5210__auto__ = cljs.core.first(arglist__7207);
    var children__5211__auto__ = cljs.core.rest(arglist__7207);
    return td__delegate(opts__5210__auto__, children__5211__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var tfoot = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__7208) {
    var opts__5210__auto__ = cljs.core.first(arglist__7208);
    var children__5211__auto__ = cljs.core.rest(arglist__7208);
    return tfoot__delegate(opts__5210__auto__, children__5211__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var th = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__7209) {
    var opts__5210__auto__ = cljs.core.first(arglist__7209);
    var children__5211__auto__ = cljs.core.rest(arglist__7209);
    return th__delegate(opts__5210__auto__, children__5211__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var thead = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__7210) {
    var opts__5210__auto__ = cljs.core.first(arglist__7210);
    var children__5211__auto__ = cljs.core.rest(arglist__7210);
    return thead__delegate(opts__5210__auto__, children__5211__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var time = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__7211) {
    var opts__5210__auto__ = cljs.core.first(arglist__7211);
    var children__5211__auto__ = cljs.core.rest(arglist__7211);
    return time__delegate(opts__5210__auto__, children__5211__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var title = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__7212) {
    var opts__5210__auto__ = cljs.core.first(arglist__7212);
    var children__5211__auto__ = cljs.core.rest(arglist__7212);
    return title__delegate(opts__5210__auto__, children__5211__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var tr = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__7213) {
    var opts__5210__auto__ = cljs.core.first(arglist__7213);
    var children__5211__auto__ = cljs.core.rest(arglist__7213);
    return tr__delegate(opts__5210__auto__, children__5211__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var track = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__7214) {
    var opts__5210__auto__ = cljs.core.first(arglist__7214);
    var children__5211__auto__ = cljs.core.rest(arglist__7214);
    return track__delegate(opts__5210__auto__, children__5211__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var u = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__7215) {
    var opts__5210__auto__ = cljs.core.first(arglist__7215);
    var children__5211__auto__ = cljs.core.rest(arglist__7215);
    return u__delegate(opts__5210__auto__, children__5211__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var ul = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__7216) {
    var opts__5210__auto__ = cljs.core.first(arglist__7216);
    var children__5211__auto__ = cljs.core.rest(arglist__7216);
    return ul__delegate(opts__5210__auto__, children__5211__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var var$ = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__7217) {
    var opts__5210__auto__ = cljs.core.first(arglist__7217);
    var children__5211__auto__ = cljs.core.rest(arglist__7217);
    return var$__delegate(opts__5210__auto__, children__5211__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var video = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__7218) {
    var opts__5210__auto__ = cljs.core.first(arglist__7218);
    var children__5211__auto__ = cljs.core.rest(arglist__7218);
    return video__delegate(opts__5210__auto__, children__5211__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var wbr = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__7219) {
    var opts__5210__auto__ = cljs.core.first(arglist__7219);
    var children__5211__auto__ = cljs.core.rest(arglist__7219);
    return wbr__delegate(opts__5210__auto__, children__5211__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var circle = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__7220) {
    var opts__5210__auto__ = cljs.core.first(arglist__7220);
    var children__5211__auto__ = cljs.core.rest(arglist__7220);
    return circle__delegate(opts__5210__auto__, children__5211__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var ellipse = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__7221) {
    var opts__5210__auto__ = cljs.core.first(arglist__7221);
    var children__5211__auto__ = cljs.core.rest(arglist__7221);
    return ellipse__delegate(opts__5210__auto__, children__5211__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var g = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__7222) {
    var opts__5210__auto__ = cljs.core.first(arglist__7222);
    var children__5211__auto__ = cljs.core.rest(arglist__7222);
    return g__delegate(opts__5210__auto__, children__5211__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var line = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__7223) {
    var opts__5210__auto__ = cljs.core.first(arglist__7223);
    var children__5211__auto__ = cljs.core.rest(arglist__7223);
    return line__delegate(opts__5210__auto__, children__5211__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var path = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__7224) {
    var opts__5210__auto__ = cljs.core.first(arglist__7224);
    var children__5211__auto__ = cljs.core.rest(arglist__7224);
    return path__delegate(opts__5210__auto__, children__5211__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var polyline = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__7225) {
    var opts__5210__auto__ = cljs.core.first(arglist__7225);
    var children__5211__auto__ = cljs.core.rest(arglist__7225);
    return polyline__delegate(opts__5210__auto__, children__5211__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var rect = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__7226) {
    var opts__5210__auto__ = cljs.core.first(arglist__7226);
    var children__5211__auto__ = cljs.core.rest(arglist__7226);
    return rect__delegate(opts__5210__auto__, children__5211__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var svg = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__7227) {
    var opts__5210__auto__ = cljs.core.first(arglist__7227);
    var children__5211__auto__ = cljs.core.rest(arglist__7227);
    return svg__delegate(opts__5210__auto__, children__5211__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var text = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__7228) {
    var opts__5210__auto__ = cljs.core.first(arglist__7228);
    var children__5211__auto__ = cljs.core.rest(arglist__7228);
    return text__delegate(opts__5210__auto__, children__5211__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var defs = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__7229) {
    var opts__5210__auto__ = cljs.core.first(arglist__7229);
    var children__5211__auto__ = cljs.core.rest(arglist__7229);
    return defs__delegate(opts__5210__auto__, children__5211__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var linearGradient = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__7230) {
    var opts__5210__auto__ = cljs.core.first(arglist__7230);
    var children__5211__auto__ = cljs.core.rest(arglist__7230);
    return linearGradient__delegate(opts__5210__auto__, children__5211__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var polygon = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__7231) {
    var opts__5210__auto__ = cljs.core.first(arglist__7231);
    var children__5211__auto__ = cljs.core.rest(arglist__7231);
    return polygon__delegate(opts__5210__auto__, children__5211__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var radialGradient = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__7232) {
    var opts__5210__auto__ = cljs.core.first(arglist__7232);
    var children__5211__auto__ = cljs.core.rest(arglist__7232);
    return radialGradient__delegate(opts__5210__auto__, children__5211__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var stop = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__7233) {
    var opts__5210__auto__ = cljs.core.first(arglist__7233);
    var children__5211__auto__ = cljs.core.rest(arglist__7233);
    return stop__delegate(opts__5210__auto__, children__5211__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.tspan = function() {
  var tspan__delegate = function(opts__5210__auto__, children__5211__auto__) {
    return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5210__auto__, children__5211__auto__)));
  };
  var tspan = function(opts__5210__auto__, var_args) {
    var children__5211__auto__ = null;
    if (arguments.length > 1) {
      children__5211__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tspan__delegate.call(this, opts__5210__auto__, children__5211__auto__);
  };
  tspan.cljs$lang$maxFixedArity = 1;
  tspan.cljs$lang$applyTo = function(arglist__7234) {
    var opts__5210__auto__ = cljs.core.first(arglist__7234);
    var children__5211__auto__ = cljs.core.rest(arglist__7234);
    return tspan__delegate(opts__5210__auto__, children__5211__auto__);
  };
  tspan.cljs$core$IFn$_invoke$arity$variadic = tspan__delegate;
  return tspan;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj7236 = {};
  return obj7236;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core.display_name[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core.display_name["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj7238 = {};
  return obj7238;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core.init_state[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core.init_state["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj7240 = {};
  return obj7240;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core.should_update[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core.should_update["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj7242 = {};
  return obj7242;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core.will_mount[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core.will_mount["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj7244 = {};
  return obj7244;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core.did_mount[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core.did_mount["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj7246 = {};
  return obj7246;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core.will_unmount[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core.will_unmount["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj7248 = {};
  return obj7248;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core.will_update[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core.will_update["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj7250 = {};
  return obj7250;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core.did_update[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core.did_update["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj7252 = {};
  return obj7252;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core.will_receive_props[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core.will_receive_props["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj7254 = {};
  return obj7254;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core.render[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core.render["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj7256 = {};
  return obj7256;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core.render_state[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core.render_state["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj7258 = {};
  return obj7258;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj7260 = {};
  return obj7260;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = om.core._get_state[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = om.core._get_state["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = om.core._get_state[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = om.core._get_state["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj7262 = {};
  return obj7262;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = om.core._get_render_state[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = om.core._get_render_state["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = om.core._get_render_state[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = om.core._get_render_state["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj7264 = {};
  return obj7264;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3596__auto__ = this$;
      if (and__3596__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4247__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3608__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj7266 = {};
  return obj7266;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core._get_queue[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._get_queue["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj7268 = {};
  return obj7268;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3596__auto__ = x;
    if (and__3596__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4247__auto__ = x == null ? null : x;
    return function() {
      var or__3608__auto__ = om.core._value[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._value["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj7270 = {};
  return obj7270;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3596__auto__ = cursor;
    if (and__3596__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4247__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3608__auto__ = om.core._path[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._path["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3596__auto__ = cursor;
    if (and__3596__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4247__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3608__auto__ = om.core._state[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._state["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj7272 = {};
  return obj7272;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3596__auto__ = value;
      if (and__3596__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4247__auto__ = value == null ? null : value;
      return function() {
        var or__3608__auto__ = om.core._to_cursor[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = om.core._to_cursor["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3596__auto__ = value;
      if (and__3596__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4247__auto__ = value == null ? null : value;
      return function() {
        var or__3608__auto__ = om.core._to_cursor[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = om.core._to_cursor["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj7274 = {};
  return obj7274;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3596__auto__ = cursor;
    if (and__3596__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4247__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3608__auto__ = om.core._derive[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._derive["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj7276 = {};
  return obj7276;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3596__auto__ = cursor;
    if (and__3596__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4247__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3608__auto__ = om.core._transact_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj7278 = {};
  return obj7278;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3596__auto__ = x;
    if (and__3596__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4247__auto__ = x == null ? null : x;
    return function() {
      var or__3608__auto__ = om.core._listen_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3596__auto__ = x;
    if (and__3596__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4247__auto__ = x == null ? null : x;
    return function() {
      var or__3608__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3596__auto__ = x;
    if (and__3596__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4247__auto__ = x == null ? null : x;
    return function() {
      var or__3608__auto__ = om.core._notify_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__7280 = state;
    if (G__7280) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto__ = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return G__7280.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__7280.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__7280);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__7280);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__7282 = x;
  if (G__7282) {
    var bit__4284__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3608__auto__ = bit__4284__auto__;
      if (cljs.core.truth_(or__3608__auto__)) {
        return or__3608__auto__;
      } else {
        return G__7282.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__7282.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__7282);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__7282);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_7284 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7284;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__7286 = state;
    G__7286["__om_prev_state"] = state["__om_state"];
    G__7286["__om_state"] = pending_state;
    G__7286["__om_pending_state"] = null;
    return G__7286;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3608__auto__ = props;
      if (cljs.core.truth_(or__3608__auto__)) {
        return or__3608__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3608__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__7287 = c;
    if (G__7287) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto__ = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return G__7287.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__7287.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__7287);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__7287);
    }
  }()) {
    var state_7314 = this$.state;
    var _STAR_read_enabled_STAR_7288_7315 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3608__auto__ = state_7314["__om_prev_state"];
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return state_7314["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7288_7315;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__7289 = c;
    if (G__7289) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto__ = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return G__7289.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__7289.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__7289);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__7289);
    }
  }()) {
    var _STAR_read_enabled_STAR_7290 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7290;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__7291 = c;
    if (G__7291) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto__ = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return G__7291.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__7291.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__7291);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__7291);
    }
  }()) {
    var _STAR_read_enabled_STAR_7292 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7292;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_7293 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__7294 = c;
      if (G__7294) {
        var bit__4284__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3608__auto__ = bit__4284__auto__;
          if (cljs.core.truth_(or__3608__auto__)) {
            return or__3608__auto__;
          } else {
            return G__7294.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__7294.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__7294);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__7294);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      var cursor = props["__om_cursor"];
      var next_cursor = next_props["__om_cursor"];
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
        return true;
      } else {
        if (om.core.cursor_QMARK_.call(null, cursor) && om.core.cursor_QMARK_.call(null, next_cursor) && cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor))) {
          return true;
        } else {
          if (!(state["__om_pending_state"] == null)) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7293;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_7295 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__7296 = c;
      if (G__7296) {
        var bit__4284__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3608__auto__ = bit__4284__auto__;
          if (cljs.core.truth_(or__3608__auto__)) {
            return or__3608__auto__;
          } else {
            return G__7296.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__7296.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__7296);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__7296);
      }
    }()) {
      var _STAR_parent_STAR_7297 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_7298 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_7299 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_7299;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_7298;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_7297;
      }
    } else {
      if (function() {
        var G__7300 = c;
        if (G__7300) {
          var bit__4284__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3608__auto__ = bit__4284__auto__;
            if (cljs.core.truth_(or__3608__auto__)) {
              return or__3608__auto__;
            } else {
              return G__7300.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__7300.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__7300);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__7300);
        }
      }()) {
        var _STAR_parent_STAR_7301 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_7302 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_7303 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_7303;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_7302;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_7301;
        }
      } else {
        return c;
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7295;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_7316 = om.core.children.call(null, this$);
  if (function() {
    var G__7304 = c_7316;
    if (G__7304) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto__ = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return G__7304.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__7304.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__7304);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__7304);
    }
  }()) {
    var state_7317 = this$.state;
    var _STAR_read_enabled_STAR_7305_7318 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_7316, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7305_7318;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3608__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3608__auto__)) {
      return or__3608__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__7306 = c;
    if (G__7306) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto__ = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return G__7306.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__7306.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__7306);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__7306);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_7307 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7307;
    }
  }() : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3608__auto__ = id;
    if (cljs.core.truth_(or__3608__auto__)) {
      return or__3608__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__7308 = c;
    if (G__7308) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto__ = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return G__7308.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__7308.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__7308);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__7308);
    }
  }()) {
    var _STAR_read_enabled_STAR_7309 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7309;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__7310 = c;
    if (G__7310) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto__ = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return G__7310.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__7310.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__7310);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__7310);
    }
  }()) {
    var _STAR_read_enabled_STAR_7311 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7311;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_7319 = om.core.children.call(null, this$);
  if (function() {
    var G__7312 = c_7319;
    if (G__7312) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto__ = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return G__7312.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__7312.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__7312);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__7312);
    }
  }()) {
    var _STAR_read_enabled_STAR_7313_7320 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_7319);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7313_7320;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x7324 = obj;
  x7324.om$core$IGetState$ = true;
  x7324.om$core$IGetState$_get_state$arity$1 = function(x7324) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3608__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3608__auto__)) {
        return or__3608__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x7324);
  x7324.om$core$IGetState$_get_state$arity$2 = function(x7324) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x7324);
  x7324.om$core$IGetRenderState$ = true;
  x7324.om$core$IGetRenderState$_get_render_state$arity$1 = function(x7324) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x7324);
  x7324.om$core$IGetRenderState$_get_render_state$arity$2 = function(x7324) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x7324);
  x7324.om$core$ISetState$ = true;
  x7324.om$core$ISetState$_set_state_BANG_$arity$3 = function(x7324) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_7325 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.truth_(function() {
          var and__3596__auto__ = !(app_state == null);
          if (and__3596__auto__) {
            return render;
          } else {
            return and__3596__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7325;
      }
    };
  }(x7324);
  x7324.om$core$ISetState$_set_state_BANG_$arity$4 = function(x7324) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_7326 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.truth_(function() {
          var and__3596__auto__ = !(app_state == null);
          if (and__3596__auto__) {
            return render;
          } else {
            return and__3596__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7326;
      }
    };
  }(x7324);
  return x7324;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2162591503;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__7328) {
          var vec__7329 = p__7328;
          var k = cljs.core.nth.call(null, vec__7329, 0, null);
          var v = cljs.core.nth.call(null, vec__7329, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__7330 = null;
  var G__7330__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__7330__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__7330 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7330__2.call(this, self__, k);
      case 3:
        return G__7330__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7330.cljs$core$IFn$_invoke$arity$2 = G__7330__2;
  G__7330.cljs$core$IFn$_invoke$arity$3 = G__7330__3;
  return G__7330;
}();
om.core.MapCursor.prototype.apply = function(self__, args7327) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args7327)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "om.core/MapCursor");
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2179375903;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__7332 = null;
  var G__7332__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__7332__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__7332 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7332__2.call(this, self__, k);
      case 3:
        return G__7332__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7332.cljs$core$IFn$_invoke$arity$2 = G__7332__2;
  G__7332.cljs$core$IFn$_invoke$arity$3 = G__7332__3;
  return G__7332;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args7331) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args7331)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "om.core/IndexedCursor");
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x7334 = cljs.core.clone.call(null, val);
  x7334.cljs$core$IEquiv$ = true;
  x7334.cljs$core$IEquiv$_equiv$arity$2 = function(x7334) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
      }
    };
  }(x7334);
  x7334.om$core$ITransact$ = true;
  x7334.om$core$ITransact$_transact_BANG_$arity$4 = function(x7334) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x7334);
  x7334.om$core$ICursor$ = true;
  x7334.om$core$ICursor$_path$arity$1 = function(x7334) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x7334);
  x7334.om$core$ICursor$_state$arity$1 = function(x7334) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x7334);
  x7334.cljs$core$IDeref$ = true;
  x7334.cljs$core$IDeref$_deref$arity$1 = function(x7334) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
      }
    };
  }(x7334);
  return x7334;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__7337 = val;
        if (G__7337) {
          var bit__4284__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3608__auto__ = bit__4284__auto__;
            if (cljs.core.truth_(or__3608__auto__)) {
              return or__3608__auto__;
            } else {
              return G__7337.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__7337.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__7337);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__7337);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__7338 = val;
              if (G__7338) {
                var bit__4284__auto__ = G__7338.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4284__auto__ || G__7338.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__7338.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__7338);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__7338);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__7343 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__7344 = null;
  var count__7345 = 0;
  var i__7346 = 0;
  while (true) {
    if (i__7346 < count__7345) {
      var f = cljs.core._nth.call(null, chunk__7344, i__7346);
      f.call(null);
      var G__7347 = seq__7343;
      var G__7348 = chunk__7344;
      var G__7349 = count__7345;
      var G__7350 = i__7346 + 1;
      seq__7343 = G__7347;
      chunk__7344 = G__7348;
      count__7345 = G__7349;
      i__7346 = G__7350;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__7343);
      if (temp__4126__auto__) {
        var seq__7343__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__7343__$1)) {
          var c__4390__auto__ = cljs.core.chunk_first.call(null, seq__7343__$1);
          var G__7351 = cljs.core.chunk_rest.call(null, seq__7343__$1);
          var G__7352 = c__4390__auto__;
          var G__7353 = cljs.core.count.call(null, c__4390__auto__);
          var G__7354 = 0;
          seq__7343 = G__7351;
          chunk__7344 = G__7352;
          count__7345 = G__7353;
          i__7346 = G__7354;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__7343__$1);
          f.call(null);
          var G__7355 = cljs.core.next.call(null, seq__7343__$1);
          var G__7356 = null;
          var G__7357 = 0;
          var G__7358 = 0;
          seq__7343 = G__7355;
          chunk__7344 = G__7356;
          count__7345 = G__7357;
          i__7346 = G__7358;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3608__auto__ = function() {
      var G__7363 = x;
      if (G__7363) {
        var bit__4284__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3608__auto__ = bit__4284__auto__;
          if (cljs.core.truth_(or__3608__auto__)) {
            return or__3608__auto__;
          } else {
            return G__7363.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__7363.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__7363);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__7363);
      }
    }();
    if (or__3608__auto__) {
      return or__3608__auto__;
    } else {
      var G__7364 = x;
      if (G__7364) {
        var bit__4284__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3608__auto____$1 = bit__4284__auto__;
          if (cljs.core.truth_(or__3608__auto____$1)) {
            return or__3608__auto____$1;
          } else {
            return G__7364.om$core$IRenderState$;
          }
        }())) {
          return true;
        } else {
          if (!G__7364.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__7364);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__7364);
      }
    }
  }()) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Om component fn, "), cljs.core.str(f.name), cljs.core.str(" does not return valid instance")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, null), new cljs.core.Symbol(null, 
    "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))))].join(""));
  }
};
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createClass(function() {
        var or__3608__auto__ = descriptor;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return om.core.pure_descriptor;
        }
      }());
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1428119148, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null))))].join(""));
    }
    if (m == null) {
      var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      var ctor = om.core.get_descriptor.call(null, f);
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_7369 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7369;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__7370 = m;
      var map__7370__$1 = cljs.core.seq_QMARK_.call(null, map__7370) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7370) : map__7370;
      var opts = cljs.core.get.call(null, map__7370__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__7370__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__7370__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key = cljs.core.get.call(null, map__7370__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3608__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__7370, map__7370__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_7371 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7371;
          }
        };
      }(map__7370, map__7370__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__7370, map__7370__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_7372 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7372;
          }
        };
      }(map__7370, map__7370__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_7374 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_7374;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__7383 = state;
    if (G__7383) {
      var bit__4284__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3608__auto__ = bit__4284__auto__;
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return G__7383.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__7383.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__7383);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__7383);
    }
  }()) {
  } else {
    var listeners_7391 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_7392 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x7384_7393 = state;
    x7384_7393.om$core$IRenderQueue$ = true;
    x7384_7393.om$core$IRenderQueue$_get_queue$arity$1 = function(x7384_7393, listeners_7391, render_queue_7392) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_7392);
      };
    }(x7384_7393, listeners_7391, render_queue_7392);
    x7384_7393.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x7384_7393, listeners_7391, render_queue_7392) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_7392), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_7392, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x7384_7393, listeners_7391, render_queue_7392);
    x7384_7393.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x7384_7393, listeners_7391, render_queue_7392) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_7392, cljs.core.empty);
      };
    }(x7384_7393, listeners_7391, render_queue_7392);
    x7384_7393.om$core$INotify$ = true;
    x7384_7393.om$core$INotify$_listen_BANG_$arity$3 = function(x7384_7393, listeners_7391, render_queue_7392) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_7391, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x7384_7393, listeners_7391, render_queue_7392);
    x7384_7393.om$core$INotify$_unlisten_BANG_$arity$2 = function(x7384_7393, listeners_7391, render_queue_7392) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_7391, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x7384_7393, listeners_7391, render_queue_7392);
    x7384_7393.om$core$INotify$_notify_BANG_$arity$3 = function(x7384_7393, listeners_7391, render_queue_7392) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__7385_7394 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_7391));
        var chunk__7386_7395 = null;
        var count__7387_7396 = 0;
        var i__7388_7397 = 0;
        while (true) {
          if (i__7388_7397 < count__7387_7396) {
            var vec__7389_7398 = cljs.core._nth.call(null, chunk__7386_7395, i__7388_7397);
            var __7399 = cljs.core.nth.call(null, vec__7389_7398, 0, null);
            var f_7400 = cljs.core.nth.call(null, vec__7389_7398, 1, null);
            f_7400.call(null, tx_data, root_cursor);
            var G__7401 = seq__7385_7394;
            var G__7402 = chunk__7386_7395;
            var G__7403 = count__7387_7396;
            var G__7404 = i__7388_7397 + 1;
            seq__7385_7394 = G__7401;
            chunk__7386_7395 = G__7402;
            count__7387_7396 = G__7403;
            i__7388_7397 = G__7404;
            continue;
          } else {
            var temp__4126__auto___7405 = cljs.core.seq.call(null, seq__7385_7394);
            if (temp__4126__auto___7405) {
              var seq__7385_7406__$1 = temp__4126__auto___7405;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__7385_7406__$1)) {
                var c__4390__auto___7407 = cljs.core.chunk_first.call(null, seq__7385_7406__$1);
                var G__7408 = cljs.core.chunk_rest.call(null, seq__7385_7406__$1);
                var G__7409 = c__4390__auto___7407;
                var G__7410 = cljs.core.count.call(null, c__4390__auto___7407);
                var G__7411 = 0;
                seq__7385_7394 = G__7408;
                chunk__7386_7395 = G__7409;
                count__7387_7396 = G__7410;
                i__7388_7397 = G__7411;
                continue;
              } else {
                var vec__7390_7412 = cljs.core.first.call(null, seq__7385_7406__$1);
                var __7413 = cljs.core.nth.call(null, vec__7390_7412, 0, null);
                var f_7414 = cljs.core.nth.call(null, vec__7390_7412, 1, null);
                f_7414.call(null, tx_data, root_cursor);
                var G__7415 = cljs.core.next.call(null, seq__7385_7406__$1);
                var G__7416 = null;
                var G__7417 = 0;
                var G__7418 = 0;
                seq__7385_7394 = G__7415;
                chunk__7386_7395 = G__7416;
                count__7387_7396 = G__7417;
                i__7388_7397 = G__7418;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x7384_7393, listeners_7391, render_queue_7392);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__7419) {
  var map__7434 = p__7419;
  var map__7434__$1 = cljs.core.seq_QMARK_.call(null, map__7434) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7434) : map__7434;
  var options = map__7434__$1;
  var instrument = cljs.core.get.call(null, map__7434__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__7434__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__7434__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__7434__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__7448 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__7448, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__7448, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__7435 = value;
    if (G__7435) {
      var bit__4284__auto__ = G__7435.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4284__auto__ || G__7435.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__7435.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__7435);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__7435);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168));
  var rootf = function(watch_key, state, state__$1, m, map__7434, map__7434__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_7442 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_7443 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_7443;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_7442;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__7444_7449 = cljs.core.seq.call(null, queue);
        var chunk__7445_7450 = null;
        var count__7446_7451 = 0;
        var i__7447_7452 = 0;
        while (true) {
          if (i__7447_7452 < count__7446_7451) {
            var c_7453 = cljs.core._nth.call(null, chunk__7445_7450, i__7447_7452);
            if (cljs.core.truth_(c_7453.isMounted())) {
              c_7453.forceUpdate();
            } else {
            }
            var G__7454 = seq__7444_7449;
            var G__7455 = chunk__7445_7450;
            var G__7456 = count__7446_7451;
            var G__7457 = i__7447_7452 + 1;
            seq__7444_7449 = G__7454;
            chunk__7445_7450 = G__7455;
            count__7446_7451 = G__7456;
            i__7447_7452 = G__7457;
            continue;
          } else {
            var temp__4126__auto___7458 = cljs.core.seq.call(null, seq__7444_7449);
            if (temp__4126__auto___7458) {
              var seq__7444_7459__$1 = temp__4126__auto___7458;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__7444_7459__$1)) {
                var c__4390__auto___7460 = cljs.core.chunk_first.call(null, seq__7444_7459__$1);
                var G__7461 = cljs.core.chunk_rest.call(null, seq__7444_7459__$1);
                var G__7462 = c__4390__auto___7460;
                var G__7463 = cljs.core.count.call(null, c__4390__auto___7460);
                var G__7464 = 0;
                seq__7444_7449 = G__7461;
                chunk__7445_7450 = G__7462;
                count__7446_7451 = G__7463;
                i__7447_7452 = G__7464;
                continue;
              } else {
                var c_7465 = cljs.core.first.call(null, seq__7444_7459__$1);
                if (cljs.core.truth_(c_7465.isMounted())) {
                  c_7465.forceUpdate();
                } else {
                }
                var G__7466 = cljs.core.next.call(null, seq__7444_7459__$1);
                var G__7467 = null;
                var G__7468 = 0;
                var G__7469 = 0;
                seq__7444_7449 = G__7466;
                chunk__7445_7450 = G__7467;
                count__7446_7451 = G__7468;
                i__7447_7452 = G__7469;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__7434, map__7434__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__7434, map__7434__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__7434, map__7434__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__7434, map__7434__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__7434, map__7434__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("cljs.demo");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
cljs.core.enable_console_print_BANG_.call(null);
console.log("hi cljs");
cljs.demo.stripe = function stripe(text, bgc) {
  var st = {"backgroundColor":bgc};
  return React.DOM.li({"style":st}, text);
};
cljs.demo.app_data = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "users", "users", -713552705), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Ben", new cljs.core.Keyword(null, "country", "country", 312965309), "Bangladesh", new cljs.core.Keyword(null, "email", "email", 1415816706), "benb@mit.edu"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Alyssa", new cljs.core.Keyword(null, "country", "country", 312965309), "Bulgary", new cljs.core.Keyword(null, "email", "email", 1415816706), "aphacker@mit.edu"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Eva", new cljs.core.Keyword(null, "country", "country", 312965309), "Germany", new cljs.core.Keyword(null, "email", "email", 1415816706), "eval@mit.edu"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Louis", new cljs.core.Keyword(null, "country", "country", 312965309), "Brazil", new cljs.core.Keyword(null, "email", "email", 1415816706), "prolog@mit.edu"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Cy", new cljs.core.Keyword(null, "country", "country", 312965309), "China", new cljs.core.Keyword(null, "email", "email", 1415816706), "bugs@mit.edu"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Lem", new cljs.core.Keyword(null, "country", "country", 312965309), "Switzerland", new cljs.core.Keyword(null, "email", "email", 1415816706), "morebugs@mit.edu"], null)], null)], null));
cljs.demo.users_view = function users_view(user, xx) {
  if (typeof cljs.demo.t9824 !== "undefined") {
  } else {
    cljs.demo.t9824 = function(xx, user, users_view, meta9825) {
      this.xx = xx;
      this.user = user;
      this.users_view = users_view;
      this.meta9825 = meta9825;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.demo.t9824.prototype.om$core$IRender$ = true;
    cljs.demo.t9824.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return React.DOM.tr(null, React.DOM.td(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(self__.user)), React.DOM.td(null, (new cljs.core.Keyword(null, "country", "country", 312965309)).cljs$core$IFn$_invoke$arity$1(self__.user)), React.DOM.td(null, (new cljs.core.Keyword(null, "email", "email", 1415816706)).cljs$core$IFn$_invoke$arity$1(self__.user)));
    };
    cljs.demo.t9824.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9826) {
      var self__ = this;
      var _9826__$1 = this;
      return self__.meta9825;
    };
    cljs.demo.t9824.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9826, meta9825__$1) {
      var self__ = this;
      var _9826__$1 = this;
      return new cljs.demo.t9824(self__.xx, self__.user, self__.users_view, meta9825__$1);
    };
    cljs.demo.t9824.cljs$lang$type = true;
    cljs.demo.t9824.cljs$lang$ctorStr = "cljs.demo/t9824";
    cljs.demo.t9824.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
      return cljs.core._write.call(null, writer__4191__auto__, "cljs.demo/t9824");
    };
    cljs.demo.__GT_t9824 = function __GT_t9824(xx__$1, user__$1, users_view__$1, meta9825) {
      return new cljs.demo.t9824(xx__$1, user__$1, users_view__$1, meta9825);
    };
  }
  return new cljs.demo.t9824(xx, user, users_view, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 44, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 40, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 34, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/saiberz/projects/wsclj/src/cljs/demo.cljs"], null));
};
cljs.demo.appfunction = function appfunction(data, xx) {
  if (typeof cljs.demo.t9830 !== "undefined") {
  } else {
    cljs.demo.t9830 = function(xx, data, appfunction, meta9831) {
      this.xx = xx;
      this.data = data;
      this.appfunction = appfunction;
      this.meta9831 = meta9831;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.demo.t9830.prototype.om$core$IRender$ = true;
    cljs.demo.t9830.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return React.DOM.div({"className":"div1"}, React.DOM.table({"className":"table"}, cljs.core.apply.call(null, om.dom.tbody, null, om.core.build_all.call(null, cljs.demo.users_view, (new cljs.core.Keyword(null, "users", "users", -713552705)).cljs$core$IFn$_invoke$arity$1(self__.data)))));
    };
    cljs.demo.t9830.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9832) {
      var self__ = this;
      var _9832__$1 = this;
      return self__.meta9831;
    };
    cljs.demo.t9830.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9832, meta9831__$1) {
      var self__ = this;
      var _9832__$1 = this;
      return new cljs.demo.t9830(self__.xx, self__.data, self__.appfunction, meta9831__$1);
    };
    cljs.demo.t9830.cljs$lang$type = true;
    cljs.demo.t9830.cljs$lang$ctorStr = "cljs.demo/t9830";
    cljs.demo.t9830.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
      return cljs.core._write.call(null, writer__4191__auto__, "cljs.demo/t9830");
    };
    cljs.demo.__GT_t9830 = function __GT_t9830(xx__$1, data__$1, appfunction__$1, meta9831) {
      return new cljs.demo.t9830(xx__$1, data__$1, appfunction__$1, meta9831);
    };
  }
  return new cljs.demo.t9830(xx, data, appfunction, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 78, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 49, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 43, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/saiberz/projects/wsclj/src/cljs/demo.cljs"], null));
};
om.core.root.call(null, cljs.demo.appfunction, cljs.demo.app_data, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById("demo")], null));
cljs.demo.add_message = function add_message(x) {
  return console.log(x.data);
};
cljs.demo.socket = new WebSocket("ws://localhost:8080/ws");
cljs.demo.socket.onopen = function(x) {
  return cljs.demo.socket.send("new");
};
cljs.demo.socket.onmessage = cljs.demo.add_message;
cljs.demo.send_to_server = function send_to_server() {
  var m = $.trim($("#message").val());
  return cljs.demo.socket.send(m);
};
$("#send").click(cljs.demo.send_to_server);
